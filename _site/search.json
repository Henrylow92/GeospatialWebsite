[
  {
    "objectID": "In_Class_Ex/In_Class_Ex_01/in_class_ex_01.html",
    "href": "In_Class_Ex/In_Class_Ex_01/in_class_ex_01.html",
    "title": "In Class Exercise 01",
    "section": "",
    "text": "Quarto Logo"
  },
  {
    "objectID": "In_Class_Ex/In_Class_Ex_01/in_class_ex_01.html#quarto",
    "href": "In_Class_Ex/In_Class_Ex_01/in_class_ex_01.html#quarto",
    "title": "In Class Exercise 01",
    "section": "Quarto",
    "text": "Quarto\nQuarto enables you to weave together content and executable code into a finished document. To learn more about Quarto see https://quarto.org."
  },
  {
    "objectID": "In_Class_Ex/In_Class_Ex_01/in_class_ex_01.html#running-code",
    "href": "In_Class_Ex/In_Class_Ex_01/in_class_ex_01.html#running-code",
    "title": "In Class Exercise 01",
    "section": "Running Code",
    "text": "Running Code\nWhen you click the Render button a document will be generated that includes both content and the output of embedded code. You can embed code like this:\n\n1 + 1\n\n[1] 2\n\n\nYou can add options to executable code like this\n\n\n[1] 4\n\n\nThe echo: false option disables the printing of code (only output is displayed)."
  },
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "About",
    "section": "",
    "text": "Placeholder\n\n# Placeholder"
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "GeospatialWebsite",
    "section": "",
    "text": "This is a website documenting the MITB module ISSS626 Geospatial Analytics and Applications\n\n# Placeholder"
  },
  {
    "objectID": "In-Class_Ex/In-Class_Ex_01/In-Class_Ex01.html",
    "href": "In-Class_Ex/In-Class_Ex_01/In-Class_Ex01.html",
    "title": "In Class Exercise 01",
    "section": "",
    "text": "pacman::p_load(tidyverse, sf, tmap, ggstatsplot)"
  },
  {
    "objectID": "In-Class_Ex/In-Class_Ex_01/In-Class_Ex01.html#quarto",
    "href": "In-Class_Ex/In-Class_Ex_01/In-Class_Ex01.html#quarto",
    "title": "In Class Exercise 01",
    "section": "Quarto",
    "text": "Quarto\nQuarto enables you to weave together content and executable code into a finished document. To learn more about Quarto see https://quarto.org."
  },
  {
    "objectID": "In-Class_Ex/In-Class_Ex_01/In-Class_Ex01.html#running-code",
    "href": "In-Class_Ex/In-Class_Ex_01/In-Class_Ex01.html#running-code",
    "title": "In Class Exercise 01",
    "section": "Running Code",
    "text": "Running Code\nWhen you click the Render button a document will be generated that includes both content and the output of embedded code. You can embed code like this:\n\n1 + 1\n\n[1] 2\n\n\nYou can add options to executable code like this\n\n\n[1] 4\n\n\nThe echo: false option disables the printing of code (only output is displayed)."
  },
  {
    "objectID": "In-Class_Ex/In-Class_Ex_01/In-Class_Ex01.html#loading-the-r-packages",
    "href": "In-Class_Ex/In-Class_Ex_01/In-Class_Ex01.html#loading-the-r-packages",
    "title": "In Class Exercise 01",
    "section": "",
    "text": "pacman::p_load(tidyverse, sf, tmap, ggstatsplot)"
  },
  {
    "objectID": "In-Class_Ex/In-Class_Ex_01/In-Class_Ex01.html#load-data",
    "href": "In-Class_Ex/In-Class_Ex_01/In-Class_Ex01.html#load-data",
    "title": "In Class Exercise 01",
    "section": "Load Data",
    "text": "Load Data\n\nmpsz14_shp &lt;- st_read(dsn = \"data/MasterPlan2014SubzoneBoundaryWebSHP/\", layer = \"MP14_SUBZONE_WEB_PL\")\n\nReading layer `MP14_SUBZONE_WEB_PL' from data source \n  `C:\\Users\\Henry\\Desktop\\SMU Masters\\2024-2025 T1\\Geospatial Analytics & Applications\\Project\\GeospatialWebsite\\In-Class_Ex\\In-Class_Ex_01\\data\\MasterPlan2014SubzoneBoundaryWebSHP' \n  using driver `ESRI Shapefile'\nSimple feature collection with 323 features and 15 fields\nGeometry type: MULTIPOLYGON\nDimension:     XY\nBounding box:  xmin: 2667.538 ymin: 15748.72 xmax: 56396.44 ymax: 50256.33\nProjected CRS: SVY21\n\n# mpsz14_kml &lt;- st_read(\"data/MasterPlan2014SubzoneBoundaryWebKML.kml\")"
  },
  {
    "objectID": "In-Class_Ex/In-Class_Ex_01/In-Class_Ex01.html#write",
    "href": "In-Class_Ex/In-Class_Ex_01/In-Class_Ex01.html#write",
    "title": "In Class Exercise 01",
    "section": "Write",
    "text": "Write\n\nst_write(mpsz14_shp, \"data/MP14_SUBZONE_WEB_PL.kml\", \n         delete_dsn = TRUE # Overwrite old file if exists\n         )\n\nDeleting source `data/MP14_SUBZONE_WEB_PL.kml' using driver `KML'\nWriting layer `MP14_SUBZONE_WEB_PL' to data source \n  `data/MP14_SUBZONE_WEB_PL.kml' using driver `KML'\nWriting 323 features with 15 fields and geometry type Multi Polygon."
  },
  {
    "objectID": "In-Class_Ex/In-Class_Ex_01/In-Class_Ex01.html#read-pre-school-location",
    "href": "In-Class_Ex/In-Class_Ex_01/In-Class_Ex01.html#read-pre-school-location",
    "title": "In Class Exercise 01",
    "section": "Read Pre-School Location",
    "text": "Read Pre-School Location\n\npresch &lt;- st_read(\"data/PreSchoolsLocation.kml\")\n\nReading layer `PRESCHOOLS_LOCATION' from data source \n  `C:\\Users\\Henry\\Desktop\\SMU Masters\\2024-2025 T1\\Geospatial Analytics & Applications\\Project\\GeospatialWebsite\\In-Class_Ex\\In-Class_Ex_01\\data\\PreSchoolsLocation.kml' \n  using driver `KML'\nSimple feature collection with 2290 features and 2 fields\nGeometry type: POINT\nDimension:     XYZ\nBounding box:  xmin: 103.6878 ymin: 1.247759 xmax: 103.9897 ymax: 1.462134\nz_range:       zmin: 0 zmax: 0\nGeodetic CRS:  WGS 84"
  },
  {
    "objectID": "In-Class_Ex/In-Class_Ex_01/In-Class_Ex01.html#read-master-plan-2019-subzone-no-sea",
    "href": "In-Class_Ex/In-Class_Ex_01/In-Class_Ex01.html#read-master-plan-2019-subzone-no-sea",
    "title": "In Class Exercise 01",
    "section": "Read Master Plan 2019 Subzone (No Sea)",
    "text": "Read Master Plan 2019 Subzone (No Sea)\n\n# SHP File\nmpsz19_shp &lt;- st_read(dsn = \"data/MPSZ-2019/\", layer = \"MPSZ-2019\") %&gt;% \n  st_transform(crs = 3414) # Transform (Grid Projection) from GRS to CRS\n\nReading layer `MPSZ-2019' from data source \n  `C:\\Users\\Henry\\Desktop\\SMU Masters\\2024-2025 T1\\Geospatial Analytics & Applications\\Project\\GeospatialWebsite\\In-Class_Ex\\In-Class_Ex_01\\data\\MPSZ-2019' \n  using driver `ESRI Shapefile'\nSimple feature collection with 332 features and 6 fields\nGeometry type: MULTIPOLYGON\nDimension:     XY\nBounding box:  xmin: 103.6057 ymin: 1.158699 xmax: 104.0885 ymax: 1.470775\nGeodetic CRS:  WGS 84\n\n\n\n# KML File\nmpsz19_kml &lt;- st_read(\"data/MasterPlan2019SubzoneBoundaryNoSeaKML.kml\")\n\nReading layer `URA_MP19_SUBZONE_NO_SEA_PL' from data source \n  `C:\\Users\\Henry\\Desktop\\SMU Masters\\2024-2025 T1\\Geospatial Analytics & Applications\\Project\\GeospatialWebsite\\In-Class_Ex\\In-Class_Ex_01\\data\\MasterPlan2019SubzoneBoundaryNoSeaKML.kml' \n  using driver `KML'\nSimple feature collection with 332 features and 2 fields\nGeometry type: MULTIPOLYGON\nDimension:     XY, XYZ\nBounding box:  xmin: 103.6057 ymin: 1.158699 xmax: 104.0885 ymax: 1.470775\nz_range:       zmin: 0 zmax: 0\nGeodetic CRS:  WGS 84"
  },
  {
    "objectID": "In-Class_Ex/In-Class_Ex_01/In-Class_Ex01.html#load-population-data",
    "href": "In-Class_Ex/In-Class_Ex_01/In-Class_Ex01.html#load-population-data",
    "title": "In Class Exercise 01",
    "section": "Load Population Data",
    "text": "Load Population Data\n\npopdata &lt;- read_csv(\"data/respopagesextod2023.csv\")\n\nRows: 100928 Columns: 7\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr (5): PA, SZ, AG, Sex, TOD\ndbl (2): Pop, Time\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message."
  },
  {
    "objectID": "In-Class_Ex/In-Class_Ex_01/In-Class_Ex01.html#load-cycling-path",
    "href": "In-Class_Ex/In-Class_Ex_01/In-Class_Ex01.html#load-cycling-path",
    "title": "In Class Exercise 01",
    "section": "Load Cycling Path",
    "text": "Load Cycling Path\n\ncyclingpath = st_read(dsn = \"data/CyclingPath_Jul2024\", \n                         layer = \"CyclingPathGazette\")\n\nReading layer `CyclingPathGazette' from data source \n  `C:\\Users\\Henry\\Desktop\\SMU Masters\\2024-2025 T1\\Geospatial Analytics & Applications\\Project\\GeospatialWebsite\\In-Class_Ex\\In-Class_Ex_01\\data\\CyclingPath_Jul2024' \n  using driver `ESRI Shapefile'\nSimple feature collection with 3138 features and 2 fields\nGeometry type: MULTILINESTRING\nDimension:     XY\nBounding box:  xmin: 11854.32 ymin: 28347.98 xmax: 42644.17 ymax: 48948.15\nProjected CRS: SVY21"
  },
  {
    "objectID": "In-Class_Ex/In-Class_Ex_01/data/MPSZ-2019/MPSZ-2019.html",
    "href": "In-Class_Ex/In-Class_Ex_01/data/MPSZ-2019/MPSZ-2019.html",
    "title": "GeospatialWebsite",
    "section": "",
    "text": "&lt;!DOCTYPE qgis PUBLIC ‘http://mrcc.com/qgis.dtd’ ‘SYSTEM’&gt;     dataset\n\n\n        0 0     false"
  },
  {
    "objectID": "Hands-On_Ex/Hands-On_Ex_01/Hands-On_Ex01.html",
    "href": "Hands-On_Ex/Hands-On_Ex_01/Hands-On_Ex01.html",
    "title": "Hands-On Exercise 01",
    "section": "",
    "text": "(saved under ‘data’ folder)\nFrom data.gov.sg:\n- Master Plan 2014 Subzone Boundary (Web) (SHP)\n- Master Plan 2014 Subzone Boundary (Web) (KML)\n- Pre-Schools Location (KML)\nOthers:\nCycling Path from LTADataMall\nListings from Airbnb (listings.csv)\nSingapore Residents by Planning Area / Subzone, Age Group, Sex and Type of Dwelling from Singstat"
  },
  {
    "objectID": "Hands-On_Ex/Hands-On_Ex_01/Hands-On_Ex01.html#data-sources-saved-under-data-folder",
    "href": "Hands-On_Ex/Hands-On_Ex_01/Hands-On_Ex01.html#data-sources-saved-under-data-folder",
    "title": "Hands-On Exercise 01",
    "section": "",
    "text": "From data.gov.sg:\n- Master Plan 2014 Subzone Boundary (Web) (SHP)\n- Master Plan 2014 Subzone Boundary (Web) (KML)\n- Pre-Schools Location (KML)\nOthers:\nCycling Path from LTADataMall\nListings from Airbnb (listings.csv)"
  },
  {
    "objectID": "Hands-On_Ex/Hands-On_Ex_01/Hands-On_Ex01.html#setting-up",
    "href": "Hands-On_Ex/Hands-On_Ex_01/Hands-On_Ex01.html#setting-up",
    "title": "Hands-On Exercise 01",
    "section": "1.1 Setting Up",
    "text": "1.1 Setting Up\n\n1.1.1 Loading the R packages\n\npacman::p_load(tidyverse, sf, tmap)\n\n\n\n1.1.2 Importing Datasets\n\n# Load MP14_SUBSONZE_WEB_PL\nmpsz = st_read(dsn = \"data/MasterPlan2014SubzoneBoundaryWebSHP\", layer = \"MP14_SUBZONE_WEB_PL\") # Multipolygon Features\n\nReading layer `MP14_SUBZONE_WEB_PL' from data source \n  `C:\\Users\\Henry\\Desktop\\SMU Masters\\2024-2025 T1\\Geospatial Analytics & Applications\\Project\\GeospatialWebsite\\Hands-On_Ex\\Hands-On_Ex_01\\data\\MasterPlan2014SubzoneBoundaryWebSHP' \n  using driver `ESRI Shapefile'\nSimple feature collection with 323 features and 15 fields\nGeometry type: MULTIPOLYGON\nDimension:     XY\nBounding box:  xmin: 2667.538 ymin: 15748.72 xmax: 56396.44 ymax: 50256.33\nProjected CRS: SVY21\n\n\n\n# Load Cycling Path\ncyclingpath = st_read(dsn = \"data/CyclingPath_Jul2024\", layer = \"CyclingPathGazette\") # Multilinestring Feature\n\nReading layer `CyclingPathGazette' from data source \n  `C:\\Users\\Henry\\Desktop\\SMU Masters\\2024-2025 T1\\Geospatial Analytics & Applications\\Project\\GeospatialWebsite\\Hands-On_Ex\\Hands-On_Ex_01\\data\\CyclingPath_Jul2024' \n  using driver `ESRI Shapefile'\nSimple feature collection with 3138 features and 2 fields\nGeometry type: MULTILINESTRING\nDimension:     XY\nBounding box:  xmin: 11854.32 ymin: 28347.98 xmax: 42644.17 ymax: 48948.15\nProjected CRS: SVY21\n\n\n\n# Load PreSchool \npreschool = st_read(\"data/PreSchoolsLocation.kml\") # Point Feature (WGS84 CRS)\n\nReading layer `PRESCHOOLS_LOCATION' from data source \n  `C:\\Users\\Henry\\Desktop\\SMU Masters\\2024-2025 T1\\Geospatial Analytics & Applications\\Project\\GeospatialWebsite\\Hands-On_Ex\\Hands-On_Ex_01\\data\\PreSchoolsLocation.kml' \n  using driver `KML'\nSimple feature collection with 2290 features and 2 fields\nGeometry type: POINT\nDimension:     XYZ\nBounding box:  xmin: 103.6878 ymin: 1.247759 xmax: 103.9897 ymax: 1.462134\nz_range:       zmin: 0 zmax: 0\nGeodetic CRS:  WGS 84"
  },
  {
    "objectID": "Hands-On_Ex/Hands-On_Ex_01/Hands-On_Ex01.html#data-exploration",
    "href": "Hands-On_Ex/Hands-On_Ex_01/Hands-On_Ex01.html#data-exploration",
    "title": "Hands-On Exercise 01",
    "section": "1.2 Data Exploration",
    "text": "1.2 Data Exploration\n\n# Prints basic information of the feature class \nst_geometry(mpsz)\n\nGeometry set for 323 features \nGeometry type: MULTIPOLYGON\nDimension:     XY\nBounding box:  xmin: 2667.538 ymin: 15748.72 xmax: 56396.44 ymax: 50256.33\nProjected CRS: SVY21\nFirst 5 geometries:\n\n\nMULTIPOLYGON (((31495.56 30140.01, 31980.96 296...\n\n\nMULTIPOLYGON (((29092.28 30021.89, 29119.64 300...\n\n\nMULTIPOLYGON (((29932.33 29879.12, 29947.32 298...\n\n\nMULTIPOLYGON (((27131.28 30059.73, 27088.33 297...\n\n\nMULTIPOLYGON (((26451.03 30396.46, 26440.47 303...\n\n\n\n# More detailed information of information in the dataframe\nglimpse(mpsz)\n\nRows: 323\nColumns: 16\n$ OBJECTID   &lt;int&gt; 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, …\n$ SUBZONE_NO &lt;int&gt; 1, 1, 3, 8, 3, 7, 9, 2, 13, 7, 12, 6, 1, 5, 1, 1, 3, 2, 2, …\n$ SUBZONE_N  &lt;chr&gt; \"MARINA SOUTH\", \"PEARL'S HILL\", \"BOAT QUAY\", \"HENDERSON HIL…\n$ SUBZONE_C  &lt;chr&gt; \"MSSZ01\", \"OTSZ01\", \"SRSZ03\", \"BMSZ08\", \"BMSZ03\", \"BMSZ07\",…\n$ CA_IND     &lt;chr&gt; \"Y\", \"Y\", \"Y\", \"N\", \"N\", \"N\", \"N\", \"Y\", \"N\", \"N\", \"N\", \"N\",…\n$ PLN_AREA_N &lt;chr&gt; \"MARINA SOUTH\", \"OUTRAM\", \"SINGAPORE RIVER\", \"BUKIT MERAH\",…\n$ PLN_AREA_C &lt;chr&gt; \"MS\", \"OT\", \"SR\", \"BM\", \"BM\", \"BM\", \"BM\", \"SR\", \"QT\", \"QT\",…\n$ REGION_N   &lt;chr&gt; \"CENTRAL REGION\", \"CENTRAL REGION\", \"CENTRAL REGION\", \"CENT…\n$ REGION_C   &lt;chr&gt; \"CR\", \"CR\", \"CR\", \"CR\", \"CR\", \"CR\", \"CR\", \"CR\", \"CR\", \"CR\",…\n$ INC_CRC    &lt;chr&gt; \"5ED7EB253F99252E\", \"8C7149B9EB32EEFC\", \"C35FEFF02B13E0E5\",…\n$ FMEL_UPD_D &lt;date&gt; 2014-12-05, 2014-12-05, 2014-12-05, 2014-12-05, 2014-12-05…\n$ X_ADDR     &lt;dbl&gt; 31595.84, 28679.06, 29654.96, 26782.83, 26201.96, 25358.82,…\n$ Y_ADDR     &lt;dbl&gt; 29220.19, 29782.05, 29974.66, 29933.77, 30005.70, 29991.38,…\n$ SHAPE_Leng &lt;dbl&gt; 5267.381, 3506.107, 1740.926, 3313.625, 2825.594, 4428.913,…\n$ SHAPE_Area &lt;dbl&gt; 1630379.27, 559816.25, 160807.50, 595428.89, 387429.44, 103…\n$ geometry   &lt;MULTIPOLYGON [m]&gt; MULTIPOLYGON (((31495.56 30..., MULTIPOLYGON (…\n\n\n\n# Prints first n records of the dataframe\nhead(mpsz, n = 5)\n\nSimple feature collection with 5 features and 15 fields\nGeometry type: MULTIPOLYGON\nDimension:     XY\nBounding box:  xmin: 25867.68 ymin: 28369.47 xmax: 32362.39 ymax: 30435.54\nProjected CRS: SVY21\n  OBJECTID SUBZONE_NO      SUBZONE_N SUBZONE_C CA_IND      PLN_AREA_N\n1        1          1   MARINA SOUTH    MSSZ01      Y    MARINA SOUTH\n2        2          1   PEARL'S HILL    OTSZ01      Y          OUTRAM\n3        3          3      BOAT QUAY    SRSZ03      Y SINGAPORE RIVER\n4        4          8 HENDERSON HILL    BMSZ08      N     BUKIT MERAH\n5        5          3        REDHILL    BMSZ03      N     BUKIT MERAH\n  PLN_AREA_C       REGION_N REGION_C          INC_CRC FMEL_UPD_D   X_ADDR\n1         MS CENTRAL REGION       CR 5ED7EB253F99252E 2014-12-05 31595.84\n2         OT CENTRAL REGION       CR 8C7149B9EB32EEFC 2014-12-05 28679.06\n3         SR CENTRAL REGION       CR C35FEFF02B13E0E5 2014-12-05 29654.96\n4         BM CENTRAL REGION       CR 3775D82C5DDBEFBD 2014-12-05 26782.83\n5         BM CENTRAL REGION       CR 85D9ABEF0A40678F 2014-12-05 26201.96\n    Y_ADDR SHAPE_Leng SHAPE_Area                       geometry\n1 29220.19   5267.381  1630379.3 MULTIPOLYGON (((31495.56 30...\n2 29782.05   3506.107   559816.2 MULTIPOLYGON (((29092.28 30...\n3 29974.66   1740.926   160807.5 MULTIPOLYGON (((29932.33 29...\n4 29933.77   3313.625   595428.9 MULTIPOLYGON (((27131.28 30...\n5 30005.70   2825.594   387429.4 MULTIPOLYGON (((26451.03 30..."
  },
  {
    "objectID": "Hands-On_Ex/Hands-On_Ex_01/Hands-On_Ex01.html#data-visualization",
    "href": "Hands-On_Ex/Hands-On_Ex_01/Hands-On_Ex01.html#data-visualization",
    "title": "Hands-On Exercise 01",
    "section": "1.3 Data Visualization",
    "text": "1.3 Data Visualization\n\n# Plot all attributes\nplot(mpsz)\n\nWarning: plotting the first 9 out of 15 attributes; use max.plot = 15 to plot\nall\n\n\n\n\n\n\n\n\n\n\n# Plot only geometry\nplot(st_geometry(mpsz))\n\n\n\n\n\n\n\n\n\n# Plot specific sf object\nplot(mpsz[\"PLN_AREA_C\"])"
  },
  {
    "objectID": "Hands-On_Ex/Hands-On_Ex_01/Hands-On_Ex01.html#projection",
    "href": "Hands-On_Ex/Hands-On_Ex_01/Hands-On_Ex01.html#projection",
    "title": "Hands-On Exercise 01",
    "section": "1.4 Projection",
    "text": "1.4 Projection\n\n# Check coordinate system of simple feature dataframe\nst_crs(mpsz)\n\nCoordinate Reference System:\n  User input: SVY21 \n  wkt:\nPROJCRS[\"SVY21\",\n    BASEGEOGCRS[\"SVY21[WGS84]\",\n        DATUM[\"World Geodetic System 1984\",\n            ELLIPSOID[\"WGS 84\",6378137,298.257223563,\n                LENGTHUNIT[\"metre\",1]],\n            ID[\"EPSG\",6326]],\n        PRIMEM[\"Greenwich\",0,\n            ANGLEUNIT[\"Degree\",0.0174532925199433]]],\n    CONVERSION[\"unnamed\",\n        METHOD[\"Transverse Mercator\",\n            ID[\"EPSG\",9807]],\n        PARAMETER[\"Latitude of natural origin\",1.36666666666667,\n            ANGLEUNIT[\"Degree\",0.0174532925199433],\n            ID[\"EPSG\",8801]],\n        PARAMETER[\"Longitude of natural origin\",103.833333333333,\n            ANGLEUNIT[\"Degree\",0.0174532925199433],\n            ID[\"EPSG\",8802]],\n        PARAMETER[\"Scale factor at natural origin\",1,\n            SCALEUNIT[\"unity\",1],\n            ID[\"EPSG\",8805]],\n        PARAMETER[\"False easting\",28001.642,\n            LENGTHUNIT[\"metre\",1],\n            ID[\"EPSG\",8806]],\n        PARAMETER[\"False northing\",38744.572,\n            LENGTHUNIT[\"metre\",1],\n            ID[\"EPSG\",8807]]],\n    CS[Cartesian,2],\n        AXIS[\"(E)\",east,\n            ORDER[1],\n            LENGTHUNIT[\"metre\",1,\n                ID[\"EPSG\",9001]]],\n        AXIS[\"(N)\",north,\n            ORDER[2],\n            LENGTHUNIT[\"metre\",1,\n                ID[\"EPSG\",9001]]]]\n\n\n\n# Assign correct EPSG Code SVY21 CRS\nmpsz3414 &lt;- st_set_crs(mpsz, 3414) # Change CRS attribute only, does not reproject underlying coordinates\n\nWarning: st_crs&lt;- : replacing crs does not reproject data; use st_transform for\nthat\n\nst_crs(mpsz3414) # New Usage Attribute, updated ID attribute\n\nCoordinate Reference System:\n  User input: EPSG:3414 \n  wkt:\nPROJCRS[\"SVY21 / Singapore TM\",\n    BASEGEOGCRS[\"SVY21\",\n        DATUM[\"SVY21\",\n            ELLIPSOID[\"WGS 84\",6378137,298.257223563,\n                LENGTHUNIT[\"metre\",1]]],\n        PRIMEM[\"Greenwich\",0,\n            ANGLEUNIT[\"degree\",0.0174532925199433]],\n        ID[\"EPSG\",4757]],\n    CONVERSION[\"Singapore Transverse Mercator\",\n        METHOD[\"Transverse Mercator\",\n            ID[\"EPSG\",9807]],\n        PARAMETER[\"Latitude of natural origin\",1.36666666666667,\n            ANGLEUNIT[\"degree\",0.0174532925199433],\n            ID[\"EPSG\",8801]],\n        PARAMETER[\"Longitude of natural origin\",103.833333333333,\n            ANGLEUNIT[\"degree\",0.0174532925199433],\n            ID[\"EPSG\",8802]],\n        PARAMETER[\"Scale factor at natural origin\",1,\n            SCALEUNIT[\"unity\",1],\n            ID[\"EPSG\",8805]],\n        PARAMETER[\"False easting\",28001.642,\n            LENGTHUNIT[\"metre\",1],\n            ID[\"EPSG\",8806]],\n        PARAMETER[\"False northing\",38744.572,\n            LENGTHUNIT[\"metre\",1],\n            ID[\"EPSG\",8807]]],\n    CS[Cartesian,2],\n        AXIS[\"northing (N)\",north,\n            ORDER[1],\n            LENGTHUNIT[\"metre\",1]],\n        AXIS[\"easting (E)\",east,\n            ORDER[2],\n            LENGTHUNIT[\"metre\",1]],\n    USAGE[\n        SCOPE[\"Cadastre, engineering survey, topographic mapping.\"],\n        AREA[\"Singapore - onshore and offshore.\"],\n        BBOX[1.13,103.59,1.47,104.07]],\n    ID[\"EPSG\",3414]]\n\n\n\n# Transform preschool sf dataframe from WGS84 to SVY21\npreschool3414 &lt;- st_transform(preschool, crs = 3414)\nst_geometry(preschool3414)\n\nGeometry set for 2290 features \nGeometry type: POINT\nDimension:     XYZ\nBounding box:  xmin: 11810.03 ymin: 25596.33 xmax: 45404.24 ymax: 49300.88\nz_range:       zmin: 0 zmax: 0\nProjected CRS: SVY21 / Singapore TM\nFirst 5 geometries:\n\n\nPOINT Z (25089.46 31299.16 0)\n\n\nPOINT Z (27189.07 32792.54 0)\n\n\nPOINT Z (28844.56 36773.76 0)\n\n\nPOINT Z (24821.92 46303.16 0)\n\n\nPOINT Z (28637.82 35038.49 0)"
  },
  {
    "objectID": "Hands-On_Ex/Hands-On_Ex_01/Hands-On_Ex01.html#transforming-aspatial-data",
    "href": "Hands-On_Ex/Hands-On_Ex_01/Hands-On_Ex01.html#transforming-aspatial-data",
    "title": "Hands-On Exercise 01",
    "section": "1.5 Transforming Aspatial Data",
    "text": "1.5 Transforming Aspatial Data\n\n# Importing Aspatial Data\nlistings &lt;- read_csv(\"data/listings.csv\")\n\nRows: 3540 Columns: 75\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr  (26): listing_url, source, name, description, neighborhood_overview, pi...\ndbl  (38): id, scrape_id, host_id, host_listings_count, host_total_listings_...\nlgl   (6): host_is_superhost, host_has_profile_pic, host_identity_verified, ...\ndate  (5): last_scraped, host_since, calendar_last_scraped, first_review, la...\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\nlist(listings) \n\n[[1]]\n# A tibble: 3,540 × 75\n       id listing_url            scrape_id last_scraped source name  description\n    &lt;dbl&gt; &lt;chr&gt;                      &lt;dbl&gt; &lt;date&gt;       &lt;chr&gt;  &lt;chr&gt; &lt;chr&gt;      \n 1  71609 https://www.airbnb.co…   2.02e13 2024-06-29   previ… Ensu… For 3 room…\n 2  71896 https://www.airbnb.co…   2.02e13 2024-06-29   city … B&B … &lt;NA&gt;       \n 3  71903 https://www.airbnb.co…   2.02e13 2024-06-29   city … Room… Like your …\n 4 275343 https://www.airbnb.co…   2.02e13 2024-06-29   city … 10mi… **IMPORTAN…\n 5 275344 https://www.airbnb.co…   2.02e13 2024-06-29   city … 15 m… Lovely hom…\n 6 289234 https://www.airbnb.co…   2.02e13 2024-06-29   previ… Book… This whole…\n 7 294281 https://www.airbnb.co…   2.02e13 2024-06-29   city … 5 mi… I have 3 b…\n 8 324945 https://www.airbnb.co…   2.02e13 2024-06-29   city … Comf… **IMPORTAN…\n 9 330095 https://www.airbnb.co…   2.02e13 2024-06-29   city … Rela… **IMPORTAN…\n10 344803 https://www.airbnb.co…   2.02e13 2024-06-29   city … Budg… Direct bus…\n# ℹ 3,530 more rows\n# ℹ 68 more variables: neighborhood_overview &lt;chr&gt;, picture_url &lt;chr&gt;,\n#   host_id &lt;dbl&gt;, host_url &lt;chr&gt;, host_name &lt;chr&gt;, host_since &lt;date&gt;,\n#   host_location &lt;chr&gt;, host_about &lt;chr&gt;, host_response_time &lt;chr&gt;,\n#   host_response_rate &lt;chr&gt;, host_acceptance_rate &lt;chr&gt;,\n#   host_is_superhost &lt;lgl&gt;, host_thumbnail_url &lt;chr&gt;, host_picture_url &lt;chr&gt;,\n#   host_neighbourhood &lt;chr&gt;, host_listings_count &lt;dbl&gt;, …\n\n\n\n# Convert dataframe into sf dataframe\nlistings_sf &lt;- st_as_sf(listings,                                          # Dataframe\n                        coords = c(\"longitude\", \"latitude\"),               # Column names for coordinates \n                        crs=4326) %&gt;%                                      # Coordinate system in EPSG format (specific to country - refer to epsg.io)\n  st_transform(crs = 3414)\nglimpse(listings_sf)\n\nRows: 3,540\nColumns: 74\n$ id                                           &lt;dbl&gt; 71609, 71896, 71903, 2753…\n$ listing_url                                  &lt;chr&gt; \"https://www.airbnb.com/r…\n$ scrape_id                                    &lt;dbl&gt; 2.024063e+13, 2.024063e+1…\n$ last_scraped                                 &lt;date&gt; 2024-06-29, 2024-06-29, …\n$ source                                       &lt;chr&gt; \"previous scrape\", \"city …\n$ name                                         &lt;chr&gt; \"Ensuite Room (Room 1 & 2…\n$ description                                  &lt;chr&gt; \"For 3 rooms.Book room 1 …\n$ neighborhood_overview                        &lt;chr&gt; NA, NA, \"Quiet and view o…\n$ picture_url                                  &lt;chr&gt; \"https://a0.muscache.com/…\n$ host_id                                      &lt;dbl&gt; 367042, 367042, 367042, 1…\n$ host_url                                     &lt;chr&gt; \"https://www.airbnb.com/u…\n$ host_name                                    &lt;chr&gt; \"Belinda\", \"Belinda\", \"Be…\n$ host_since                                   &lt;date&gt; 2011-01-29, 2011-01-29, …\n$ host_location                                &lt;chr&gt; \"Singapore\", \"Singapore\",…\n$ host_about                                   &lt;chr&gt; \"Hi My name is Belinda -H…\n$ host_response_time                           &lt;chr&gt; \"within an hour\", \"within…\n$ host_response_rate                           &lt;chr&gt; \"100%\", \"100%\", \"100%\", \"…\n$ host_acceptance_rate                         &lt;chr&gt; \"N/A\", \"N/A\", \"N/A\", \"99%…\n$ host_is_superhost                            &lt;lgl&gt; FALSE, FALSE, FALSE, FALS…\n$ host_thumbnail_url                           &lt;chr&gt; \"https://a0.muscache.com/…\n$ host_picture_url                             &lt;chr&gt; \"https://a0.muscache.com/…\n$ host_neighbourhood                           &lt;chr&gt; \"Tampines\", \"Tampines\", \"…\n$ host_listings_count                          &lt;dbl&gt; 6, 6, 6, 49, 49, 6, 7, 49…\n$ host_total_listings_count                    &lt;dbl&gt; 11, 11, 11, 73, 73, 11, 8…\n$ host_verifications                           &lt;chr&gt; \"['email', 'phone']\", \"['…\n$ host_has_profile_pic                         &lt;lgl&gt; TRUE, TRUE, TRUE, TRUE, T…\n$ host_identity_verified                       &lt;lgl&gt; TRUE, TRUE, TRUE, TRUE, T…\n$ neighbourhood                                &lt;chr&gt; NA, NA, \"Singapore, Singa…\n$ neighbourhood_cleansed                       &lt;chr&gt; \"Tampines\", \"Tampines\", \"…\n$ neighbourhood_group_cleansed                 &lt;chr&gt; \"East Region\", \"East Regi…\n$ property_type                                &lt;chr&gt; \"Private room in villa\", …\n$ room_type                                    &lt;chr&gt; \"Private room\", \"Private …\n$ accommodates                                 &lt;dbl&gt; 3, 1, 2, 1, 1, 4, 2, 1, 1…\n$ bathrooms                                    &lt;dbl&gt; NA, 0.5, 0.5, 2.0, 2.5, N…\n$ bathrooms_text                               &lt;chr&gt; \"1 private bath\", \"Shared…\n$ bedrooms                                     &lt;dbl&gt; 2, 1, 1, 1, 1, 3, 2, 1, 1…\n$ beds                                         &lt;dbl&gt; NA, 1, 2, 1, 1, NA, 1, 1,…\n$ amenities                                    &lt;chr&gt; \"[\\\"Free parking on premi…\n$ price                                        &lt;chr&gt; NA, \"$80.00\", \"$80.00\", \"…\n$ minimum_nights                               &lt;dbl&gt; 92, 92, 92, 180, 180, 92,…\n$ maximum_nights                               &lt;dbl&gt; 365, 365, 365, 999, 999, …\n$ minimum_minimum_nights                       &lt;dbl&gt; 92, 92, 92, 180, 180, 92,…\n$ maximum_minimum_nights                       &lt;dbl&gt; 92, 92, 92, 180, 180, 92,…\n$ minimum_maximum_nights                       &lt;dbl&gt; 1125, 1125, 1125, 1125, 1…\n$ maximum_maximum_nights                       &lt;dbl&gt; 1125, 1125, 1125, 1125, 1…\n$ minimum_nights_avg_ntm                       &lt;dbl&gt; 92, 92, 92, 180, 180, 92,…\n$ maximum_nights_avg_ntm                       &lt;dbl&gt; 1125, 1125, 1125, 1125, 1…\n$ calendar_updated                             &lt;lgl&gt; NA, NA, NA, NA, NA, NA, N…\n$ has_availability                             &lt;lgl&gt; TRUE, TRUE, TRUE, TRUE, T…\n$ availability_30                              &lt;dbl&gt; 30, 30, 30, 28, 0, 29, 30…\n$ availability_60                              &lt;dbl&gt; 59, 53, 60, 58, 0, 58, 60…\n$ availability_90                              &lt;dbl&gt; 89, 83, 90, 62, 0, 88, 90…\n$ availability_365                             &lt;dbl&gt; 89, 148, 90, 62, 0, 88, 3…\n$ calendar_last_scraped                        &lt;date&gt; 2024-06-29, 2024-06-29, …\n$ number_of_reviews                            &lt;dbl&gt; 19, 24, 46, 20, 16, 12, 1…\n$ number_of_reviews_ltm                        &lt;dbl&gt; 0, 0, 0, 0, 2, 0, 0, 1, 1…\n$ number_of_reviews_l30d                       &lt;dbl&gt; 0, 0, 0, 0, 0, 0, 0, 0, 0…\n$ first_review                                 &lt;date&gt; 2011-12-19, 2011-07-30, …\n$ last_review                                  &lt;date&gt; 2020-01-17, 2019-10-13, …\n$ review_scores_rating                         &lt;dbl&gt; 4.44, 4.16, 4.41, 4.40, 4…\n$ review_scores_accuracy                       &lt;dbl&gt; 4.37, 4.22, 4.39, 4.16, 4…\n$ review_scores_cleanliness                    &lt;dbl&gt; 4.00, 4.09, 4.52, 4.26, 4…\n$ review_scores_checkin                        &lt;dbl&gt; 4.63, 4.43, 4.63, 4.47, 4…\n$ review_scores_communication                  &lt;dbl&gt; 4.78, 4.43, 4.64, 4.42, 4…\n$ review_scores_location                       &lt;dbl&gt; 4.26, 4.17, 4.50, 4.53, 4…\n$ review_scores_value                          &lt;dbl&gt; 4.32, 4.04, 4.36, 4.63, 4…\n$ license                                      &lt;chr&gt; NA, NA, NA, \"S0399\", \"S03…\n$ instant_bookable                             &lt;lgl&gt; FALSE, FALSE, FALSE, TRUE…\n$ calculated_host_listings_count               &lt;dbl&gt; 6, 6, 6, 49, 49, 6, 7, 49…\n$ calculated_host_listings_count_entire_homes  &lt;dbl&gt; 0, 0, 0, 0, 0, 0, 1, 0, 0…\n$ calculated_host_listings_count_private_rooms &lt;dbl&gt; 6, 6, 6, 49, 49, 6, 6, 49…\n$ calculated_host_listings_count_shared_rooms  &lt;dbl&gt; 0, 0, 0, 0, 0, 0, 0, 0, 0…\n$ reviews_per_month                            &lt;dbl&gt; 0.12, 0.15, 0.29, 0.15, 0…\n$ geometry                                     &lt;POINT [m]&gt; POINT (41972.5 3639…"
  },
  {
    "objectID": "Hands-On_Ex/Hands-On_Ex_01/Hands-On_Ex01.html#geoprocessing",
    "href": "Hands-On_Ex/Hands-On_Ex_01/Hands-On_Ex01.html#geoprocessing",
    "title": "Hands-On Exercise 01",
    "section": "1.6 Geoprocessing",
    "text": "1.6 Geoprocessing\nHypothetical Scenario 1 - ascertain 5 metres of reserved land on both sides of current cycling to be acquired\n\n# Use st_buffer to compute buffer around the cycling paths\nbuffer_cycling &lt;- st_buffer(cyclingpath, dist=5, nQuadSegs = 30) # nQuadSegs : number of segments per quadrant\n# Calculate area of buffers\nbuffer_cycling$AREA &lt;- st_area(buffer_cycling)\n# Return total land involved\nsum(buffer_cycling$AREA)\n\n2218855 [m^2]\n\n\nHypotethical Scenario 2 - find out number of pre-schools in each Planning Subzone\n\n# Count number of preschools within each planning subzone\nmpsz3414$`PreSch Count`&lt;- lengths(st_intersects(mpsz3414, preschool3414))\n# Summary statistics\nsummary(mpsz3414$`PreSch Count`)\n\n   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. \n   0.00    0.00    4.00    7.09   10.00   72.00 \n\ncat(\"------------------------------------------------------------------\\n\")\n\n------------------------------------------------------------------\n\n# Planning Subzone with most pre-schools\ntop_n(mpsz3414, 1, `PreSch Count`)\n\nSimple feature collection with 1 feature and 16 fields\nGeometry type: MULTIPOLYGON\nDimension:     XY\nBounding box:  xmin: 39655.33 ymin: 35966 xmax: 42940.57 ymax: 38622.37\nProjected CRS: SVY21 / Singapore TM\n  OBJECTID SUBZONE_NO     SUBZONE_N SUBZONE_C CA_IND PLN_AREA_N PLN_AREA_C\n1      189          2 TAMPINES EAST    TMSZ02      N   TAMPINES         TM\n     REGION_N REGION_C          INC_CRC FMEL_UPD_D   X_ADDR   Y_ADDR SHAPE_Leng\n1 EAST REGION       ER 21658EAAF84F4D8D 2014-12-05 41122.55 37392.39   10180.62\n  SHAPE_Area                       geometry PreSch Count\n1    4339824 MULTIPOLYGON (((42196.76 38...           72\n\n\nHypotethical Scenario 3 - Analyze density of pre-school by planning subzone\n\n# Calculate density - Preschool Count/Area\nmpsz3414 &lt;- mpsz3414 %&gt;%\n  mutate(Area = st_area(.)) %&gt;%\n  mutate(`PreSch Density` = `PreSch Count`/Area * 1000000) # Or simply mutate(`PreSch Density` = `PreSch Count`/st_area(.) * 1000000)\n\n# Print simple histogram of pre-school density\nhist(mpsz3414$`PreSch Density`)\n\n\n\n\n\n\n\n\n\n# A more useful visualization of pre-school density\nggplot(data=mpsz3414, \n       aes(x= as.numeric(`PreSch Density`)))+\n  geom_histogram(bins=20, \n                 color=\"black\", \n                 fill=\"light blue\") +\n  labs(title = \"Are pre-school even distributed in Singapore?\",\n       subtitle= \"There are many planning sub-zones with a single pre-school, on the other hand, \\nthere are two planning sub-zones with at least 20 pre-schools\",\n      x = \"Pre-school density (per km sq)\",\n      y = \"Frequency\")\n\n\n\n\n\n\n\n\n\n# Show relationship between pre-school density and pre-school count\nggplot(data=mpsz3414, \n       aes(y = `PreSch Count`, \n           x= as.numeric(`PreSch Density`)))+\n  geom_point(color=\"black\", \n             fill=\"light blue\") +\n  xlim(0, 40) +\n  ylim(0, 40) +\n  labs(title = \"\",\n      x = \"Pre-school density (per km sq)\",\n      y = \"Pre-school count\")\n\nWarning: Removed 2 rows containing missing values or values outside the scale range\n(`geom_point()`)."
  },
  {
    "objectID": "Hands-On_Ex/Hands-On_Ex_01/Hands-On_Ex01.html#additional-setup",
    "href": "Hands-On_Ex/Hands-On_Ex_01/Hands-On_Ex01.html#additional-setup",
    "title": "Hands-On Exercise 01",
    "section": "2.1 Additional Setup",
    "text": "2.1 Additional Setup\n\n# Load population data\npopdata &lt;- read_csv(\"data/respopagesextod2011to2020.csv\")\n\nRows: 984656 Columns: 7\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr (5): PA, SZ, AG, Sex, TOD\ndbl (2): Pop, Time\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\n# Check data\nglimpse(popdata)\n\nRows: 984,656\nColumns: 7\n$ PA   &lt;chr&gt; \"Ang Mo Kio\", \"Ang Mo Kio\", \"Ang Mo Kio\", \"Ang Mo Kio\", \"Ang Mo K…\n$ SZ   &lt;chr&gt; \"Ang Mo Kio Town Centre\", \"Ang Mo Kio Town Centre\", \"Ang Mo Kio T…\n$ AG   &lt;chr&gt; \"0_to_4\", \"0_to_4\", \"0_to_4\", \"0_to_4\", \"0_to_4\", \"0_to_4\", \"0_to…\n$ Sex  &lt;chr&gt; \"Males\", \"Males\", \"Males\", \"Males\", \"Males\", \"Males\", \"Males\", \"M…\n$ TOD  &lt;chr&gt; \"HDB 1- and 2-Room Flats\", \"HDB 3-Room Flats\", \"HDB 4-Room Flats\"…\n$ Pop  &lt;dbl&gt; 0, 10, 30, 50, 0, 0, 40, 0, 0, 10, 30, 60, 0, 0, 40, 0, 0, 10, 30…\n$ Time &lt;dbl&gt; 2011, 2011, 2011, 2011, 2011, 2011, 2011, 2011, 2011, 2011, 2011,…\n\ncat(\"------------------------------------------------------------------\\n\")\n\n------------------------------------------------------------------\n\n# Check distinct values of AG\nunique(popdata$AG)\n\n [1] \"0_to_4\"      \"5_to_9\"      \"10_to_14\"    \"15_to_19\"    \"20_to_24\"   \n [6] \"25_to_29\"    \"30_to_34\"    \"35_to_39\"    \"40_to_44\"    \"45_to_49\"   \n[11] \"50_to_54\"    \"55_to_59\"    \"60_to_64\"    \"65_to_69\"    \"70_to_74\"   \n[16] \"75_to_79\"    \"80_to_84\"    \"85_to_89\"    \"90_and_over\""
  },
  {
    "objectID": "Hands-On_Ex/Hands-On_Ex_01/Hands-On_Ex01.html#prepare-2020-population-data",
    "href": "Hands-On_Ex/Hands-On_Ex_01/Hands-On_Ex01.html#prepare-2020-population-data",
    "title": "Hands-On Exercise 01",
    "section": "2.1.1 Prepare 2020 population data",
    "text": "2.1.1 Prepare 2020 population data\n\n# Calculate population counts of different demographic groups  & dependency ratio by sub regions\npopdata2020 &lt;- popdata %&gt;%\n  filter(Time == 2020) %&gt;%\n  group_by(PA, SZ, AG) %&gt;%\n  summarise(`POP` = sum(`Pop`)) %&gt;%\n  ungroup() %&gt;%\n  pivot_wider(names_from=AG, \n              values_from=POP) %&gt;%\n  mutate(YOUNG = rowSums(select(., `0_to_4`, `5_to_9`, `10_to_14`, `15_to_19`, `20_to_24`)),\n         `ECONOMY ACTIVE` = rowSums(select(., `25_to_29`, `30_to_34`, `35_to_39`, `40_to_44`, `45_to_49`, `50_to_54`, `55_to_59`, `60_to_64`)),\n         AGED = rowSums(select(., `65_to_69`, `70_to_74`, `75_to_79`, `80_to_84`, `85_to_89`, `90_and_over`))) %&gt;%\n  mutate(`TOTAL`= (`YOUNG` + `ECONOMY ACTIVE` + `AGED`),\n         `DEPENDENCY` = ((`YOUNG` + `AGED`)/`ECONOMY ACTIVE`)) %&gt;%  \n  select(`PA`, `SZ`, `YOUNG`, \n       `ECONOMY ACTIVE`, `AGED`, \n       `TOTAL`, `DEPENDENCY`)\n\n`summarise()` has grouped output by 'PA', 'SZ'. You can override using the\n`.groups` argument.\n\n# Check processed data\nhead(popdata2020)\n\n# A tibble: 6 × 7\n  PA         SZ                    YOUNG `ECONOMY ACTIVE`  AGED TOTAL DEPENDENCY\n  &lt;chr&gt;      &lt;chr&gt;                 &lt;dbl&gt;            &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt;      &lt;dbl&gt;\n1 Ang Mo Kio Ang Mo Kio Town Cent…  1290             2760   760  4810      0.743\n2 Ang Mo Kio Cheng San              5640            16460  6050 28150      0.710\n3 Ang Mo Kio Chong Boon             5100            15000  6470 26570      0.771\n4 Ang Mo Kio Kebun Bahru            4620            13010  5120 22750      0.749\n5 Ang Mo Kio Sembawang Hills        1880             3630  1310  6820      0.879\n6 Ang Mo Kio Shangri-La             3330             9050  3610 15990      0.767"
  },
  {
    "objectID": "Hands-On_Ex/Hands-On_Ex_01/Hands-On_Ex01.html#combine-attribute-data-and-geospatial-data",
    "href": "Hands-On_Ex/Hands-On_Ex_01/Hands-On_Ex01.html#combine-attribute-data-and-geospatial-data",
    "title": "Hands-On Exercise 01",
    "section": "2.1.2. Combine attribute data and geospatial data",
    "text": "2.1.2. Combine attribute data and geospatial data\n\n# Convert attribute fields to upper case for joining\npopdata2020 &lt;- popdata2020 %&gt;%\n  mutate_at(.vars = vars(PA, SZ), .funs = list(toupper)) %&gt;%\n  filter(`ECONOMY ACTIVE` &gt; 0)\n# Left join to mpsz data\nmpsz_pop2020 &lt;- left_join(mpsz, popdata2020, by = c(\"SUBZONE_N\" = \"SZ\"))\n# Check merged data\nhead(mpsz_pop2020)\n\nSimple feature collection with 6 features and 21 fields\nGeometry type: MULTIPOLYGON\nDimension:     XY\nBounding box:  xmin: 24468.89 ymin: 28369.47 xmax: 32362.39 ymax: 30542.74\nProjected CRS: SVY21\n  OBJECTID SUBZONE_NO      SUBZONE_N SUBZONE_C CA_IND      PLN_AREA_N\n1        1          1   MARINA SOUTH    MSSZ01      Y    MARINA SOUTH\n2        2          1   PEARL'S HILL    OTSZ01      Y          OUTRAM\n3        3          3      BOAT QUAY    SRSZ03      Y SINGAPORE RIVER\n4        4          8 HENDERSON HILL    BMSZ08      N     BUKIT MERAH\n5        5          3        REDHILL    BMSZ03      N     BUKIT MERAH\n6        6          7 ALEXANDRA HILL    BMSZ07      N     BUKIT MERAH\n  PLN_AREA_C       REGION_N REGION_C          INC_CRC FMEL_UPD_D   X_ADDR\n1         MS CENTRAL REGION       CR 5ED7EB253F99252E 2014-12-05 31595.84\n2         OT CENTRAL REGION       CR 8C7149B9EB32EEFC 2014-12-05 28679.06\n3         SR CENTRAL REGION       CR C35FEFF02B13E0E5 2014-12-05 29654.96\n4         BM CENTRAL REGION       CR 3775D82C5DDBEFBD 2014-12-05 26782.83\n5         BM CENTRAL REGION       CR 85D9ABEF0A40678F 2014-12-05 26201.96\n6         BM CENTRAL REGION       CR 9D286521EF5E3B59 2014-12-05 25358.82\n    Y_ADDR SHAPE_Leng SHAPE_Area              PA YOUNG ECONOMY ACTIVE AGED\n1 29220.19   5267.381  1630379.3            &lt;NA&gt;    NA             NA   NA\n2 29782.05   3506.107   559816.2          OUTRAM   930           3130 2120\n3 29974.66   1740.926   160807.5 SINGAPORE RIVER     0             40   10\n4 29933.77   3313.625   595428.9     BUKIT MERAH  2600           7450 3320\n5 30005.70   2825.594   387429.4     BUKIT MERAH  2760           6160 1740\n6 29991.38   4428.913  1030378.8     BUKIT MERAH  2800           7340 3420\n  TOTAL DEPENDENCY                       geometry\n1    NA         NA MULTIPOLYGON (((31495.56 30...\n2  6180  0.9744409 MULTIPOLYGON (((29092.28 30...\n3    50  0.2500000 MULTIPOLYGON (((29932.33 29...\n4 13370  0.7946309 MULTIPOLYGON (((27131.28 30...\n5 10660  0.7305195 MULTIPOLYGON (((26451.03 30...\n6 13560  0.8474114 MULTIPOLYGON (((25899.7 297...\n\n# Save data as rds (compressed form)\nwrite_rds(mpsz_pop2020, \"data/mpszpop2020.rds\")"
  },
  {
    "objectID": "Hands-On_Ex/Hands-On_Ex_01/Hands-On_Ex01.html#choropleth-mapping-geospatial-data",
    "href": "Hands-On_Ex/Hands-On_Ex_01/Hands-On_Ex01.html#choropleth-mapping-geospatial-data",
    "title": "Hands-On Exercise 01",
    "section": "2.2 Choropleth Mapping Geospatial Data",
    "text": "2.2 Choropleth Mapping Geospatial Data\n\n2.2.1 Exploring Choropleth Mapping\n\n# Use qtm function from tmap to plot choropleth map\ntmap_mode(\"plot\")\n\ntmap mode set to plotting\n\nqtm(mpsz_pop2020, fill = \"DEPENDENCY\")\n\n\n\n\n\n\n\n\n\n# Use tmap's drawing elements for more customized choropleth map\ntm_shape(mpsz_pop2020)+\n  tm_fill(\"DEPENDENCY\", \n          style = \"quantile\", \n          palette = \"Blues\",\n          title = \"Dependency ratio\") +\n  tm_layout(main.title = \"Distribution of Dependency Ratio by planning subzone\",\n            main.title.position = \"center\",\n            main.title.size = 1.2,\n            legend.height = 0.45, \n            legend.width = 0.35,\n            frame = TRUE) +\n  tm_borders(alpha = 0.5) +\n  tm_compass(type=\"8star\", size = 2) +\n  tm_scale_bar() +\n  tm_grid(alpha =0.2) +\n  tm_credits(\"Source: Planning Sub-zone boundary from Urban Redevelopment Authorithy (URA)\\n and Population data from Department of Statistics DOS\", \n             position = c(\"left\", \"bottom\"))\n\n\n\n\n\n\n\n\n\n# Base map\ntm_shape(mpsz_pop2020) + \n  tm_polygons()\n\n\n\n\n\n\n\n\n\n# Using polygons\ntm_shape(mpsz_pop2020)+\n  tm_polygons(\"DEPENDENCY\")\n\n\n\n\n\n\n\n\n\n# Using fill instead of polygons\ntm_shape(mpsz_pop2020)+\n  tm_fill(\"DEPENDENCY\")\n\n\n\n\n\n\n\n\n\n# Using border and fill - a customized version of tm_polygons\ntm_shape(mpsz_pop2020)+\n  tm_fill(\"DEPENDENCY\") +\n  tm_borders(lwd = 0.1,  alpha = 1)\n\n\n\n\n\n\n\n\n\n\n2.2.2 Data Classification Methods\n\n# Classification using built in quantile method (5 classes)\ntm_shape(mpsz_pop2020)+\n  tm_fill(\"DEPENDENCY\",\n          n = 5,\n          style = \"quantile\") +\n  tm_borders(alpha = 0.5)\n\n\n\n\n\n\n\n\n\n# Classification using built in equal method (5 classes)\ntm_shape(mpsz_pop2020)+\n  tm_fill(\"DEPENDENCY\",\n          n = 5,\n          style = \"equal\") +\n  tm_borders(alpha = 0.5)\n\n\n\n\n\n\n\n\n\n2.2.2.1 Classification with custom breaks\n\n# Check data distribution \nsummary(mpsz_pop2020$DEPENDENCY)\n\n   Min. 1st Qu.  Median    Mean 3rd Qu.    Max.    NA's \n 0.0000  0.6519  0.7025  0.7742  0.7645 19.0000      92 \n\n\n\n# Classification using custom breaks\ntm_shape(mpsz_pop2020)+\n  tm_fill(\"DEPENDENCY\",\n          breaks = c(0, 0.60, 0.70, 0.80, 0.90, 1.00)) +\n  tm_borders(alpha = 0.5)\n\nWarning: Values have found that are higher than the highest break\n\n\n\n\n\n\n\n\n\n\n\n\n2.2.3 Aesthetic Features\n\n2.2.3.1 Color Scheme\n\n# Using ColorBrewer palette\ntm_shape(mpsz_pop2020)+\n  tm_fill(\"DEPENDENCY\",\n          n = 6,\n          style = \"quantile\",\n          palette = \"Blues\") +\n  tm_borders(alpha = 0.5)\n\n\n\n\n\n\n\n\n\n# Reverse color shading\ntm_shape(mpsz_pop2020)+\n  tm_fill(\"DEPENDENCY\",\n          n = 6,\n          style = \"quantile\",\n          palette = \"-Blues\") +\n  tm_borders(alpha = 0.5)\n\n\n\n\n\n\n\n\n\n\n2.2.3.2 Map Layout\n\n# Customized legend\ntm_shape(mpsz_pop2020)+\n  tm_fill(\"DEPENDENCY\", \n          style = \"jenks\", \n          palette = \"Blues\", \n          legend.hist = TRUE, \n          legend.is.portrait = TRUE,\n          legend.hist.z = 0.1) +\n  tm_layout(main.title = \"Distribution of Dependency Ratio by planning subzone \\n(Jenks classification)\",\n            main.title.position = \"center\",\n            main.title.size = 1,\n            legend.height = 0.45, \n            legend.width = 0.35,\n            legend.outside = FALSE,\n            legend.position = c(\"right\", \"bottom\"),\n            frame = FALSE) +\n  tm_borders(alpha = 0.5)\n\n\n\n\n\n\n\n\n\n# Different map styles\ntm_shape(mpsz_pop2020)+\n  tm_fill(\"DEPENDENCY\", \n          style = \"quantile\", \n          palette = \"-Greens\") +\n  tm_borders(alpha = 0.5) +\n  tmap_style(\"classic\")\n\ntmap style set to \"classic\"\n\n\nother available styles are: \"white\", \"gray\", \"natural\", \"cobalt\", \"col_blind\", \"albatross\", \"beaver\", \"bw\", \"watercolor\" \n\n\n\n\n\n\n\n\n\n\n# Fully customized with other map furniture\ntm_shape(mpsz_pop2020)+\n  tm_fill(\"DEPENDENCY\", \n          style = \"quantile\", \n          palette = \"Reds\",\n          title = \"No. of persons\") +\n  tm_layout(main.title = \"Distribution of Dependency Ratio \\nby planning subzone\",\n            main.title.position = \"center\",\n            main.title.size = 1.2,\n            legend.height = 0.45, \n            legend.width = 0.35,\n            frame = TRUE) +\n  tm_borders(alpha = 0.5) +\n  tm_compass(type=\"8star\", size = 2) +\n  tm_scale_bar(width = 0.15) +\n  tm_grid(lwd = 0.1, alpha = 0.2) +\n  tm_credits(\"Source: Planning Sub-zone boundary from Urban Redevelopment Authorithy (URA)\\n and Population data from Department of Statistics DOS\", \n             position = c(\"left\", \"bottom\"))\n\n\n\n\n\n\n\n\n\n# Multiple small choropleth maps can be defined by specific columns in tm_fill\ntm_shape(mpsz_pop2020)+\n  tm_fill(c(\"YOUNG\", \"AGED\"),\n          style = \"equal\", \n          palette = \"Blues\") +\n  tm_layout(legend.position = c(\"right\", \"bottom\")) +\n  tm_borders(alpha = 0.5) +\n  tmap_style(\"white\") # Reset map style to default\n\ntmap style set to \"white\"\n\n\nother available styles are: \"gray\", \"natural\", \"cobalt\", \"col_blind\", \"albatross\", \"beaver\", \"bw\", \"classic\", \"watercolor\" \n\n\n\n\n\n\n\n\n\n\n# Additional arguments can be used to customize each choropleth map separately\ntm_shape(mpsz_pop2020)+ \n  tm_polygons(c(\"DEPENDENCY\",\"AGED\"),\n          style = c(\"equal\", \"quantile\"), \n          palette = list(\"Blues\",\"Greens\")) +\n  tm_layout(legend.position = c(\"right\", \"bottom\"))\n\n\n\n\n\n\n\n\n\n# Use tm_facets to create multiple small maps by groups\ntm_shape(mpsz_pop2020) +\n  tm_fill(\"DEPENDENCY\",\n          style = \"quantile\",\n          palette = \"Blues\",\n          thres.poly = 0) + \n  tm_facets(by=\"REGION_N\", \n            free.coords=TRUE, \n            drop.shapes=TRUE) +\n  tm_layout(legend.show = FALSE,\n            title.position = c(\"center\", \"center\"), \n            title.size = 20) +\n  tm_borders(alpha = 0.5)\n\nWarning: The argument drop.shapes has been renamed to drop.units, and is\ntherefore deprecated\n\n\n\n\n\n\n\n\n\n\n# Use tm_arrage to create and combine multiple individual maps\nyoungmap &lt;- tm_shape(mpsz_pop2020)+ \n  tm_polygons(\"YOUNG\", \n              style = \"quantile\", \n              palette = \"Blues\")\n\nagedmap &lt;- tm_shape(mpsz_pop2020)+ \n  tm_polygons(\"AGED\", \n              style = \"quantile\", \n              palette = \"Blues\")\n\ntmap_arrange(youngmap, agedmap, asp=1, ncol=2)"
  },
  {
    "objectID": "Hands-On_Ex/Hands-On_Ex_02/Hands-On_Ex02.html",
    "href": "Hands-On_Ex/Hands-On_Ex_02/Hands-On_Ex02.html",
    "title": "Hands-On Exercise 02",
    "section": "",
    "text": "(saved under ‘data’ folder)\nFrom data.gov.sg:\n- Master Plan 2014 Subzone Boundary (Web) (SHP)\n- Master Plan 2014 Subzone Boundary (Web) (KML)\n- Childcare\nOthers:\n- CostalOutline from SLA"
  },
  {
    "objectID": "Hands-On_Ex/Hands-On_Ex_02/Hands-On_Ex02.html#setting-up",
    "href": "Hands-On_Ex/Hands-On_Ex_02/Hands-On_Ex02.html#setting-up",
    "title": "Hands-On Exercise 02",
    "section": "4.1 Setting Up",
    "text": "4.1 Setting Up\n\n4.1.1 Loading the R packages\n\npacman::p_load(sf, raster, spatstat, tmap, tidyverse)\n\n\n\n4.1.2 Importing spatial data\n\n# Load childcare dataset\nchildcare_sf &lt;- st_read(\"data/child-care-services-geojson.geojson\") %&gt;%\n  st_transform(crs = 3414) # Project to SVY21\n\nReading layer `child-care-services-geojson' from data source \n  `C:\\Users\\Henry\\Desktop\\SMU Masters\\2024-2025 T1\\Geospatial Analytics & Applications\\Project\\GeospatialWebsite\\Hands-On_Ex\\Hands-On_Ex_02\\data\\child-care-services-geojson.geojson' \n  using driver `GeoJSON'\nSimple feature collection with 1545 features and 2 fields\nGeometry type: POINT\nDimension:     XYZ\nBounding box:  xmin: 103.6824 ymin: 1.248403 xmax: 103.9897 ymax: 1.462134\nz_range:       zmin: 0 zmax: 0\nGeodetic CRS:  WGS 84\n\n\n\n# Load costaloutline dataset\nsg_sf &lt;- st_read(dsn = \"data/CostalOutline\", layer=\"CostalOutline\") %&gt;%\n  st_set_crs(., 3414) # Change CRS attribute to 3414\n\nReading layer `CostalOutline' from data source \n  `C:\\Users\\Henry\\Desktop\\SMU Masters\\2024-2025 T1\\Geospatial Analytics & Applications\\Project\\GeospatialWebsite\\Hands-On_Ex\\Hands-On_Ex_02\\data\\CostalOutline' \n  using driver `ESRI Shapefile'\nSimple feature collection with 60 features and 4 fields\nGeometry type: POLYGON\nDimension:     XY\nBounding box:  xmin: 2663.926 ymin: 16357.98 xmax: 56047.79 ymax: 50244.03\nProjected CRS: SVY21\n\n\nWarning: st_crs&lt;- : replacing crs does not reproject data; use st_transform for\nthat\n\n\n\n# Load MP14 Subzone dataset\nmpsz_sf &lt;- st_read(dsn = \"data/MasterPlan2014SubzoneBoundaryWebSHP\", layer = \"MP14_SUBZONE_WEB_PL\") %&gt;%\n  st_set_crs(., 3414) # Change CRS attribute to 3414\n\nReading layer `MP14_SUBZONE_WEB_PL' from data source \n  `C:\\Users\\Henry\\Desktop\\SMU Masters\\2024-2025 T1\\Geospatial Analytics & Applications\\Project\\GeospatialWebsite\\Hands-On_Ex\\Hands-On_Ex_02\\data\\MasterPlan2014SubzoneBoundaryWebSHP' \n  using driver `ESRI Shapefile'\nSimple feature collection with 323 features and 15 fields\nGeometry type: MULTIPOLYGON\nDimension:     XY\nBounding box:  xmin: 2667.538 ymin: 15748.72 xmax: 56396.44 ymax: 50256.33\nProjected CRS: SVY21\n\n\nWarning: st_crs&lt;- : replacing crs does not reproject data; use st_transform for\nthat"
  },
  {
    "objectID": "Hands-On_Ex/Hands-On_Ex_02/Hands-On_Ex02.html#exploratory-plots",
    "href": "Hands-On_Ex/Hands-On_Ex_02/Hands-On_Ex02.html#exploratory-plots",
    "title": "Hands-On Exercise 02",
    "section": "4.2 Exploratory Plots",
    "text": "4.2 Exploratory Plots\n\n# Map MP14 Sf with Childcare Sf \ntm_shape(mpsz_sf) + \n  tm_polygons() + \ntm_shape(childcare_sf) + \n  tm_bubbles(size = 0.01, col = \"black\")\n\n\n\n\n\n\n\n\n\n# Dynamic map with view tmap_mode (requires leaflet package)\ntmap_mode('view')\n\ntmap mode set to interactive viewing\n\ntm_shape(childcare_sf)+\n  tm_dots()\n\n\n\n\n\n\n# Set tmap_mode back to plot\ntmap_mode('plot')\n\ntmap mode set to plotting"
  },
  {
    "objectID": "Hands-On_Ex/Hands-On_Ex_02/Hands-On_Ex02.html#geospatial-data-wrangling",
    "href": "Hands-On_Ex/Hands-On_Ex_02/Hands-On_Ex02.html#geospatial-data-wrangling",
    "title": "Hands-On Exercise 02",
    "section": "4.3 Geospatial Data Wrangling",
    "text": "4.3 Geospatial Data Wrangling\n\n4.3.1 Convert Sf dataframes into Spatial* class\n\n# Convert sf dataframe to spatial class\nchildcare &lt;- as_Spatial(childcare_sf)\nmpsz &lt;- as_Spatial(mpsz_sf)\nsg &lt;- as_Spatial(sg_sf)\n\n\n# Information of childcare spatial class\nprint(childcare)\n\nclass       : SpatialPointsDataFrame \nfeatures    : 1545 \nextent      : 11203.01, 45404.24, 25667.6, 49300.88  (xmin, xmax, ymin, ymax)\ncrs         : +proj=tmerc +lat_0=1.36666666666667 +lon_0=103.833333333333 +k=1 +x_0=28001.642 +y_0=38744.572 +ellps=WGS84 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \nvariables   : 2\nnames       :    Nameescription \nmin values  :   kml_1, &lt;center&gt;&lt;table&gt;&lt;tr&gt;&lt;th colspan='2' align='center'&gt;&lt;em&gt;Attributes&lt;/em&gt;&lt;/th&gt;&lt;/tr&gt;&lt;tr bgcolor=\"#E3E3F3\"&gt; &lt;th&gt;ADDRESSBLOCKHOUSENUMBER&lt;/th&gt; &lt;td&gt;&lt;/td&gt; &lt;/tr&gt;&lt;tr bgcolor=\"\"&gt; &lt;th&gt;ADDRESSBUILDINGNAME&lt;/th&gt; &lt;td&gt;&lt;/td&gt; &lt;/tr&gt;&lt;tr bgcolor=\"#E3E3F3\"&gt; &lt;th&gt;ADDRESSPOSTALCODE&lt;/th&gt; &lt;td&gt;018989&lt;/td&gt; &lt;/tr&gt;&lt;tr bgcolor=\"\"&gt; &lt;th&gt;ADDRESSSTREETNAME&lt;/th&gt; &lt;td&gt;1, MARINA BOULEVARD, #B1 - 01, ONE MARINA BOULEVARD, SINGAPORE 018989&lt;/td&gt; &lt;/tr&gt;&lt;tr bgcolor=\"#E3E3F3\"&gt; &lt;th&gt;ADDRESSTYPE&lt;/th&gt; &lt;td&gt;&lt;/td&gt; &lt;/tr&gt;&lt;tr bgcolor=\"\"&gt; &lt;th&gt;DESCRIPTION&lt;/th&gt; &lt;td&gt;&lt;/td&gt; &lt;/tr&gt;&lt;tr bgcolor=\"#E3E3F3\"&gt; &lt;th&gt;HYPERLINK&lt;/th&gt; &lt;td&gt;&lt;/td&gt; &lt;/tr&gt;&lt;tr bgcolor=\"\"&gt; &lt;th&gt;LANDXADDRESSPOINT&lt;/th&gt; &lt;td&gt;0&lt;/td&gt; &lt;/tr&gt;&lt;tr bgcolor=\"#E3E3F3\"&gt; &lt;th&gt;LANDYADDRESSPOINT&lt;/th&gt; &lt;td&gt;0&lt;/td&gt; &lt;/tr&gt;&lt;tr bgcolor=\"\"&gt; &lt;th&gt;NAME&lt;/th&gt; &lt;td&gt;THE LITTLE SKOOL-HOUSE INTERNATIONAL PTE. LTD.&lt;/td&gt; &lt;/tr&gt;&lt;tr bgcolor=\"#E3E3F3\"&gt; &lt;th&gt;PHOTOURL&lt;/th&gt; &lt;td&gt;&lt;/td&gt; &lt;/tr&gt;&lt;tr bgcolor=\"\"&gt; &lt;th&gt;ADDRESSFLOORNUMBER&lt;/th&gt; &lt;td&gt;&lt;/td&gt; &lt;/tr&gt;&lt;tr bgcolor=\"#E3E3F3\"&gt; &lt;th&gt;INC_CRC&lt;/th&gt; &lt;td&gt;08F73931F4A691F4&lt;/td&gt; &lt;/tr&gt;&lt;tr bgcolor=\"\"&gt; &lt;th&gt;FMEL_UPD_D&lt;/th&gt; &lt;td&gt;20200826094036&lt;/td&gt; &lt;/tr&gt;&lt;tr bgcolor=\"#E3E3F3\"&gt; &lt;th&gt;ADDRESSUNITNUMBER&lt;/th&gt; &lt;td&gt;&lt;/td&gt; &lt;/tr&gt;&lt;/table&gt;&lt;/center&gt; \nmax values  : kml_999,                  &lt;center&gt;&lt;table&gt;&lt;tr&gt;&lt;th colspan='2' align='center'&gt;&lt;em&gt;Attributes&lt;/em&gt;&lt;/th&gt;&lt;/tr&gt;&lt;tr bgcolor=\"#E3E3F3\"&gt; &lt;th&gt;ADDRESSBLOCKHOUSENUMBER&lt;/th&gt; &lt;td&gt;&lt;/td&gt; &lt;/tr&gt;&lt;tr bgcolor=\"\"&gt; &lt;th&gt;ADDRESSBUILDINGNAME&lt;/th&gt; &lt;td&gt;&lt;/td&gt; &lt;/tr&gt;&lt;tr bgcolor=\"#E3E3F3\"&gt; &lt;th&gt;ADDRESSPOSTALCODE&lt;/th&gt; &lt;td&gt;829646&lt;/td&gt; &lt;/tr&gt;&lt;tr bgcolor=\"\"&gt; &lt;th&gt;ADDRESSSTREETNAME&lt;/th&gt; &lt;td&gt;200, PONGGOL SEVENTEENTH AVENUE, SINGAPORE 829646&lt;/td&gt; &lt;/tr&gt;&lt;tr bgcolor=\"#E3E3F3\"&gt; &lt;th&gt;ADDRESSTYPE&lt;/th&gt; &lt;td&gt;&lt;/td&gt; &lt;/tr&gt;&lt;tr bgcolor=\"\"&gt; &lt;th&gt;DESCRIPTION&lt;/th&gt; &lt;td&gt;Child Care Services&lt;/td&gt; &lt;/tr&gt;&lt;tr bgcolor=\"#E3E3F3\"&gt; &lt;th&gt;HYPERLINK&lt;/th&gt; &lt;td&gt;&lt;/td&gt; &lt;/tr&gt;&lt;tr bgcolor=\"\"&gt; &lt;th&gt;LANDXADDRESSPOINT&lt;/th&gt; &lt;td&gt;0&lt;/td&gt; &lt;/tr&gt;&lt;tr bgcolor=\"#E3E3F3\"&gt; &lt;th&gt;LANDYADDRESSPOINT&lt;/th&gt; &lt;td&gt;0&lt;/td&gt; &lt;/tr&gt;&lt;tr bgcolor=\"\"&gt; &lt;th&gt;NAME&lt;/th&gt; &lt;td&gt;RAFFLES KIDZ @ PUNGGOL PTE LTD&lt;/td&gt; &lt;/tr&gt;&lt;tr bgcolor=\"#E3E3F3\"&gt; &lt;th&gt;PHOTOURL&lt;/th&gt; &lt;td&gt;&lt;/td&gt; &lt;/tr&gt;&lt;tr bgcolor=\"\"&gt; &lt;th&gt;ADDRESSFLOORNUMBER&lt;/th&gt; &lt;td&gt;&lt;/td&gt; &lt;/tr&gt;&lt;tr bgcolor=\"#E3E3F3\"&gt; &lt;th&gt;INC_CRC&lt;/th&gt; &lt;td&gt;379D017BF244B0FA&lt;/td&gt; &lt;/tr&gt;&lt;tr bgcolor=\"\"&gt; &lt;th&gt;FMEL_UPD_D&lt;/th&gt; &lt;td&gt;20200826094036&lt;/td&gt; &lt;/tr&gt;&lt;tr bgcolor=\"#E3E3F3\"&gt; &lt;th&gt;ADDRESSUNITNUMBER&lt;/th&gt; &lt;td&gt;&lt;/td&gt; &lt;/tr&gt;&lt;/table&gt;&lt;/center&gt; \n\n\n\n# Information of MP Subzone spatial class\nprint(mpsz)\n\nclass       : SpatialPolygonsDataFrame \nfeatures    : 323 \nextent      : 2667.538, 56396.44, 15748.72, 50256.33  (xmin, xmax, ymin, ymax)\ncrs         : +proj=tmerc +lat_0=1.36666666666667 +lon_0=103.833333333333 +k=1 +x_0=28001.642 +y_0=38744.572 +ellps=WGS84 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \nvariables   : 15\nnames       : OBJECTID, SUBZONE_NO, SUBZONE_N, SUBZONE_C, CA_IND, PLN_AREA_N, PLN_AREA_C,       REGION_N, REGION_C,          INC_CRC, FMEL_UPD_D,     X_ADDR,     Y_ADDR,    SHAPE_Leng,    SHAPE_Area \nmin values  :        1,          1, ADMIRALTY,    AMSZ01,      N, ANG MO KIO,         AM, CENTRAL REGION,       CR, 00F5E30B5C9B7AD8,      16409,  5092.8949,  19579.069, 871.554887798, 39437.9352703 \nmax values  :      323,         17,    YUNNAN,    YSSZ09,      Y,     YISHUN,         YS,    WEST REGION,       WR, FFCCF172717C2EAF,      16409, 50424.7923, 49552.7904, 68083.9364708,  69748298.792 \n\n\n\n# Information of costaloutline spatial class\nprint(sg)\n\nclass       : SpatialPolygonsDataFrame \nfeatures    : 60 \nextent      : 2663.926, 56047.79, 16357.98, 50244.03  (xmin, xmax, ymin, ymax)\ncrs         : +proj=tmerc +lat_0=1.36666666666667 +lon_0=103.833333333333 +k=1 +x_0=28001.642 +y_0=38744.572 +ellps=WGS84 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \nvariables   : 4\nnames       : GDO_GID, MSLINK, MAPID,              COSTAL_NAM \nmin values  :       1,      1,     0,             ISLAND LINK \nmax values  :      60,     67,     0, SINGAPORE - MAIN ISLAND \n\n\n\n\n4.3.2 Convert Spatial* class into generic sp format\n\n# Information of costaloutline spatial class\nchildcare_sp &lt;- as(childcare, \"SpatialPoints\")\nsg_sp &lt;- as(sg, \"SpatialPolygons\")\n\n\n# Information of childcare sp object\nprint(childcare_sp)\n\nclass       : SpatialPoints \nfeatures    : 1545 \nextent      : 11203.01, 45404.24, 25667.6, 49300.88  (xmin, xmax, ymin, ymax)\ncrs         : +proj=tmerc +lat_0=1.36666666666667 +lon_0=103.833333333333 +k=1 +x_0=28001.642 +y_0=38744.572 +ellps=WGS84 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \n\n\n\n# Information of costaloutline sp object\nprint(sg_sp)\n\nclass       : SpatialPolygons \nfeatures    : 60 \nextent      : 2663.926, 56047.79, 16357.98, 50244.03  (xmin, xmax, ymin, ymax)\ncrs         : +proj=tmerc +lat_0=1.36666666666667 +lon_0=103.833333333333 +k=1 +x_0=28001.642 +y_0=38744.572 +ellps=WGS84 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \n\n\nSpatial* classes are specific classes for handling points, lines, polygons, grids, etc., each with dedicated methods and structures.\nA generic sp object refers to any object created using the sp package, including all Spatial* classes.\n\n\n4.3.3 Convert generic sp format into spatstat’s ppp format\n\n# Convert and print information of childcare ppp format\nchildcare_ppp &lt;- as.ppp(childcare_sf)\n\nWarning in as.ppp.sf(childcare_sf): only first attribute column is used for\nmarks\n\nchildcare_ppp\n\nMarked planar point pattern: 1545 points\nmarks are of storage type  'character'\nwindow: rectangle = [11203.01, 45404.24] x [25667.6, 49300.88] units\n\n\n\n# Plot childcare_ppp\nplot(childcare_ppp)\n\nWarning in default.charmap(ntypes, chars): Too many types to display every type\nas a different character\n\n\nWarning: Only 10 out of 1545 symbols are shown in the symbol map\n\n\n\n\n\n\n\n\n\n\n# Check summary statistics of childcare_ppp\nsummary(childcare_ppp)\n\nMarked planar point pattern:  1545 points\nAverage intensity 1.91145e-06 points per square unit\n\nCoordinates are given to 11 decimal places\n\nmarks are of type 'character'\nSummary:\n   Length     Class      Mode \n     1545 character character \n\nWindow: rectangle = [11203.01, 45404.24] x [25667.6, 49300.88] units\n                    (34200 x 23630 units)\nWindow area = 808287000 square units\n\n\n\n\n4.3.4 Check for duplicates\n\n# Check if childcare_ppp contains duplicates \nany(duplicated(childcare_ppp))\n\n[1] FALSE\n\n\n\n# Check number of duplicated point events\nsum(multiplicity(childcare_ppp) &gt; 1)\n\n[1] 0\n\n\n\n# Check number of duplicated point events\ntmap_mode('view')\n\ntmap mode set to interactive viewing\n\ntm_shape(childcare) +\n  tm_dots(alpha=0.4, \n          size=0.05)\n\n\n\n\n\n\n# Set tmap_mode back to plot\ntmap_mode('plot')\n\ntmap mode set to plotting\n\n\n\n# Use jittering to remove duplicates (if any)\nchildcare_ppp_jit &lt;- rjitter(childcare_ppp, \n                             retry=TRUE, \n                             nsim=1, \n                             drop=TRUE)\n\n# Check if contains any duplicated points\nany(duplicated(childcare_ppp_jit))\n\n[1] FALSE\n\n\n\n\n4.3.5 Owin Object\n\n# Create owin object from sf object\nsg_owin &lt;- as.owin(sg_sf)\n# Plot owin output object\nplot(sg_owin)\n\n\n\n\n\n\n\n\n\n# Show summary statistics of owin object\nsummary(sg_owin)\n\nWindow: polygonal boundary\n50 separate polygons (1 hole)\n                 vertices         area relative.area\npolygon 1 (hole)       30     -7081.18     -9.76e-06\npolygon 2              55     82537.90      1.14e-04\npolygon 3              90    415092.00      5.72e-04\npolygon 4              49     16698.60      2.30e-05\npolygon 5              38     24249.20      3.34e-05\npolygon 6             976  23344700.00      3.22e-02\npolygon 7             721   1927950.00      2.66e-03\npolygon 8            1992   9992170.00      1.38e-02\npolygon 9             330   1118960.00      1.54e-03\npolygon 10            175    925904.00      1.28e-03\npolygon 11            115    928394.00      1.28e-03\npolygon 12             24      6352.39      8.76e-06\npolygon 13            190    202489.00      2.79e-04\npolygon 14             37     10170.50      1.40e-05\npolygon 15             25     16622.70      2.29e-05\npolygon 16             10      2145.07      2.96e-06\npolygon 17             66     16184.10      2.23e-05\npolygon 18           5195 636837000.00      8.78e-01\npolygon 19             76    312332.00      4.31e-04\npolygon 20            627  31891300.00      4.40e-02\npolygon 21             20     32842.00      4.53e-05\npolygon 22             42     55831.70      7.70e-05\npolygon 23             67   1313540.00      1.81e-03\npolygon 24            734   4690930.00      6.47e-03\npolygon 25             16      3194.60      4.40e-06\npolygon 26             15      4872.96      6.72e-06\npolygon 27             15      4464.20      6.15e-06\npolygon 28             14      5466.74      7.54e-06\npolygon 29             37      5261.94      7.25e-06\npolygon 30            111    662927.00      9.14e-04\npolygon 31             69     56313.40      7.76e-05\npolygon 32            143    145139.00      2.00e-04\npolygon 33            397   2488210.00      3.43e-03\npolygon 34             90    115991.00      1.60e-04\npolygon 35             98     62682.90      8.64e-05\npolygon 36            165    338736.00      4.67e-04\npolygon 37            130     94046.50      1.30e-04\npolygon 38             93    430642.00      5.94e-04\npolygon 39             16      2010.46      2.77e-06\npolygon 40            415   3253840.00      4.49e-03\npolygon 41             30     10838.20      1.49e-05\npolygon 42             53     34400.30      4.74e-05\npolygon 43             26      8347.58      1.15e-05\npolygon 44             74     58223.40      8.03e-05\npolygon 45            327   2169210.00      2.99e-03\npolygon 46            177    467446.00      6.44e-04\npolygon 47             46    699702.00      9.65e-04\npolygon 48              6     16841.00      2.32e-05\npolygon 49             13     70087.30      9.66e-05\npolygon 50              4      9459.63      1.30e-05\nenclosing rectangle: [2663.93, 56047.79] x [16357.98, 50244.03] units\n                     (53380 x 33890 units)\nWindow area = 725376000 square units\nFraction of frame area: 0.401\n\n\n\n# Combine point events object and owin object\nchildcareSG_ppp = childcare_ppp[sg_owin]\n# Show summary statistics of combined object\nsummary(childcareSG_ppp)\n\nMarked planar point pattern:  1545 points\nAverage intensity 2.129929e-06 points per square unit\n\nCoordinates are given to 11 decimal places\n\nmarks are of type 'character'\nSummary:\n   Length     Class      Mode \n     1545 character character \n\nWindow: polygonal boundary\n50 separate polygons (1 hole)\n                 vertices         area relative.area\npolygon 1 (hole)       30     -7081.18     -9.76e-06\npolygon 2              55     82537.90      1.14e-04\npolygon 3              90    415092.00      5.72e-04\npolygon 4              49     16698.60      2.30e-05\npolygon 5              38     24249.20      3.34e-05\npolygon 6             976  23344700.00      3.22e-02\npolygon 7             721   1927950.00      2.66e-03\npolygon 8            1992   9992170.00      1.38e-02\npolygon 9             330   1118960.00      1.54e-03\npolygon 10            175    925904.00      1.28e-03\npolygon 11            115    928394.00      1.28e-03\npolygon 12             24      6352.39      8.76e-06\npolygon 13            190    202489.00      2.79e-04\npolygon 14             37     10170.50      1.40e-05\npolygon 15             25     16622.70      2.29e-05\npolygon 16             10      2145.07      2.96e-06\npolygon 17             66     16184.10      2.23e-05\npolygon 18           5195 636837000.00      8.78e-01\npolygon 19             76    312332.00      4.31e-04\npolygon 20            627  31891300.00      4.40e-02\npolygon 21             20     32842.00      4.53e-05\npolygon 22             42     55831.70      7.70e-05\npolygon 23             67   1313540.00      1.81e-03\npolygon 24            734   4690930.00      6.47e-03\npolygon 25             16      3194.60      4.40e-06\npolygon 26             15      4872.96      6.72e-06\npolygon 27             15      4464.20      6.15e-06\npolygon 28             14      5466.74      7.54e-06\npolygon 29             37      5261.94      7.25e-06\npolygon 30            111    662927.00      9.14e-04\npolygon 31             69     56313.40      7.76e-05\npolygon 32            143    145139.00      2.00e-04\npolygon 33            397   2488210.00      3.43e-03\npolygon 34             90    115991.00      1.60e-04\npolygon 35             98     62682.90      8.64e-05\npolygon 36            165    338736.00      4.67e-04\npolygon 37            130     94046.50      1.30e-04\npolygon 38             93    430642.00      5.94e-04\npolygon 39             16      2010.46      2.77e-06\npolygon 40            415   3253840.00      4.49e-03\npolygon 41             30     10838.20      1.49e-05\npolygon 42             53     34400.30      4.74e-05\npolygon 43             26      8347.58      1.15e-05\npolygon 44             74     58223.40      8.03e-05\npolygon 45            327   2169210.00      2.99e-03\npolygon 46            177    467446.00      6.44e-04\npolygon 47             46    699702.00      9.65e-04\npolygon 48              6     16841.00      2.32e-05\npolygon 49             13     70087.30      9.66e-05\npolygon 50              4      9459.63      1.30e-05\nenclosing rectangle: [2663.93, 56047.79] x [16357.98, 50244.03] units\n                     (53380 x 33890 units)\nWindow area = 725376000 square units\nFraction of frame area: 0.401\n\n\n\n# Plot newly derived childcareSG_ppp\nplot(childcareSG_ppp)\n\nWarning in default.charmap(ntypes, chars): Too many types to display every type\nas a different character\n\n\nWarning: Only 10 out of 1545 symbols are shown in the symbol map"
  },
  {
    "objectID": "Hands-On_Ex/Hands-On_Ex_02/Hands-On_Ex02.html#first-order-spatial-point-patterns-analysis",
    "href": "Hands-On_Ex/Hands-On_Ex_02/Hands-On_Ex02.html#first-order-spatial-point-patterns-analysis",
    "title": "Hands-On Exercise 02",
    "section": "4.4 First-order Spatial Point Patterns Analysis",
    "text": "4.4 First-order Spatial Point Patterns Analysis\n\n# Computing kernel density estimation\nkde_childcareSG_bw &lt;- density(childcareSG_ppp,\n                              sigma=bw.diggle,\n                              edge=TRUE,\n                            kernel=\"gaussian\")\n# Plot derived kernel density\nplot(kde_childcareSG_bw)\n\n\n\n\n\n\n\n\n\n# Retrieve bandwidth used to compute kde layer\nbw &lt;- bw.diggle(childcareSG_ppp)\nbw\n\n   sigma \n298.4095 \n\n\n\n# Use rescale.ppp to convert unit of measurement from meter to kilometer\nchildcareSG_ppp.km &lt;- rescale.ppp(childcareSG_ppp, 1000, \"km\")\n# Re-run density with rescaled dataset\nkde_childcareSG.bw &lt;- density(childcareSG_ppp.km, sigma=bw.diggle, edge=TRUE, kernel=\"gaussian\")\n# Plot updated density\nplot(kde_childcareSG.bw)\n\n\n\n\n\n\n\n\n\n# Check bandwidth return by other calculation methods\nbw.CvL(childcareSG_ppp.km)\n\n   sigma \n4.543278 \n\ncat(\"------------------------------------------------------------------\\n\")\n\n------------------------------------------------------------------\n\nbw.scott(childcareSG_ppp.km)\n\n sigma.x  sigma.y \n2.224898 1.450966 \n\ncat(\"------------------------------------------------------------------\\n\")\n\n------------------------------------------------------------------\n\nbw.ppl(childcareSG_ppp.km)\n\n    sigma \n0.3897114 \n\ncat(\"------------------------------------------------------------------\\n\")\n\n------------------------------------------------------------------\n\nbw.diggle(childcareSG_ppp.km)\n\n    sigma \n0.2984095 \n\n\n\n# Compare output using bw.diggle and bw.ppl methods\nkde_childcareSG.ppl &lt;- density(childcareSG_ppp.km, \n                               sigma=bw.ppl, \n                               edge=TRUE,\n                               kernel=\"gaussian\")\npar(mfrow=c(1,2), mai=c(0, 0.1, 0.1, 0.3),  oma=c(0, 0, 0, 0), cex.main = 0.8, cex.axis = 0.6)\nplot(kde_childcareSG.bw, main = \"bw.diggle\")\nplot(kde_childcareSG.ppl, main = \"bw.ppl\")\n\n\n\n\n\n\n\n\n\n# Compare bw.ppl output for other kernel methods  \npar(mfrow=c(2,2), mai=c(0, 0.1, 0.1, 0.3),  oma=c(0, 0, 0, 0), cex.main = 0.8, cex.axis = 0.6)\nplot(density(childcareSG_ppp.km, \n             sigma=bw.ppl, \n             edge=TRUE, \n             kernel=\"gaussian\"), \n     main=\"Gaussian\")\nplot(density(childcareSG_ppp.km, \n             sigma=bw.ppl, \n             edge=TRUE, \n             kernel=\"epanechnikov\"), \n     main=\"Epanechnikov\")\n\nWarning in density.ppp(childcareSG_ppp.km, sigma = bw.ppl, edge = TRUE, :\nBandwidth selection will be based on Gaussian kernel\n\nplot(density(childcareSG_ppp.km, \n             sigma=bw.ppl, \n             edge=TRUE, \n             kernel=\"quartic\"), \n     main=\"Quartic\")\n\nWarning in density.ppp(childcareSG_ppp.km, sigma = bw.ppl, edge = TRUE, :\nBandwidth selection will be based on Gaussian kernel\n\nplot(density(childcareSG_ppp.km, \n             sigma=bw.ppl, \n             edge=TRUE, \n             kernel=\"disc\"), \n     main=\"Disc\")\n\nWarning in density.ppp(childcareSG_ppp.km, sigma = bw.ppl, edge = TRUE, :\nBandwidth selection will be based on Gaussian kernel\n\n\n\n\n\n\n\n\n\n\n4.4.1 Fixed and Adaptive KDE\n\n# Compute kde layer with a fixed bandwidth\nkde_childcareSG_600 &lt;- density(childcareSG_ppp.km, sigma=0.6, edge=TRUE, kernel=\"gaussian\")\nplot(kde_childcareSG_600)\n\n\n\n\n\n\n\n\n\n# Compute kde layer with an adaptive bandwidth\nkde_childcareSG_adaptive &lt;- adaptive.density(childcareSG_ppp.km, method=\"kernel\")\nplot(kde_childcareSG_adaptive)\n\n\n\n\n\n\n\n\n\n# Compare both fixed and adaptive KDE output\npar(mfrow=c(1,2), mai=c(0, 0.1, 0.1, 0.3),  oma=c(0, 0, 0, 0), cex.main = 0.8, cex.axis = 0.6)\nplot(kde_childcareSG.bw, main = \"Fixed bandwidth\")\nplot(kde_childcareSG_adaptive, main = \"Adaptive bandwidth\")\n\n\n\n\n\n\n\n\n\n# # Convert KDE output into grid object\ngridded_kde_childcareSG_bw &lt;- maptools::as.SpatialGridDataFrame.im(kde_childcareSG.bw) # Use maptools\n\nPlease note that 'maptools' will be retired during October 2023,\nplan transition at your earliest convenience (see\nhttps://r-spatial.org/r/2023/05/15/evolution4.html and earlier blogs\nfor guidance);some functionality will be moved to 'sp'.\n Checking rgeos availability: FALSE\n\nspplot(gridded_kde_childcareSG_bw)\n\n\n\n\n\n\n\n\n\n# Convert kde_childcareSG.bw to raster\nkde_childcareSG_bw_raster &lt;- raster(kde_childcareSG.bw)\nkde_childcareSG_bw_raster\n\nclass      : RasterLayer \ndimensions : 128, 128, 16384  (nrow, ncol, ncell)\nresolution : 0.4170614, 0.2647348  (x, y)\nextent     : 2.663926, 56.04779, 16.35798, 50.24403  (xmin, xmax, ymin, ymax)\ncrs        : NA \nsource     : memory\nnames      : layer \nvalues     : -8.476185e-15, 28.51831  (min, max)\n\n\n\n# Assign CRS information to Rasterlayer\nprojection(kde_childcareSG_bw_raster) &lt;- CRS(\"+init=EPSG:3414\")\nkde_childcareSG_bw_raster\n\nclass      : RasterLayer \ndimensions : 128, 128, 16384  (nrow, ncol, ncell)\nresolution : 0.4170614, 0.2647348  (x, y)\nextent     : 2.663926, 56.04779, 16.35798, 50.24403  (xmin, xmax, ymin, ymax)\ncrs        : +proj=tmerc +lat_0=1.36666666666667 +lon_0=103.833333333333 +k=1 +x_0=28001.642 +y_0=38744.572 +ellps=WGS84 +units=m +no_defs \nsource     : memory\nnames      : layer \nvalues     : -8.476185e-15, 28.51831  (min, max)\n\n\n\n# Visualize raster with tmap\ntm_shape(kde_childcareSG_bw_raster) + \n  tm_raster(\"layer\", palette = \"viridis\") +\n  tm_layout(legend.position = c(\"right\", \"bottom\"), frame = FALSE)\n\n\n\n\n\n\n\n\n\n4.4.1.1 Comparing Spatial Point Patterns with KDE\n\n# Extract study area\npg &lt;- mpsz_sf %&gt;%\n  filter(PLN_AREA_N == \"PUNGGOL\")\ntm &lt;- mpsz_sf %&gt;%\n  filter(PLN_AREA_N == \"TAMPINES\")\nck &lt;- mpsz_sf %&gt;%\n  filter(PLN_AREA_N == \"CHOA CHU KANG\")\njw &lt;- mpsz_sf %&gt;%\n  filter(PLN_AREA_N == \"JURONG WEST\")\n\n# Plot Ponggol\npar(mfrow=c(2,2), cex.main=0.8)\nplot(pg, main = \"Ponggol\")\n\nWarning: plotting the first 9 out of 15 attributes; use max.plot = 15 to plot\nall\n\n\n\n\n\n\n\n\n\n\n# Extract Tampines\npar(mfrow=c(2,2), cex.main=0.8)\nplot(tm, main = \"Tampines\")\n\nWarning: plotting the first 9 out of 15 attributes; use max.plot = 15 to plot\nall\n\n\n\n\n\n\n\n\n\n\n# Extract Choa Chu Kang\npar(mfrow=c(2,2), cex.main=0.8)\nplot(ck, main = \"Choa Chu Kang\")\n\nWarning: plotting the first 10 out of 15 attributes; use max.plot = 15 to plot\nall\n\n\n\n\n\n\n\n\n\n\n# Extract Jurong West\npar(mfrow=c(2,2), cex.main=0.8)\nplot(jw, main = \"Jurong West\")\n\nWarning: plotting the first 9 out of 15 attributes; use max.plot = 15 to plot\nall\n\n\n\n\n\n\n\n\n\n\n## Using \n# Convert sf objects into owin objects\npg_owin = as.owin(pg)\ntm_owin = as.owin(tm)\nck_owin = as.owin(ck)\njw_owin = as.owin(jw)\n\n# Combine childcare points and study area\nchildcare_pg_ppp = childcare_ppp_jit[pg_owin]\nchildcare_tm_ppp = childcare_ppp_jit[tm_owin]\nchildcare_ck_ppp = childcare_ppp_jit[ck_owin]\nchildcare_jw_ppp = childcare_ppp_jit[jw_owin]\n\n# Transform unit of measurement from metre to kilometre\nchildcare_pg_ppp.km = rescale.ppp(childcare_pg_ppp, 1000, \"km\")\nchildcare_tm_ppp.km = rescale.ppp(childcare_tm_ppp, 1000, \"km\")\nchildcare_ck_ppp.km = rescale.ppp(childcare_ck_ppp, 1000, \"km\")\nchildcare_jw_ppp.km = rescale.ppp(childcare_jw_ppp, 1000, \"km\")\n\n# Plot the 4 study areas and location of childcare centres\npar(mfrow=c(2,2),  mai=c(0.2, 0.2, 0.2, 0.2), cex.main=0.8, cex.axis=0.8)\n\n# par(mfrow=c(1,1))  # Reset to single plot layout\n# par(cex.main=1, cex.lab=1, cex.axis=1)  # Reset font sizes to default\n\nplot(childcare_pg_ppp.km, main=\"Punggol\", cex = 0.5)\n\nWarning in default.charmap(ntypes, chars): Too many types to display every type\nas a different character\n\n\nWarning: Only 10 out of 61 symbols are shown in the symbol map\n\nplot(childcare_tm_ppp.km, main=\"Tampines\", cex = 0.5)\n\nWarning in default.charmap(ntypes, chars): Too many types to display every type\nas a different character\n\n\nWarning: Only 10 out of 89 symbols are shown in the symbol map\n\nplot(childcare_ck_ppp.km, main=\"Choa Chu Kang\", cex = 0.5)\n\nWarning in default.charmap(ntypes, chars): Too many types to display every type\nas a different character\n\n\nWarning: Only 10 out of 61 symbols are shown in the symbol map\n\nplot(childcare_jw_ppp.km, main=\"Jurong West\", cex = 0.5)\n\nWarning in default.charmap(ntypes, chars): Too many types to display every type\nas a different character\n\n\nWarning: Only 10 out of 88 symbols are shown in the symbol map\n\n\n\n\n\n\n\n\n\n\n# Plot KDE of planning areas with bw.diggle method\npar(mfrow=c(2,2),  mai=c(0.2, 0.2, 0.2, 0.2),  oma=c(0, 0, 0, 0), cex.main = 0.8, cex.axis = 0.7)\nplot(density(childcare_pg_ppp.km, \n             sigma=bw.diggle, \n             edge=TRUE, \n             kernel=\"gaussian\"),\n     main=\"Punggol\")\nplot(density(childcare_tm_ppp.km, \n             sigma=bw.diggle, \n             edge=TRUE, \n             kernel=\"gaussian\"),\n     main=\"Tempines\")\nplot(density(childcare_ck_ppp.km, \n             sigma=bw.diggle, \n             edge=TRUE, \n             kernel=\"gaussian\"),\n     main=\"Choa Chu Kang\")\nplot(density(childcare_jw_ppp.km, \n             sigma=bw.diggle, \n             edge=TRUE, \n             kernel=\"gaussian\"),\n     main=\"JUrong West\")\n\n\n\n\n\n\n\n\n\n# Plot KDE of planning areas with fixed bandwidth\npar(mfrow=c(2,2), mai=c(0.2, 0.2, 0.2, 0.2),  oma=c(0, 0, 0, 0), cex.main = 0.8, cex.axis = 0.7)\nplot(density(childcare_ck_ppp.km, \n             sigma=0.25, \n             edge=TRUE, \n             kernel=\"gaussian\"),\n     main=\"Chou Chu Kang\")\nplot(density(childcare_jw_ppp.km, \n             sigma=0.25, \n             edge=TRUE, \n             kernel=\"gaussian\"),\n     main=\"JUrong West\")\nplot(density(childcare_pg_ppp.km, \n             sigma=0.25, \n             edge=TRUE, \n             kernel=\"gaussian\"),\n     main=\"Punggol\")\nplot(density(childcare_tm_ppp.km, \n             sigma=0.25, \n             edge=TRUE, \n             kernel=\"gaussian\"),\n     main=\"Tampines\")\n\n\n\n\n\n\n\n\n\n\n\n4.4.2 Nearest Neighbour Analysis\n\n# Use Clark and Evans Test for full data\nclarkevans.test(childcareSG_ppp,\n                correction=\"none\",\n                clipregion=\"sg_owin\",\n                alternative=c(\"clustered\"),\n                nsim=99)\n\n\n    Clark-Evans test\n    No edge correction\n    Z-test\n\ndata:  childcareSG_ppp\nR = 0.55631, p-value &lt; 2.2e-16\nalternative hypothesis: clustered (R &lt; 1)\n\n\nConclusion: Points on childcareSG_ppp are more clustered than randomly distributed (Accept H1) at 95% confidence level (p-value &lt; 0.05)\n\n# Use Clark and Evans Test for Choa Chu Kang\nclarkevans.test(childcare_ck_ppp,\n                correction=\"none\",\n                clipregion=NULL,\n                alternative=c(\"two.sided\"),\n                nsim=999)\n\n\n    Clark-Evans test\n    No edge correction\n    Z-test\n\ndata:  childcare_ck_ppp\nR = 0.92614, p-value = 0.2698\nalternative hypothesis: two-sided\n\n\n\n# Use Clark and Evans Test for Tampines\nclarkevans.test(childcare_tm_ppp,\n                correction=\"none\",\n                clipregion=NULL,\n                alternative=c(\"two.sided\"),\n                nsim=999)\n\n\n    Clark-Evans test\n    No edge correction\n    Z-test\n\ndata:  childcare_tm_ppp\nR = 0.81761, p-value = 0.0009954\nalternative hypothesis: two-sided"
  },
  {
    "objectID": "Hands-On_Ex/Hands-On_Ex_02/Hands-On_Ex02.html#using-g-function",
    "href": "Hands-On_Ex/Hands-On_Ex_02/Hands-On_Ex02.html#using-g-function",
    "title": "Hands-On Exercise 02",
    "section": "5.1 Using G-Function",
    "text": "5.1 Using G-Function\nG function measures the distribution of the distances from an arbitrary event to its nearest event\n\n# Compute G-function for Choa Chu Kang\nG_CK = Gest(childcare_ck_ppp, correction = \"border\")\nplot(G_CK, xlim=c(0,500))\n\n\n\n\n\n\n\n\n\n# Complete Spatial Randomness Test (Monte Carlo)\nG_CK.csr &lt;- envelope(childcare_ck_ppp, Gest, nsim = 999)\n\nGenerating 999 simulations of CSR  ...\n1, 2, 3, ......10.........20.........30.........40.........50.........60..\n.......70.........80.........90.........100.........110.........120.........130\n.........140.........150.........160.........170.........180.........190........\n.200.........210.........220.........230.........240.........250.........260......\n...270.........280.........290.........300.........310.........320.........330....\n.....340.........350.........360.........370.........380.........390.........400..\n.......410.........420.........430.........440.........450.........460.........470\n.........480.........490.........500.........510.........520.........530........\n.540.........550.........560.........570.........580.........590.........600......\n...610.........620.........630.........640.........650.........660.........670....\n.....680.........690.........700.........710.........720.........730.........740..\n.......750.........760.........770.........780.........790.........800.........810\n.........820.........830.........840.........850.........860.........870........\n.880.........890.........900.........910.........920.........930.........940......\n...950.........960.........970.........980.........990........\n999.\n\nDone.\n\n# Plot results\nplot(G_CK.csr)\n\n\n\n\n\n\n\n\n\n# Compute G-function for Tampines\nG_tm = Gest(childcare_tm_ppp, correction = \"best\")\nplot(G_tm)\n\n\n\n\n\n\n\n\n\n# Complete Spatial Randomness Test (Monte Carlo)\nG_tm.csr &lt;- envelope(childcare_tm_ppp, Gest, correction = \"all\", nsim = 999)\n\nGenerating 999 simulations of CSR  ...\n1, 2, 3, ......10 [1:04 remaining] .........20 [35 sec remaining] ...\n......30 [26 sec remaining] .........40 [21 sec remaining] .........50 [19 sec remaining] ..\n.......60 [17 sec remaining] .........70 [15 sec remaining] .........80 [14 sec remaining] .\n........90 [13 sec remaining] .........100 [13 sec remaining] .........110\n [12 sec remaining] .........120 [12 sec remaining] .........130 [12 sec remaining] .........\n140 [11 sec remaining] .........150 [11 sec remaining] .........160 [11 sec remaining] ........\n.170 [10 sec remaining] .........180 [10 sec remaining] .........190 [10 sec remaining] .......\n..200 [10 sec remaining] .........210 [9 sec remaining] .........220 [9 sec remaining] ......\n...230 [9 sec remaining] .........240 [9 sec remaining] .........250 [9 sec remaining] .....\n....260 [9 sec remaining] .........270 [8 sec remaining] .........280 [8 sec remaining] ....\n.....290 [8 sec remaining] .........300 [8 sec remaining] .........310 [8 sec remaining] ...\n......320 [8 sec remaining] .........330 [7 sec remaining] .........340 [7 sec remaining] ..\n.......350 [7 sec remaining] .........360 [7 sec remaining] .........370 [7 sec remaining] .\n........380 [7 sec remaining] .........390 [7 sec remaining] .........400\n [7 sec remaining] .........410 [6 sec remaining] .........420 [6 sec remaining] .........\n430 [6 sec remaining] .........440 [6 sec remaining] .........450 [6 sec remaining] ........\n.460 [6 sec remaining] .........470 [6 sec remaining] .........480 [6 sec remaining] .......\n..490 [6 sec remaining] .........500 [5 sec remaining] .........510 [5 sec remaining] ......\n...520 [5 sec remaining] .........530 [5 sec remaining] .........540 [5 sec remaining] .....\n....550 [5 sec remaining] .........560 [5 sec remaining] .........570 [5 sec remaining] ....\n.....580 [5 sec remaining] .........590 [5 sec remaining] .........600 [4 sec remaining] ...\n......610 [4 sec remaining] .........620 [4 sec remaining] .........630 [4 sec remaining] ..\n.......640 [4 sec remaining] .........650 [4 sec remaining] .........660 [4 sec remaining] .\n........670 [4 sec remaining] .........680 [3 sec remaining] .........690\n [3 sec remaining] .........700 [3 sec remaining] .........710 [3 sec remaining] .........\n720 [3 sec remaining] .........730 [3 sec remaining] .........740 [3 sec remaining] ........\n.750 [3 sec remaining] .........760 [3 sec remaining] .........770 [2 sec remaining] .......\n..780 [2 sec remaining] .........790 [2 sec remaining] .........800 [2 sec remaining] ......\n...810 [2 sec remaining] .........820 [2 sec remaining] .........830 [2 sec remaining] .....\n....840 [2 sec remaining] .........850 [2 sec remaining] .........860 [1 sec remaining] ....\n.....870 [1 sec remaining] .........880 [1 sec remaining] .........890 [1 sec remaining] ...\n......900 [1 sec remaining] .........910 [1 sec remaining] .........920 [1 sec remaining] ..\n.......930 [1 sec remaining] .........940 [1 sec remaining] .........950 [1 sec remaining] .\n........960 [0 sec remaining] .........970 [0 sec remaining] .........980\n [0 sec remaining] .........990 [0 sec remaining] ........\n999.\n\nDone.\n\n# Plot results\nplot(G_tm.csr)"
  },
  {
    "objectID": "Hands-On_Ex/Hands-On_Ex_02/Hands-On_Ex02.html#using-f-function",
    "href": "Hands-On_Ex/Hands-On_Ex_02/Hands-On_Ex02.html#using-f-function",
    "title": "Hands-On Exercise 02",
    "section": "5.2 Using F-Function",
    "text": "5.2 Using F-Function\nF function estimates the empty space function F(r) or its hazard rate h(r) from a point pattern in a window of arbitrary\n\n# Compute F-function for Choa Chu Kang\nF_CK = Fest(childcare_ck_ppp)\nplot(F_CK)\n\n\n\n\n\n\n\n\n\n# Complete Spatial Randomness Test (Monte Carlo)\nF_CK.csr &lt;- envelope(childcare_ck_ppp, Fest, nsim = 999)\n\nGenerating 999 simulations of CSR  ...\n1, 2, 3, ......10.........20.........30.........40.........50.........60..\n.......70.........80.........90.........100.........110.........120.........130\n.........140.........150.........160.........170.........180.........190........\n.200.........210.........220.........230.........240.........250.........260......\n...270.........280.........290.........300.........310.........320.........330....\n.....340.........350.........360.........370.........380.........390.........400..\n.......410.........420.........430.........440.........450.........460.........470\n.........480.........490.........500.........510.........520.........530........\n.540.........550.........560.........570.........580.........590.........600......\n...610.........620.........630.........640.........650.........660.........670....\n.....680.........690.........700.........710.........720.........730.........740..\n.......750.........760.........770.........780.........790.........800.........810\n.........820.........830.........840.........850.........860.........870........\n.880.........890.........900.........910.........920.........930.........940......\n...950.........960.........970.........980.........990........\n999.\n\nDone.\n\n# Plot results\nplot(F_CK.csr)\n\n\n\n\n\n\n\n\n\n# Compute F-function for Tampines\nF_tm = Fest(childcare_tm_ppp, correction = \"best\")\nplot(F_tm)\n\n\n\n\n\n\n\n\n\n# Complete Spatial Randomness Test (Monte Carlo)\nF_tm.csr &lt;- envelope(childcare_tm_ppp, Fest, correction = \"all\", nsim = 999)\n\nGenerating 999 simulations of CSR  ...\n1, 2, 3, ......10.........20.........30.........40.........50.........60..\n.......70.........80.........90.........100.........110.........120.........130\n.........140.........150.........160.........170.........180.........190........\n.200.........210.........220.........230.........240.........250.........260......\n...270.........280.........290.........300.........310.........320.........330....\n.....340.........350.........360.........370.........380.........390.........400..\n.......410.........420.........430.........440.........450.........460.........470\n.........480.........490.........500.........510.........520.........530........\n.540.........550.........560.........570.........580.........590.........600......\n...610.........620.........630.........640.........650.........660.........670....\n.....680.........690.........700.........710.........720.........730.........740..\n.......750.........760.........770.........780.........790.........800.........810\n.........820.........830.........840.........850.........860.........870........\n.880.........890.........900.........910.........920.........930.........940......\n...950.........960.........970.........980.........990........\n999.\n\nDone.\n\n# Plot results\nplot(F_tm.csr)"
  },
  {
    "objectID": "Hands-On_Ex/Hands-On_Ex_02/Hands-On_Ex02.html#using-k-function",
    "href": "Hands-On_Ex/Hands-On_Ex_02/Hands-On_Ex02.html#using-k-function",
    "title": "Hands-On Exercise 02",
    "section": "5.3 Using K-Function",
    "text": "5.3 Using K-Function\nK-function measures the number of events found up to a given distance of any particular event.\n\n# Compute K-function for Choa Chu Kang\nK_ck = Kest(childcare_ck_ppp, correction = \"Ripley\")\nplot(K_ck, . -r ~ r, ylab= \"K(d)-r\", xlab = \"d(m)\")\n\n\n\n\n\n\n\n\n\n# Complete Spatial Randomness Test (Monte Carlo)\nK_ck.csr &lt;- envelope(childcare_ck_ppp, Kest, nsim = 99, rank = 1, glocal=TRUE)\n\nGenerating 99 simulations of CSR  ...\n1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20,\n21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40,\n41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60,\n61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80,\n81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, \n99.\n\nDone.\n\n# Plot results\nplot(K_ck.csr, . - r ~ r, xlab=\"d\", ylab=\"K(d)-r\")\n\n\n\n\n\n\n\n\n\n# Compute K-function for Tampines\nK_tm = Kest(childcare_tm_ppp, correction = \"Ripley\")\nplot(K_tm, . -r ~ r, \n     ylab= \"K(d)-r\", xlab = \"d(m)\", \n     xlim=c(0,1000))\n\n\n\n\n\n\n\n\n\n# Complete Spatial Randomness Test (Monte Carlo)\nK_tm.csr &lt;- envelope(childcare_tm_ppp, Kest, nsim = 99, rank = 1, glocal=TRUE)\n\nGenerating 99 simulations of CSR  ...\n1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20,\n21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40,\n41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60,\n61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80,\n81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, \n99.\n\nDone.\n\n# Plot results\nplot(K_tm.csr, . - r ~ r, \n     xlab=\"d\", ylab=\"K(d)-r\", xlim=c(0,500))"
  },
  {
    "objectID": "Hands-On_Ex/Hands-On_Ex_02/Hands-On_Ex02.html#using-l-function",
    "href": "Hands-On_Ex/Hands-On_Ex_02/Hands-On_Ex02.html#using-l-function",
    "title": "Hands-On Exercise 02",
    "section": "5.4 Using L-Function",
    "text": "5.4 Using L-Function\n\n# Compute L-function for Choa Chu Kang\nL_ck = Lest(childcare_ck_ppp, correction = \"Ripley\")\nplot(L_ck, . -r ~ r, \n     ylab= \"L(d)-r\", xlab = \"d(m)\")\n\n\n\n\n\n\n\n\n\n# Complete Spatial Randomness Test (Monte Carlo)\nL_ck.csr &lt;- envelope(childcare_ck_ppp, Lest, nsim = 99, rank = 1, glocal=TRUE)\n\nGenerating 99 simulations of CSR  ...\n1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20,\n21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40,\n41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60,\n61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80,\n81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, \n99.\n\nDone.\n\n# Plot results\nplot(L_ck.csr, . - r ~ r, xlab=\"d\", ylab=\"L(d)-r\")\n\n\n\n\n\n\n\n\n\n# Compute L-function for Tampines\nL_tm = Lest(childcare_tm_ppp, correction = \"Ripley\")\nplot(L_tm, . -r ~ r, \n     ylab= \"L(d)-r\", xlab = \"d(m)\", \n     xlim=c(0,1000))\n\n\n\n\n\n\n\n\n\n# Complete Spatial Randomness Test (Monte Carlo)\nL_tm.csr &lt;- envelope(childcare_tm_ppp, Lest, nsim = 99, rank = 1, glocal=TRUE)\n\nGenerating 99 simulations of CSR  ...\n1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20,\n21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40,\n41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60,\n61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80,\n81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, \n99.\n\nDone.\n\n# Plot results\nplot(L_tm.csr, . - r ~ r, \n     xlab=\"d\", ylab=\"L(d)-r\", xlim=c(0,500))"
  },
  {
    "objectID": "In-Class_Ex/In-Class_Ex_01/In-Class_Ex01.html#working-with-master-plan-planning-sub-zone-data",
    "href": "In-Class_Ex/In-Class_Ex_01/In-Class_Ex01.html#working-with-master-plan-planning-sub-zone-data",
    "title": "In Class Exercise 01",
    "section": "Working with Master Plan Planning Sub-zone Data",
    "text": "Working with Master Plan Planning Sub-zone Data\n\nLoad Data\n\n# Load mpsz14_shp sf\nmpsz14_shp &lt;- st_read(dsn = \"data/MasterPlan2014SubzoneBoundaryWebSHP/\", layer = \"MP14_SUBZONE_WEB_PL\")\n\nReading layer `MP14_SUBZONE_WEB_PL' from data source \n  `C:\\Users\\Henry\\Desktop\\SMU Masters\\2024-2025 T1\\Geospatial Analytics & Applications\\Project\\GeospatialWebsite\\In-Class_Ex\\In-Class_Ex_01\\data\\MasterPlan2014SubzoneBoundaryWebSHP' \n  using driver `ESRI Shapefile'\nSimple feature collection with 323 features and 15 fields\nGeometry type: MULTIPOLYGON\nDimension:     XY\nBounding box:  xmin: 2667.538 ymin: 15748.72 xmax: 56396.44 ymax: 50256.33\nProjected CRS: SVY21\n\n# mpsz14_kml &lt;- st_read(\"data/MasterPlan2014SubzoneBoundaryWebKML.kml\")\n\n\n\nWrite mpsz14_shp sf dataframe to kml file\n\nst_write(mpsz14_shp, \"data/MP14_SUBZONE_WEB_PL.kml\", \n         delete_dsn = TRUE # Overwrite old file if exists\n         )\n\nDeleting source `data/MP14_SUBZONE_WEB_PL.kml' using driver `KML'\nWriting layer `MP14_SUBZONE_WEB_PL' to data source \n  `data/MP14_SUBZONE_WEB_PL.kml' using driver `KML'\nWriting 323 features with 15 fields and geometry type Multi Polygon."
  },
  {
    "objectID": "In-Class_Ex/In-Class_Ex_01/In-Class_Ex01.html#working-with-pre-school-location-data",
    "href": "In-Class_Ex/In-Class_Ex_01/In-Class_Ex01.html#working-with-pre-school-location-data",
    "title": "In Class Exercise 01",
    "section": "Working with Pre-school Location Data",
    "text": "Working with Pre-school Location Data\n\n# \npreschool_ini &lt;- st_read(\"data/PreSchoolsLocation.kml\")\n\nReading layer `PRESCHOOLS_LOCATION' from data source \n  `C:\\Users\\Henry\\Desktop\\SMU Masters\\2024-2025 T1\\Geospatial Analytics & Applications\\Project\\GeospatialWebsite\\In-Class_Ex\\In-Class_Ex_01\\data\\PreSchoolsLocation.kml' \n  using driver `KML'\nSimple feature collection with 2290 features and 2 fields\nGeometry type: POINT\nDimension:     XYZ\nBounding box:  xmin: 103.6878 ymin: 1.247759 xmax: 103.9897 ymax: 1.462134\nz_range:       zmin: 0 zmax: 0\nGeodetic CRS:  WGS 84\n\npreschool &lt;- st_read(\"data/PreSchoolsLocation.kml\") %&gt;%\n  st_transform(crs = 3414) # Transform (Grid Projection) from GRS to CRS \n\nReading layer `PRESCHOOLS_LOCATION' from data source \n  `C:\\Users\\Henry\\Desktop\\SMU Masters\\2024-2025 T1\\Geospatial Analytics & Applications\\Project\\GeospatialWebsite\\In-Class_Ex\\In-Class_Ex_01\\data\\PreSchoolsLocation.kml' \n  using driver `KML'\nSimple feature collection with 2290 features and 2 fields\nGeometry type: POINT\nDimension:     XYZ\nBounding box:  xmin: 103.6878 ymin: 1.247759 xmax: 103.9897 ymax: 1.462134\nz_range:       zmin: 0 zmax: 0\nGeodetic CRS:  WGS 84\n\n#\npresch_geo &lt;- st_read(\"data/PreSchoolsLocation.geojson\") \n\nReading layer `PreSchoolsLocation' from data source \n  `C:\\Users\\Henry\\Desktop\\SMU Masters\\2024-2025 T1\\Geospatial Analytics & Applications\\Project\\GeospatialWebsite\\In-Class_Ex\\In-Class_Ex_01\\data\\PreSchoolsLocation.geojson' \n  using driver `GeoJSON'\nSimple feature collection with 2290 features and 2 fields\nGeometry type: POINT\nDimension:     XYZ\nBounding box:  xmin: 103.6878 ymin: 1.247759 xmax: 103.9897 ymax: 1.462134\nz_range:       zmin: 0 zmax: 0\nGeodetic CRS:  WGS 84"
  },
  {
    "objectID": "In-Class_Ex/In-Class_Ex_01/In-Class_Ex01.html#working-with-master-plan-2019-subzone-boundary-data",
    "href": "In-Class_Ex/In-Class_Ex_01/In-Class_Ex01.html#working-with-master-plan-2019-subzone-boundary-data",
    "title": "In Class Exercise 01",
    "section": "Working with Master Plan 2019 Subzone Boundary Data",
    "text": "Working with Master Plan 2019 Subzone Boundary Data\n\n# Load Master Plan 2019 Subzone (No Sea)\nmpsz19_shp_ini &lt;- st_read(dsn = \"data/MPSZ-2019/\", layer = \"MPSZ-2019\")\n\nReading layer `MPSZ-2019' from data source \n  `C:\\Users\\Henry\\Desktop\\SMU Masters\\2024-2025 T1\\Geospatial Analytics & Applications\\Project\\GeospatialWebsite\\In-Class_Ex\\In-Class_Ex_01\\data\\MPSZ-2019' \n  using driver `ESRI Shapefile'\nSimple feature collection with 332 features and 6 fields\nGeometry type: MULTIPOLYGON\nDimension:     XY\nBounding box:  xmin: 103.6057 ymin: 1.158699 xmax: 104.0885 ymax: 1.470775\nGeodetic CRS:  WGS 84\n\nmpsz19_shp &lt;- st_read(dsn = \"data/MPSZ-2019/\", layer = \"MPSZ-2019\") %&gt;% \n  st_transform(crs = 3414) # Transform (Grid Projection) from GRS to CRS \n\nReading layer `MPSZ-2019' from data source \n  `C:\\Users\\Henry\\Desktop\\SMU Masters\\2024-2025 T1\\Geospatial Analytics & Applications\\Project\\GeospatialWebsite\\In-Class_Ex\\In-Class_Ex_01\\data\\MPSZ-2019' \n  using driver `ESRI Shapefile'\nSimple feature collection with 332 features and 6 fields\nGeometry type: MULTIPOLYGON\nDimension:     XY\nBounding box:  xmin: 103.6057 ymin: 1.158699 xmax: 104.0885 ymax: 1.470775\nGeodetic CRS:  WGS 84\n\n\n\n# KML File\nmpsz19_kml &lt;- st_read(\"data/MasterPlan2019SubzoneBoundaryNoSeaKML.KML\")\n\nReading layer `URA_MP19_SUBZONE_NO_SEA_PL' from data source \n  `C:\\Users\\Henry\\Desktop\\SMU Masters\\2024-2025 T1\\Geospatial Analytics & Applications\\Project\\GeospatialWebsite\\In-Class_Ex\\In-Class_Ex_01\\data\\MasterPlan2019SubzoneBoundaryNoSeaKML.kml' \n  using driver `KML'\nSimple feature collection with 332 features and 2 fields\nGeometry type: MULTIPOLYGON\nDimension:     XY, XYZ\nBounding box:  xmin: 103.6057 ymin: 1.158699 xmax: 104.0885 ymax: 1.470775\nz_range:       zmin: 0 zmax: 0\nGeodetic CRS:  WGS 84\n\n\n\n# Check Coordinate system of mpsz sf dataframe\nst_crs(mpsz19_shp_ini)\n\nCoordinate Reference System:\n  User input: WGS 84 \n  wkt:\nGEOGCRS[\"WGS 84\",\n    DATUM[\"World Geodetic System 1984\",\n        ELLIPSOID[\"WGS 84\",6378137,298.257223563,\n            LENGTHUNIT[\"metre\",1]]],\n    PRIMEM[\"Greenwich\",0,\n        ANGLEUNIT[\"degree\",0.0174532925199433]],\n    CS[ellipsoidal,2],\n        AXIS[\"latitude\",north,\n            ORDER[1],\n            ANGLEUNIT[\"degree\",0.0174532925199433]],\n        AXIS[\"longitude\",east,\n            ORDER[2],\n            ANGLEUNIT[\"degree\",0.0174532925199433]],\n    ID[\"EPSG\",4326]]\n\n\n\n# Check Coordinate system of preschool sf dataframe\nst_crs(preschool_ini)\n\nCoordinate Reference System:\n  User input: WGS 84 \n  wkt:\nGEOGCRS[\"WGS 84\",\n    DATUM[\"World Geodetic System 1984\",\n        ELLIPSOID[\"WGS 84\",6378137,298.257223563,\n            LENGTHUNIT[\"metre\",1]]],\n    PRIMEM[\"Greenwich\",0,\n        ANGLEUNIT[\"degree\",0.0174532925199433]],\n    CS[ellipsoidal,2],\n        AXIS[\"geodetic latitude (Lat)\",north,\n            ORDER[1],\n            ANGLEUNIT[\"degree\",0.0174532925199433]],\n        AXIS[\"geodetic longitude (Lon)\",east,\n            ORDER[2],\n            ANGLEUNIT[\"degree\",0.0174532925199433]],\n    ID[\"EPSG\",4326]]"
  },
  {
    "objectID": "In-Class_Ex/In-Class_Ex_01/In-Class_Ex01.html#geospatial-data-wrangling",
    "href": "In-Class_Ex/In-Class_Ex_01/In-Class_Ex01.html#geospatial-data-wrangling",
    "title": "In Class Exercise 01",
    "section": "Geospatial Data Wrangling",
    "text": "Geospatial Data Wrangling\n\n# Add preschool count - number of preschools which intersects with each polygon\nmpsz19_shp &lt;- mpsz19_shp %&gt;%\n  mutate(`PreSch Count` = lengths(\n    st_intersects(mpsz19_shp, preschool)))\n\n\n# Compute density - count/area\nmpsz19_shp &lt;- mpsz19_shp %&gt;%\n  mutate(Area = units::drop_units(\n    st_area(.)),\n    `PreSch Density` = `PreSch Count` / Area * 1000000\n  )"
  },
  {
    "objectID": "In-Class_Ex/In-Class_Ex_01/In-Class_Ex01.html#statistical-analysis",
    "href": "In-Class_Ex/In-Class_Ex_01/In-Class_Ex01.html#statistical-analysis",
    "title": "In Class Exercise 01",
    "section": "Statistical Analysis",
    "text": "Statistical Analysis\n\nmpsz19_shp$`PreSch Density` &lt;- as.numeric(as.character(mpsz19_shp$`PreSch Density`))\nmpsz19_shp$`PreSch Count` &lt;- as.numeric(as.character(mpsz19_shp$`PreSch Count`)) \nmpsz19_shp_df &lt;- as.data.frame(mpsz19_shp)\n\nggscatterstats(data = mpsz19_shp_df,\n               x = `PreSch Density`,\n               y = `PreSch Count`,\n               type = \"parametric\")\n\nRegistered S3 method overwritten by 'ggside':\n  method from   \n  +.gg   ggplot2\n\n\n`stat_xsidebin()` using `bins = 30`. Pick better value with `binwidth`.\n`stat_ysidebin()` using `bins = 30`. Pick better value with `binwidth`."
  },
  {
    "objectID": "In-Class_Ex/In-Class_Ex_01/In-Class_Ex01.html#working-with-population-data",
    "href": "In-Class_Ex/In-Class_Ex_01/In-Class_Ex01.html#working-with-population-data",
    "title": "In Class Exercise 01",
    "section": "Working with Population Data",
    "text": "Working with Population Data\n\n# Load Population Data\npopdata &lt;- read_csv(\"data/respopagesextod2023.csv\")\n\nRows: 100928 Columns: 7\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr (5): PA, SZ, AG, Sex, TOD\ndbl (2): Pop, Time\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\n# Data Wrangling\npopdata2023 &lt;- popdata %&gt;%\n  group_by(PA, SZ, AG) %&gt;%\n  summarise(`POP` = sum(`Pop`)) %&gt;%\n  ungroup() %&gt;%\n  pivot_wider(names_from=AG, \n              values_from=POP) \n\n`summarise()` has grouped output by 'PA', 'SZ'. You can override using the\n`.groups` argument.\n\n# See age groups\ncolnames(popdata2023)\n\n [1] \"PA\"          \"SZ\"          \"0_to_4\"      \"10_to_14\"    \"15_to_19\"   \n [6] \"20_to_24\"    \"25_to_29\"    \"30_to_34\"    \"35_to_39\"    \"40_to_44\"   \n[11] \"45_to_49\"    \"50_to_54\"    \"55_to_59\"    \"5_to_9\"      \"60_to_64\"   \n[16] \"65_to_69\"    \"70_to_74\"    \"75_to_79\"    \"80_to_84\"    \"85_to_89\"   \n[21] \"90_and_Over\"\n\n\n\n# Derive PA, SZ, YOUNG, ECONOMY ACTIVE, AGED, TOTAL, DEPENDENCY \npopdata2023 &lt;- popdata %&gt;%\n  group_by(PA, SZ, AG) %&gt;%\n  summarise(`POP` = sum(`Pop`)) %&gt;%\n  ungroup() %&gt;%\n  pivot_wider(names_from=AG, \n              values_from=POP) %&gt;%\n  mutate(YOUNG = rowSums(select(., `0_to_4`, `5_to_9`, `10_to_14`, `15_to_19`, `20_to_24`)),\n         `ECONOMY ACTIVE` = rowSums(select(., `25_to_29`, `30_to_34`, `35_to_39`, `40_to_44`, `45_to_49`, `50_to_54`, `55_to_59`, `60_to_64`)),\n         AGED = rowSums(select(., `65_to_69`, `70_to_74`, `75_to_79`, `80_to_84`, `85_to_89`, `90_and_Over`))) %&gt;%\n  mutate(`TOTAL`= (`YOUNG` + `ECONOMY ACTIVE` + `AGED`),\n         `DEPENDENCY` = ((`YOUNG` + `AGED`)/`ECONOMY ACTIVE`)) %&gt;%  \n  select(`PA`, `SZ`, `YOUNG`, \n       `ECONOMY ACTIVE`, `AGED`, \n       `TOTAL`, `DEPENDENCY`)\n\n`summarise()` has grouped output by 'PA', 'SZ'. You can override using the\n`.groups` argument.\n\nhead(popdata2023)\n\n# A tibble: 6 × 7\n  PA         SZ                    YOUNG `ECONOMY ACTIVE`  AGED TOTAL DEPENDENCY\n  &lt;chr&gt;      &lt;chr&gt;                 &lt;dbl&gt;            &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt;      &lt;dbl&gt;\n1 Ang Mo Kio Ang Mo Kio Town Cent…  1240             2830   890  4960      0.753\n2 Ang Mo Kio Cheng San              5150            15600  6580 27330      0.752\n3 Ang Mo Kio Chong Boon             4620            14120  7060 25800      0.827\n4 Ang Mo Kio Kebun Bahru            4320            12400  5640 22360      0.803\n5 Ang Mo Kio Sembawang Hills        1840             3670  1420  6930      0.888\n6 Ang Mo Kio Shangri-La             3810             9600  4320 17730      0.847\n\n\n\n# Convert values to upper case for joining\npopdata2023 &lt;- popdata2023 %&gt;%\n  mutate_at(.vars = vars(PA, SZ), \n          .funs = list(toupper))\n\n# Left join population data to mpsz\nmpsz_pop2023 &lt;- left_join(mpsz19_shp, popdata2023,\n                          by = c(\"SUBZONE_N\" = \"SZ\"))\n\n# Left join mpsz to population data\npop2023_mpsz &lt;- left_join(popdata2023, mpsz19_shp, \n                          by = c(\"SZ\" = \"SUBZONE_N\"))\nhead(mpsz_pop2023)\n\nSimple feature collection with 6 features and 15 fields\nGeometry type: MULTIPOLYGON\nDimension:     XY\nBounding box:  xmin: 8012.578 ymin: 22108.68 xmax: 35287.9 ymax: 31092.38\nProjected CRS: SVY21 / Singapore TM\n                SUBZONE_N SUBZONE_C      PLN_AREA_N PLN_AREA_C       REGION_N\n1             MARINA EAST    MESZ01     MARINA EAST         ME CENTRAL REGION\n2        INSTITUTION HILL    RVSZ05    RIVER VALLEY         RV CENTRAL REGION\n3          ROBERTSON QUAY    SRSZ01 SINGAPORE RIVER         SR CENTRAL REGION\n4 JURONG ISLAND AND BUKOM    WISZ01 WESTERN ISLANDS         WI    WEST REGION\n5            FORT CANNING    MUSZ02          MUSEUM         MU CENTRAL REGION\n6        MARINA EAST (MP)    MPSZ05   MARINE PARADE         MP CENTRAL REGION\n  REGION_C PreSch Count       Area PreSch Density              PA YOUNG\n1       CR            0  1844041.7        0.00000     MARINA EAST     0\n2       CR            1   392563.3        2.54736    RIVER VALLEY  1050\n3       CR            6   506589.0       11.84392 SINGAPORE RIVER  1050\n4       WR            0 36639387.1        0.00000 WESTERN ISLANDS     0\n5       CR            0   388733.2        0.00000          MUSEUM    30\n6       CR            0  1590339.9        0.00000   MARINE PARADE     0\n  ECONOMY ACTIVE AGED TOTAL DEPENDENCY                       geometry\n1              0    0     0        NaN MULTIPOLYGON (((33222.98 29...\n2           2290  370  3710  0.6200873 MULTIPOLYGON (((28481.45 30...\n3           2380  300  3730  0.5672269 MULTIPOLYGON (((28087.34 30...\n4              0    0     0        NaN MULTIPOLYGON (((14557.7 304...\n5            140   10   180  0.2857143 MULTIPOLYGON (((29542.53 31...\n6              0    0     0        NaN MULTIPOLYGON (((35279.55 30...\n\n\n\n# Plot Choropleth Map of Dependency Ratio by Planning Subzone\ntm_shape(mpsz_pop2023)+\n  tm_fill(\"DEPENDENCY\", \n          style = \"quantile\", \n          palette = \"Blues\",\n          title = \"Dependency ratio\") +\n  tm_layout(main.title = \"Distribution of Dependency Ratio by planning subzone\",\n            main.title.position = \"center\",\n            bg.color = \"#E3DAC9\",\n            main.title.size = 0.9,\n            legend.height = 0.45, \n            legend.width = 0.35,\n            legend.title.size = 0.9,\n            legend.text.size = 0.6,\n            frame = FALSE) +\n  tm_borders(alpha = 0.5) +\n  tm_compass(type=\"8star\", size = 1.5) +\n  tm_scale_bar(width = 0.25) +\n  tm_grid(lwd = 0.1, alpha = 0.15) +\n  tm_credits(\"Source: Planning Sub-zone boundary from Urban Redevelopment Authorithy (URA)\\n and Population data from Department of Statistics DOS\", \n             position = c(\"left\", \"bottom\"))\n\n\n\n\n\n\n\n\n\n# Analytical Map\nmpsz_pop2023 &lt;- mpsz_pop2023 %&gt;%\n  drop_na()\n\n# Get function\nget.var &lt;- function(vname,df) {\n  v &lt;- df[vname] %&gt;% \n    st_set_geometry(NULL)\n  v &lt;- unname(v[,1])\n  return(v)\n}\n\n# Percentile mapping function\npercentmap &lt;- function(vnam, df, legtitle=NA, mtitle=\"Percentile Map\"){\n  percent &lt;- c(0,.01,.1,.5,.9,.99,1)\n  var &lt;- get.var(vnam, df)\n  bperc &lt;- quantile(var, percent)\n  tm_shape(mpsz_pop2023) +\n  tm_polygons() +\n  tm_shape(df) +\n     tm_fill(vnam,\n             title=legtitle,\n             breaks=bperc,\n             palette=\"Blues\",\n          labels=c(\"&lt; 1%\", \"1% - 10%\", \"10% - 50%\", \"50% - 90%\", \"90% - 99%\", \"&gt; 99%\"))  +\n  tm_borders() +\n  tm_layout(main.title = mtitle, \n            title.position = c(\"right\",\"bottom\"))\n}\n\n# Run functions\npercentmap(\"DEPENDENCY\", mpsz_pop2023)\n\n\n\n\n\n\n\n\n\n# Boxbreaks function\nboxbreaks &lt;- function(v,mult=1.5) {\n  qv &lt;- unname(quantile(v))\n  iqr &lt;- qv[4] - qv[2]\n  upfence &lt;- qv[4] + mult * iqr\n  lofence &lt;- qv[2] - mult * iqr\n  # initialize break points vector\n  bb &lt;- vector(mode=\"numeric\",length=7)\n  # logic for lower and upper fences\n  if (lofence &lt; qv[1]) {  # no lower outliers\n    bb[1] &lt;- lofence\n    bb[2] &lt;- floor(qv[1])\n  } else {\n    bb[2] &lt;- lofence\n    bb[1] &lt;- qv[1]\n  }\n  if (upfence &gt; qv[5]) { # no upper outliers\n    bb[7] &lt;- upfence\n    bb[6] &lt;- ceiling(qv[5])\n  } else {\n    bb[6] &lt;- upfence\n    bb[7] &lt;- qv[5]\n  }\n  bb[3:5] &lt;- qv[2:4]\n  return(bb)\n}\n\n# Get.var function\nget.var &lt;- function(vname,df) {\n  v &lt;- df[vname] %&gt;% st_set_geometry(NULL)\n  v &lt;- unname(v[,1])\n  return(v)\n}\n\n# Boxmap function\nboxmap &lt;- function(vnam, df, \n                   legtitle=NA,\n                   mtitle=\"Box Map\",\n                   mult=1.5){\n  var &lt;- get.var(vnam,df)\n  bb &lt;- boxbreaks(var)\n  tm_shape(df) +\n    tm_polygons() +\n  tm_shape(df) +\n     tm_fill(vnam,title=legtitle,\n             breaks=bb,\n             palette=\"Blues\",\n          labels = c(\"lower outlier\", \n                     \"&lt; 25%\", \n                     \"25% - 50%\", \n                     \"50% - 75%\",\n                     \"&gt; 75%\", \n                     \"upper outlier\"))  +\n  tm_borders() +\n  tm_layout(main.title = mtitle, \n            title.position = c(\"left\",\n                               \"top\"))\n}\n\n# Run functions\nboxmap(\"DEPENDENCY\", mpsz_pop2023)\n\n\n\n\n\n\n\n\n\n# Plot interactive box map\ntmap_options(check.and.fix = TRUE)\ntmap_mode(\"view\")\n\ntmap mode set to interactive viewing\n\nboxmap(\"DEPENDENCY\", mpsz_pop2023)\n\nWarning: The shape df is invalid (after reprojection). See sf::st_is_valid\nWarning: The shape df is invalid (after reprojection). See sf::st_is_valid"
  },
  {
    "objectID": "In-Class_Ex/In-Class_Ex_02/In-Class_Ex02.html",
    "href": "In-Class_Ex/In-Class_Ex_02/In-Class_Ex02.html",
    "title": "In Class Exercise 02",
    "section": "",
    "text": "# Solution - install maptolls from posit\n#| eval: false # eval: false\ninstall.packages(\"maptools\", repos = \"https://packagemanager.posit.co/cran/2023-10-13\")\n\npackage 'maptools' successfully unpacked and MD5 sums checked\n\n\nWarning: cannot remove prior installation of package 'maptools'\n\n\nWarning in file.copy(savedcopy, lib, recursive = TRUE): problem copying\nC:\\R-4.4.1\\library\\00LOCK\\maptools\\libs\\x64\\maptools.dll to\nC:\\R-4.4.1\\library\\maptools\\libs\\x64\\maptools.dll: Permission denied\n\n\nWarning: restored 'maptools'\n\n\n\nThe downloaded binary packages are in\n    C:\\Users\\Henry\\AppData\\Local\\Temp\\RtmpK8h2Yl\\downloaded_packages\n\n\n\n\n\n\n# Load Packages\npacman::p_load(tidyverse, sf, tmap, ggstatsplot, spatstat, raster)\n\n# Load mpsz_sf dataset\nmpsz_sf &lt;- st_read(dsn = \"data/MasterPlan2014SubzoneBoundaryWebSHP\", layer = \"MP14_SUBZONE_WEB_PL\") %&gt;%\n  st_set_crs(., 3414) # Change CRS attribute to 3414\n\nReading layer `MP14_SUBZONE_WEB_PL' from data source \n  `C:\\Users\\Henry\\Desktop\\SMU Masters\\2024-2025 T1\\Geospatial Analytics & Applications\\Project\\GeospatialWebsite\\In-Class_Ex\\In-Class_Ex_02\\data\\MasterPlan2014SubzoneBoundaryWebSHP' \n  using driver `ESRI Shapefile'\nSimple feature collection with 323 features and 15 fields\nGeometry type: MULTIPOLYGON\nDimension:     XY\nBounding box:  xmin: 2667.538 ymin: 15748.72 xmax: 56396.44 ymax: 50256.33\nProjected CRS: SVY21\n\n\nWarning: st_crs&lt;- : replacing crs does not reproject data; use st_transform for\nthat\n\n# Create costaloutline dataset\nsg_sf &lt;- mpsz_sf %&gt;%\n  st_union() # Can just use st_union instead of requiring costaloutline dataset\n# Check sg_sf\nplot(sg_sf)"
  },
  {
    "objectID": "In-Class_Ex/In-Class_Ex_02/In-Class_Ex02.html#loading-the-r-packages",
    "href": "In-Class_Ex/In-Class_Ex_02/In-Class_Ex02.html#loading-the-r-packages",
    "title": "In Class Exercise 02",
    "section": "",
    "text": "install.packages(\"maptools\", repos = \"https://packagemanager.posit.co/cran/2023-10-13\")\n\n\npacman::p_load(tidyverse, sf, tmap, ggstatsplot)\n\n\n# # Load costaloutline dataset\n# sg_sf &lt;- mpsz_sf %&gt;%\n#   st_union() # Can just use st_union instead of requiring costaloutline dataset\n\n\n# # Convert KDE output into grid object\n# Using maptools\n# gridded_kde_childcareSG_bw &lt;- maptools::as.SpatialGridDataFrame.im(kde_childcareSG.bw) \n# spplot(gridded_kde_childcareSG_bw)\n\n# Using sf geometry\n# gridded_kde_childcareSG_ad &lt;-  as(kde_childcareSG_adaptive, \"SpatialGridDataFrame\")\n# spplot(gridded_kde_childcareSG_ad)\n\n\n# Ensure reproducibility\nset.seed(42)\n\n\n# Generally dont have worry about edge correction for Singapopre\n# But for specific area, need to be careful when specific points are too close to edge. \n\n\n# Load road accidents\naccidents &lt;- read_csv(\"data/thai_road_accident_2019_2022.csv\")\n\nRows: 81735 Columns: 18\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr  (10): province_th, province_en, agency, route, vehicle_type, presumed_c...\ndbl   (6): acc_code, number_of_vehicles_involved, number_of_fatalities, numb...\ndttm  (2): incident_datetime, report_datetime\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\naccidents_sf &lt;- accidents %&gt;%\n  filter(!is.na(longitude) & longitude != \"\", !is.na(latitude) & latitude != \"\") %&gt;%\n  st_as_sf(coords = c(\"longitude\", \"latitude\"), crs = 4326) %&gt;%\n  st_transform(crs = 32647)\n\n\n# Check\nst_geometry(accidents_sf)\n\nGeometry set for 81376 features \nGeometry type: POINT\nDimension:     XY\nBounding box:  xmin: -16183190 ymin: -936.228 xmax: 1200243 ymax: 4918525\nProjected CRS: WGS 84 / UTM zone 47N\nFirst 5 geometries:\n\n\nPOINT (701480.8 1654653)\n\n\nPOINT (1130617 1690121)\n\n\nPOINT (598703.8 1368107)\n\n\nPOINT (479343.9 2056771)\n\n\nPOINT (670249 1754802)\n\n\n\n# Check\nst_crs(accidents_sf)\n\nCoordinate Reference System:\n  User input: EPSG:32647 \n  wkt:\nPROJCRS[\"WGS 84 / UTM zone 47N\",\n    BASEGEOGCRS[\"WGS 84\",\n        ENSEMBLE[\"World Geodetic System 1984 ensemble\",\n            MEMBER[\"World Geodetic System 1984 (Transit)\"],\n            MEMBER[\"World Geodetic System 1984 (G730)\"],\n            MEMBER[\"World Geodetic System 1984 (G873)\"],\n            MEMBER[\"World Geodetic System 1984 (G1150)\"],\n            MEMBER[\"World Geodetic System 1984 (G1674)\"],\n            MEMBER[\"World Geodetic System 1984 (G1762)\"],\n            MEMBER[\"World Geodetic System 1984 (G2139)\"],\n            ELLIPSOID[\"WGS 84\",6378137,298.257223563,\n                LENGTHUNIT[\"metre\",1]],\n            ENSEMBLEACCURACY[2.0]],\n        PRIMEM[\"Greenwich\",0,\n            ANGLEUNIT[\"degree\",0.0174532925199433]],\n        ID[\"EPSG\",4326]],\n    CONVERSION[\"UTM zone 47N\",\n        METHOD[\"Transverse Mercator\",\n            ID[\"EPSG\",9807]],\n        PARAMETER[\"Latitude of natural origin\",0,\n            ANGLEUNIT[\"degree\",0.0174532925199433],\n            ID[\"EPSG\",8801]],\n        PARAMETER[\"Longitude of natural origin\",99,\n            ANGLEUNIT[\"degree\",0.0174532925199433],\n            ID[\"EPSG\",8802]],\n        PARAMETER[\"Scale factor at natural origin\",0.9996,\n            SCALEUNIT[\"unity\",1],\n            ID[\"EPSG\",8805]],\n        PARAMETER[\"False easting\",500000,\n            LENGTHUNIT[\"metre\",1],\n            ID[\"EPSG\",8806]],\n        PARAMETER[\"False northing\",0,\n            LENGTHUNIT[\"metre\",1],\n            ID[\"EPSG\",8807]]],\n    CS[Cartesian,2],\n        AXIS[\"(E)\",east,\n            ORDER[1],\n            LENGTHUNIT[\"metre\",1]],\n        AXIS[\"(N)\",north,\n            ORDER[2],\n            LENGTHUNIT[\"metre\",1]],\n    USAGE[\n        SCOPE[\"Navigation and medium accuracy spatial referencing.\"],\n        AREA[\"Between 96°E and 102°E, northern hemisphere between equator and 84°N, onshore and offshore. China. Indonesia. Laos. Malaysia - West Malaysia. Mongolia. Myanmar (Burma). Russian Federation. Thailand.\"],\n        BBOX[0,96,84,102]],\n    ID[\"EPSG\",32647]]"
  },
  {
    "objectID": "Take-Home_Ex/Take-Home_Ex_01/Take-Home_Ex01.html",
    "href": "Take-Home_Ex/Take-Home_Ex_01/Take-Home_Ex01.html",
    "title": "Take Home Exercise 01",
    "section": "",
    "text": "Road traffic accidents cause 1.19 million deaths and 20 to 50 million injuries annually, with most fatalities occurring in low- and middle-income countries (World Health Organisation (WHO)). Road traffic injuries are the leading cause of death for individuals aged 5–29 and place a heavy economic burden on nations, costing up to 3% of GDP. Thailand has some of the deadliest roads globally, with about 20,000 fatalities annually. From 2014 to 2021, accidents rose, especially on national highways, with black spots frequently found on straight roads and intersections."
  },
  {
    "objectID": "In-Class_Ex/In-Class_Ex_09/In-Class_Ex09.html",
    "href": "In-Class_Ex/In-Class_Ex_09/In-Class_Ex09.html",
    "title": "In Class Exercise 03",
    "section": "",
    "text": "TBC"
  },
  {
    "objectID": "In-Class_Ex/In-Class_Ex_07/In-Class_Ex07.html",
    "href": "In-Class_Ex/In-Class_Ex_07/In-Class_Ex07.html",
    "title": "In Class Exercise 03",
    "section": "",
    "text": "TBC"
  },
  {
    "objectID": "In-Class_Ex/In-Class_Ex_05/In-Class_Ex05.html",
    "href": "In-Class_Ex/In-Class_Ex_05/In-Class_Ex05.html",
    "title": "In Class Exercise 05",
    "section": "",
    "text": "(saved under ‘data’ folder)\n\nHunan county boundary layer - geospatial dataset\nHunan_2012 - csv dataset containing Hunan’s 2012 local development indicators\n\n\n\n\n\n\npacman::p_load(sf, sfdep, tmap, tidyverse)\n\n\n\n\n\nHunan ShapefileHunan 2012\n\n\n\n# Load shapefile\nhunan &lt;- st_read(dsn = \"data/geospatial\", layer = \"Hunan\")\n\nReading layer `Hunan' from data source \n  `C:\\Users\\Henry\\Desktop\\SMU Masters\\2024-2025 T1\\Geospatial Analytics & Applications\\Project\\GeospatialWebsite\\In-Class_Ex\\In-Class_Ex_05\\data\\geospatial' \n  using driver `ESRI Shapefile'\nSimple feature collection with 88 features and 7 fields\nGeometry type: POLYGON\nDimension:     XY\nBounding box:  xmin: 108.7831 ymin: 24.6342 xmax: 114.2544 ymax: 30.12812\nGeodetic CRS:  WGS 84\n\n\n\n# Check crs\nst_crs(hunan)\n\nCoordinate Reference System:\n  User input: WGS 84 \n  wkt:\nGEOGCRS[\"WGS 84\",\n    DATUM[\"World Geodetic System 1984\",\n        ELLIPSOID[\"WGS 84\",6378137,298.257223563,\n            LENGTHUNIT[\"metre\",1]]],\n    PRIMEM[\"Greenwich\",0,\n        ANGLEUNIT[\"degree\",0.0174532925199433]],\n    CS[ellipsoidal,2],\n        AXIS[\"latitude\",north,\n            ORDER[1],\n            ANGLEUNIT[\"degree\",0.0174532925199433]],\n        AXIS[\"longitude\",east,\n            ORDER[2],\n            ANGLEUNIT[\"degree\",0.0174532925199433]],\n    ID[\"EPSG\",4326]]\n\n\n\n# Check crs\nglimpse(hunan)\n\nRows: 88\nColumns: 8\n$ NAME_2     &lt;chr&gt; \"Changde\", \"Changde\", \"Changde\", \"Changde\", \"Changde\", \"Cha…\n$ ID_3       &lt;int&gt; 21098, 21100, 21101, 21102, 21103, 21104, 21109, 21110, 211…\n$ NAME_3     &lt;chr&gt; \"Anxiang\", \"Hanshou\", \"Jinshi\", \"Li\", \"Linli\", \"Shimen\", \"L…\n$ ENGTYPE_3  &lt;chr&gt; \"County\", \"County\", \"County City\", \"County\", \"County\", \"Cou…\n$ Shape_Leng &lt;dbl&gt; 1.869074, 2.360691, 1.425620, 3.474325, 2.289506, 4.171918,…\n$ Shape_Area &lt;dbl&gt; 0.10056190, 0.19978745, 0.05302413, 0.18908121, 0.11450357,…\n$ County     &lt;chr&gt; \"Anxiang\", \"Hanshou\", \"Jinshi\", \"Li\", \"Linli\", \"Shimen\", \"L…\n$ geometry   &lt;POLYGON [°]&gt; POLYGON ((112.0625 29.75523..., POLYGON ((112.2288 …\n\n\n\n\n\n# Load csv file\nhunan2012 &lt;- read_csv(\"data/aspatial/Hunan_2012.csv\")\n\nRows: 88 Columns: 29\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr  (2): County, City\ndbl (27): avg_wage, deposite, FAI, Gov_Rev, Gov_Exp, GDP, GDPPC, GIO, Loan, ...\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\n\n\n# Check file\nglimpse(hunan2012)\n\nRows: 88\nColumns: 29\n$ County      &lt;chr&gt; \"Anhua\", \"Anren\", \"Anxiang\", \"Baojing\", \"Chaling\", \"Changn…\n$ City        &lt;chr&gt; \"Yiyang\", \"Chenzhou\", \"Changde\", \"Hunan West\", \"Zhuzhou\", …\n$ avg_wage    &lt;dbl&gt; 30544, 28058, 31935, 30843, 31251, 28518, 54540, 28597, 33…\n$ deposite    &lt;dbl&gt; 10967.0, 4598.9, 5517.2, 2250.0, 8241.4, 10860.0, 24332.0,…\n$ FAI         &lt;dbl&gt; 6831.7, 6386.1, 3541.0, 1005.4, 6508.4, 7920.0, 33624.0, 1…\n$ Gov_Rev     &lt;dbl&gt; 456.72, 220.57, 243.64, 192.59, 620.19, 769.86, 5350.00, 1…\n$ Gov_Exp     &lt;dbl&gt; 2703.0, 1454.7, 1779.5, 1379.1, 1947.0, 2631.6, 7885.5, 11…\n$ GDP         &lt;dbl&gt; 13225.0, 4941.2, 12482.0, 4087.9, 11585.0, 19886.0, 88009.…\n$ GDPPC       &lt;dbl&gt; 14567, 12761, 23667, 14563, 20078, 24418, 88656, 10132, 17…\n$ GIO         &lt;dbl&gt; 9276.90, 4189.20, 5108.90, 3623.50, 9157.70, 37392.00, 513…\n$ Loan        &lt;dbl&gt; 3954.90, 2555.30, 2806.90, 1253.70, 4287.40, 4242.80, 4053…\n$ NIPCR       &lt;dbl&gt; 3528.3, 3271.8, 7693.7, 4191.3, 3887.7, 9528.0, 17070.0, 3…\n$ Bed         &lt;dbl&gt; 2718, 970, 1931, 927, 1449, 3605, 3310, 582, 2170, 2179, 1…\n$ Emp         &lt;dbl&gt; 494.310, 290.820, 336.390, 195.170, 330.290, 548.610, 670.…\n$ EmpR        &lt;dbl&gt; 441.4, 255.4, 270.5, 145.6, 299.0, 415.1, 452.0, 127.6, 21…\n$ EmpRT       &lt;dbl&gt; 338.0, 99.4, 205.9, 116.4, 154.0, 273.7, 219.4, 94.4, 174.…\n$ Pri_Stu     &lt;dbl&gt; 54.175, 33.171, 19.584, 19.249, 33.906, 81.831, 59.151, 18…\n$ Sec_Stu     &lt;dbl&gt; 32.830, 17.505, 17.819, 11.831, 20.548, 44.485, 39.685, 7.…\n$ Household   &lt;dbl&gt; 290.4, 104.6, 148.1, 73.2, 148.7, 211.2, 300.3, 76.1, 139.…\n$ Household_R &lt;dbl&gt; 234.5, 121.9, 135.4, 69.9, 139.4, 211.7, 248.4, 59.6, 110.…\n$ NOIP        &lt;dbl&gt; 101, 34, 53, 18, 106, 115, 214, 17, 55, 70, 44, 84, 74, 17…\n$ Pop_R       &lt;dbl&gt; 670.3, 243.2, 346.0, 184.1, 301.6, 448.2, 475.1, 189.6, 31…\n$ RSCG        &lt;dbl&gt; 5760.60, 2386.40, 3957.90, 768.04, 4009.50, 5220.40, 22604…\n$ Pop_T       &lt;dbl&gt; 910.8, 388.7, 528.3, 281.3, 578.4, 816.3, 998.6, 256.7, 45…\n$ Agri        &lt;dbl&gt; 4942.253, 2357.764, 4524.410, 1118.561, 3793.550, 6430.782…\n$ Service     &lt;dbl&gt; 5414.5, 3814.1, 14100.0, 541.8, 5444.0, 13074.6, 17726.6, …\n$ Disp_Inc    &lt;dbl&gt; 12373, 16072, 16610, 13455, 20461, 20868, 183252, 12379, 1…\n$ RORP        &lt;dbl&gt; 0.7359464, 0.6256753, 0.6549309, 0.6544614, 0.5214385, 0.5…\n$ ROREmp      &lt;dbl&gt; 0.8929619, 0.8782065, 0.8041262, 0.7460163, 0.9052651, 0.7…\n\n\n\n\n\n\n\n\nBoth datasets have the common field “County”\n\n# Merge both datasets\nhunan_GDPPC &lt;- left_join(hunan, hunan2012, by = \"County\") %&gt;%\n  # select(1:4, 7, 15)\n  select(`NAME_2`, `ID_3`, `NAME_3`, `ENGTYPE_3`, `County`, `GDPPC`, `geometry`) # Using Column names for readability\n# See result\nglimpse(hunan_GDPPC)\n\nRows: 88\nColumns: 7\n$ NAME_2    &lt;chr&gt; \"Changde\", \"Changde\", \"Changde\", \"Changde\", \"Changde\", \"Chan…\n$ ID_3      &lt;int&gt; 21098, 21100, 21101, 21102, 21103, 21104, 21109, 21110, 2111…\n$ NAME_3    &lt;chr&gt; \"Anxiang\", \"Hanshou\", \"Jinshi\", \"Li\", \"Linli\", \"Shimen\", \"Li…\n$ ENGTYPE_3 &lt;chr&gt; \"County\", \"County\", \"County City\", \"County\", \"County\", \"Coun…\n$ County    &lt;chr&gt; \"Anxiang\", \"Hanshou\", \"Jinshi\", \"Li\", \"Linli\", \"Shimen\", \"Li…\n$ GDPPC     &lt;dbl&gt; 23667, 20981, 34592, 24473, 25554, 27137, 63118, 62202, 7066…\n$ geometry  &lt;POLYGON [°]&gt; POLYGON ((112.0625 29.75523..., POLYGON ((112.2288 2…\n\n\n\n# Visualize GDPPC\ntmap_mode(\"plot\")\n\ntmap mode set to plotting\n\ntm_shape(hunan_GDPPC) +\n  tm_fill(\"GDPPC\", \n          style = \"quantile\", \n          palette = \"Blues\",\n          title = \"GDPPC\") +\n  tm_layout(main.title = \"Distribution of GDP per capita by county, Hunan Province\",\n            main.title.position = \"center\",\n            main.title.size = 0.8,\n            legend.height = 0.45, \n            legend.width = 0.35,\n            frame = TRUE) +\n  tm_borders(alpha = 0.5) +\n  tm_compass(type=\"8star\", size = 2) +\n  tm_scale_bar() +\n  tm_grid(alpha =0.2)"
  },
  {
    "objectID": "In-Class_Ex/In-Class_Ex_03/In-Class_Ex03.html",
    "href": "In-Class_Ex/In-Class_Ex_03/In-Class_Ex03.html",
    "title": "In Class Exercise 03",
    "section": "",
    "text": "(saved under ‘data’ folder)\nStudy Area - Punggol Planning Area\nPunggol_St - line feature geospatial dataset containing road network\nPunggol_CC - point feature geospatial dataset containing location of childcare centres\n\n\n\n\n\n\npacman::p_load(sf, spNetwork, tmap, tidyverse)\n\n\n\n\n\n# Load network dataset\nnetwork &lt;- st_read(dsn=\"data\", layer=\"Punggol_St\") # Check that geometry is Linestring and not multilinestring\n\nReading layer `Punggol_St' from data source \n  `C:\\Users\\Henry\\Desktop\\SMU Masters\\2024-2025 T1\\Geospatial Analytics & Applications\\Project\\GeospatialWebsite\\In-Class_Ex\\In-Class_Ex_03\\data' \n  using driver `ESRI Shapefile'\nSimple feature collection with 2642 features and 2 fields\nGeometry type: LINESTRING\nDimension:     XY\nBounding box:  xmin: 34038.56 ymin: 40941.11 xmax: 38882.85 ymax: 44801.27\nProjected CRS: SVY21 / Singapore TM\n\n\n\n# Load childcare dataset\nchildcare &lt;- st_read(dsn=\"data\", layer=\"Punggol_CC\") %&gt;%\n  st_zm(drop = TRUE, what = \"ZM\") # Remove Z dimension\n\nReading layer `Punggol_CC' from data source \n  `C:\\Users\\Henry\\Desktop\\SMU Masters\\2024-2025 T1\\Geospatial Analytics & Applications\\Project\\GeospatialWebsite\\In-Class_Ex\\In-Class_Ex_03\\data' \n  using driver `ESRI Shapefile'\nSimple feature collection with 61 features and 1 field\nGeometry type: POINT\nDimension:     XYZ\nBounding box:  xmin: 34423.98 ymin: 41503.6 xmax: 37619.47 ymax: 44685.77\nz_range:       zmin: 0 zmax: 0\nProjected CRS: SVY21 / Singapore TM\n\n\n\nChildcareNetwork\n\n\n\n# See childcare features\nchildcare\n\nSimple feature collection with 61 features and 1 field\nGeometry type: POINT\nDimension:     XY\nBounding box:  xmin: 34423.98 ymin: 41503.6 xmax: 37619.47 ymax: 44685.77\nProjected CRS: SVY21 / Singapore TM\nFirst 10 features:\n      Name                  geometry\n1   kml_10 POINT (36173.81 42550.33)\n2   kml_99 POINT (36479.56 42405.21)\n3  kml_100 POINT (36618.72 41989.13)\n4  kml_101 POINT (36285.37 42261.42)\n5  kml_122  POINT (35414.54 42625.1)\n6  kml_161 POINT (36545.16 42580.09)\n7  kml_172 POINT (35289.44 44083.57)\n8  kml_188 POINT (36520.56 42844.74)\n9  kml_205  POINT (36924.01 41503.6)\n10 kml_222 POINT (37141.76 42326.36)\n\n\n\n# See childcare crs information\nst_crs(childcare)\n\nCoordinate Reference System:\n  User input: SVY21 / Singapore TM \n  wkt:\nPROJCRS[\"SVY21 / Singapore TM\",\n    BASEGEOGCRS[\"SVY21\",\n        DATUM[\"SVY21\",\n            ELLIPSOID[\"WGS 84\",6378137,298.257223563,\n                LENGTHUNIT[\"metre\",1]]],\n        PRIMEM[\"Greenwich\",0,\n            ANGLEUNIT[\"degree\",0.0174532925199433]],\n        ID[\"EPSG\",4757]],\n    CONVERSION[\"Singapore Transverse Mercator\",\n        METHOD[\"Transverse Mercator\",\n            ID[\"EPSG\",9807]],\n        PARAMETER[\"Latitude of natural origin\",1.36666666666667,\n            ANGLEUNIT[\"degree\",0.0174532925199433],\n            ID[\"EPSG\",8801]],\n        PARAMETER[\"Longitude of natural origin\",103.833333333333,\n            ANGLEUNIT[\"degree\",0.0174532925199433],\n            ID[\"EPSG\",8802]],\n        PARAMETER[\"Scale factor at natural origin\",1,\n            SCALEUNIT[\"unity\",1],\n            ID[\"EPSG\",8805]],\n        PARAMETER[\"False easting\",28001.642,\n            LENGTHUNIT[\"metre\",1],\n            ID[\"EPSG\",8806]],\n        PARAMETER[\"False northing\",38744.572,\n            LENGTHUNIT[\"metre\",1],\n            ID[\"EPSG\",8807]]],\n    CS[Cartesian,2],\n        AXIS[\"northing (N)\",north,\n            ORDER[1],\n            LENGTHUNIT[\"metre\",1]],\n        AXIS[\"easting (E)\",east,\n            ORDER[2],\n            LENGTHUNIT[\"metre\",1]],\n    USAGE[\n        SCOPE[\"Cadastre, engineering survey, topographic mapping.\"],\n        AREA[\"Singapore - onshore and offshore.\"],\n        BBOX[1.13,103.59,1.47,104.07]],\n    ID[\"EPSG\",3414]]\n\n\n\n\n\n# See network features\nnetwork\n\nSimple feature collection with 2642 features and 2 fields\nGeometry type: LINESTRING\nDimension:     XY\nBounding box:  xmin: 34038.56 ymin: 40941.11 xmax: 38882.85 ymax: 44801.27\nProjected CRS: SVY21 / Singapore TM\nFirst 10 features:\n     LINK_ID                   ST_NAME                       geometry\n1  116130894                PUNGGOL RD LINESTRING (36546.89 44574....\n2  116130897 PONGGOL TWENTY-FOURTH AVE LINESTRING (36546.89 44574....\n3  116130901   PONGGOL SEVENTEENTH AVE LINESTRING (36012.73 44154....\n4  116130902   PONGGOL SEVENTEENTH AVE LINESTRING (36062.81 44197....\n5  116130907           PUNGGOL CENTRAL LINESTRING (36131.85 42755....\n6  116130908                PUNGGOL RD LINESTRING (36112.93 42752....\n7  116130909           PUNGGOL CENTRAL LINESTRING (36127.4 42744.5...\n8  116130910               PUNGGOL FLD LINESTRING (35994.98 42428....\n9  116130911               PUNGGOL FLD LINESTRING (35984.97 42407....\n10 116130912            EDGEFIELD PLNS LINESTRING (36200.87 42219....\n\n\n\n# See network crs information\nst_crs(network)\n\nCoordinate Reference System:\n  User input: SVY21 / Singapore TM \n  wkt:\nPROJCRS[\"SVY21 / Singapore TM\",\n    BASEGEOGCRS[\"SVY21\",\n        DATUM[\"SVY21\",\n            ELLIPSOID[\"WGS 84\",6378137,298.257223563,\n                LENGTHUNIT[\"metre\",1]]],\n        PRIMEM[\"Greenwich\",0,\n            ANGLEUNIT[\"degree\",0.0174532925199433]],\n        ID[\"EPSG\",4757]],\n    CONVERSION[\"Singapore Transverse Mercator\",\n        METHOD[\"Transverse Mercator\",\n            ID[\"EPSG\",9807]],\n        PARAMETER[\"Latitude of natural origin\",1.36666666666667,\n            ANGLEUNIT[\"degree\",0.0174532925199433],\n            ID[\"EPSG\",8801]],\n        PARAMETER[\"Longitude of natural origin\",103.833333333333,\n            ANGLEUNIT[\"degree\",0.0174532925199433],\n            ID[\"EPSG\",8802]],\n        PARAMETER[\"Scale factor at natural origin\",1,\n            SCALEUNIT[\"unity\",1],\n            ID[\"EPSG\",8805]],\n        PARAMETER[\"False easting\",28001.642,\n            LENGTHUNIT[\"metre\",1],\n            ID[\"EPSG\",8806]],\n        PARAMETER[\"False northing\",38744.572,\n            LENGTHUNIT[\"metre\",1],\n            ID[\"EPSG\",8807]]],\n    CS[Cartesian,2],\n        AXIS[\"northing (N)\",north,\n            ORDER[1],\n            LENGTHUNIT[\"metre\",1]],\n        AXIS[\"easting (E)\",east,\n            ORDER[2],\n            LENGTHUNIT[\"metre\",1]],\n    USAGE[\n        SCOPE[\"Cadastre, engineering survey, topographic mapping.\"],\n        AREA[\"Singapore - onshore and offshore.\"],\n        BBOX[1.13,103.59,1.47,104.07]],\n    ID[\"EPSG\",3414]]\n\n\n\n\n\n\n\n\n\n\n# Visualize both geospatial data\nplot(st_geometry(network)) # Use st_geometry to plot only the network without corresponding attributes\nplot(childcare,add=T,col='red',pch = 19)\n\n\n\n\n\n\n\n\n\n# Interactive Visualization with tmap \ntmap_mode('view')\n\ntmap mode set to interactive viewing\n\ntm_shape(childcare) +\n  tm_dots() +\n  tm_shape(network) +\n  tm_lines()\n\n\n\n\n\n\n# Set tmap_mode back to plot\ntmap_mode('plot')\n\ntmap mode set to plotting\n\n\n\n\n\n\n\n\n# Cut spatiallines objects into lixels with specified minimal distance using lixelize_lines from spNetwork\nlixels &lt;- lixelize_lines(network, 700, mindist = 375)\n# Use nearest neighbour to gauge the appropriate distance - bottom ~25%-10%\n\n\n\n\n\n# create line centre points with lines_center from spNetwork\nsamples &lt;- lines_center(lixels) \n\ntmap_mode('view')\n\ntmap mode set to interactive viewing\n\ntm_shape(lixels) + \n  tm_lines() + \n  tm_shape(samples) + \n  tm_dots(size =0.01)\n\n\n\n\ntmap_mode(\"plot\")\n\ntmap mode set to plotting\n\n\n\n\n\n\n# # Remove Z-dimension from childcare (No longer required)\n# childcare_rmz &lt;- st_zm(childcare)\n\n# Perform NKDE\ndensities &lt;- nkde(network, \n                  events = childcare,\n                  w = rep(1, nrow(childcare)),\n                  samples = samples,\n                  kernel_name = \"quartic\", # Try to avoid gaussian if intensity is negative\n                  bw = 300, \n                  div= \"bw\", \n                  method = \"simple\", \n                  digits = 1, \n                  tol = 1,\n                  grid_shape = c(1,1), \n                  max_depth = 8,\n                  agg = 5, \n                  sparse = TRUE,\n                  verbose = FALSE)\n# Densities - represents intensity\n\n\n# Insert computed density values as density field\nsamples$density &lt;- densities\nlixels$density &lt;- densities\n\n# Recaling to enhance mapping\nsamples$density &lt;- samples$density*1000\nlixels$density &lt;- lixels$density*1000\n\n# Visualize interactive plot\ntmap_mode('view')\n\ntmap mode set to interactive viewing\n\ntm_shape(lixels)+\n  tm_lines(col=\"density\")+\ntm_shape(childcare)+\n  tm_dots()\n\n\n\n\ntmap_mode('plot')\n\ntmap mode set to plotting\n\n\n\n\n\n\nHo: The observed spatial point events (i.e distribution of childcare centres) are uniformly distributed over a street network in Punggol Planning Area.\n\n# Perform complete spatial randomness test using kfunction from spNetwork\nkfun_childcare &lt;- kfunctions(network, \n                             childcare,\n                             start = 0, \n                             end = 1000, \n                             step = 50, \n                             width = 50, \n                             nsim = 50, # 51 simulations \n                             resolution = 50,\n                             verbose = FALSE, \n                             conf_int = 0.05)\n\n\n# Visualize k-function output\nkfun_childcare$plotk\n\n\n\n\n\n\n\n\nConclusion\n- There is non complete spatial randomness\n- In certain distances (~250-500), childcares are regularly spaced out\n- At higher distances (&gt;600), childcares are randomly spaced out"
  },
  {
    "objectID": "Hands-On_Ex/Hands-On_Ex_09/Hands-On_Ex09.html",
    "href": "Hands-On_Ex/Hands-On_Ex_09/Hands-On_Ex09.html",
    "title": "Hands-On Exercise 09",
    "section": "",
    "text": "TBC"
  },
  {
    "objectID": "Hands-On_Ex/Hands-On_Ex_07/Hands-On_Ex07.html",
    "href": "Hands-On_Ex/Hands-On_Ex_07/Hands-On_Ex07.html",
    "title": "Hands-On Exercise 07",
    "section": "",
    "text": "pacman::p_load(olsrr, corrplot, ggpubr, sf, spdep, GWmodel, tmap, tidyverse, gtsummary)\n\nalso installing the dependencies 'nortest', 'xplorerr'\n\n\nWarning: unable to access index for repository http://www.stats.ox.ac.uk/pub/RWin/bin/windows/contrib/4.4:\n  cannot open URL 'http://www.stats.ox.ac.uk/pub/RWin/bin/windows/contrib/4.4/PACKAGES'\n\n\npackage 'nortest' successfully unpacked and MD5 sums checked\npackage 'xplorerr' successfully unpacked and MD5 sums checked\npackage 'olsrr' successfully unpacked and MD5 sums checked\n\nThe downloaded binary packages are in\n    C:\\Users\\Henry\\AppData\\Local\\Temp\\RtmpYNHtZu\\downloaded_packages\n\n\n\nolsrr installed\n\n\nalso installing the dependencies 'cards', 'glue'\n\n\nWarning: unable to access index for repository http://www.stats.ox.ac.uk/pub/RWin/bin/windows/contrib/4.4:\n  cannot open URL 'http://www.stats.ox.ac.uk/pub/RWin/bin/windows/contrib/4.4/PACKAGES'\n\n\npackage 'cards' successfully unpacked and MD5 sums checked\npackage 'glue' successfully unpacked and MD5 sums checked\n\n\nWarning: cannot remove prior installation of package 'glue'\n\n\nWarning in file.copy(savedcopy, lib, recursive = TRUE): problem copying\nC:\\R-4.4.1\\library\\00LOCK\\glue\\libs\\x64\\glue.dll to\nC:\\R-4.4.1\\library\\glue\\libs\\x64\\glue.dll: Permission denied\n\n\nWarning: restored 'glue'\n\n\npackage 'gtsummary' successfully unpacked and MD5 sums checked\n\nThe downloaded binary packages are in\n    C:\\Users\\Henry\\AppData\\Local\\Temp\\RtmpYNHtZu\\downloaded_packages\n\n\n\ngtsummary installed\n\n\nWarning in pacman::p_load(olsrr, corrplot, ggpubr, sf, spdep, GWmodel, tmap, : Failed to install/load:\ngtsummary"
  },
  {
    "objectID": "Hands-On_Ex/Hands-On_Ex_05/Hands-On_Ex05.html",
    "href": "Hands-On_Ex/Hands-On_Ex_05/Hands-On_Ex05.html",
    "title": "Hands-On Exercise 05",
    "section": "",
    "text": "(saved under ‘data’ folder)\n\nChapter 9:\nHunan county boundary layer - geospatial dataset\nHunan_2012 - csv dataset containing Hunan’s 2012 local development indicators\n\nChapter 13:\nURA Master Plan subzone boundary condo_resale_2015 - csv dataset"
  },
  {
    "objectID": "Hands-On_Ex/Hands-On_Ex_03/Hands-On_Ex03.html",
    "href": "Hands-On_Ex/Hands-On_Ex_03/Hands-On_Ex03.html",
    "title": "Hands-On Exercise 03",
    "section": "",
    "text": "(saved under ‘data’ folder)\nStudy Area - Punggol Planning Area\nPunggol_St - line feature geospatial dataset containing road network\nPunggol_CC - point feature geospatial dataset containing location of childcare centres"
  },
  {
    "objectID": "Hands-On_Ex/Hands-On_Ex_04/Hands-On_Ex04.html",
    "href": "Hands-On_Ex/Hands-On_Ex_04/Hands-On_Ex04.html",
    "title": "Hands-On Exercise 04",
    "section": "",
    "text": "(saved under ‘data’ folder)\nHunan county boundary layer - geospatial dataset\nHunan_2012 - csv dataset containing Hunan’s 2012 local development indicators"
  },
  {
    "objectID": "Hands-On_Ex/Hands-On_Ex_06/Hands-On_Ex06.html",
    "href": "Hands-On_Ex/Hands-On_Ex_06/Hands-On_Ex06.html",
    "title": "Hands-On Exercise 06",
    "section": "",
    "text": "(saved under ‘data’ folder)\nMyanmar Township Boundary Data - geospatial dataset\nShan-ICT - csv dataset containing 2014 Myanmar Population and Housing Census Myanmar"
  },
  {
    "objectID": "Hands-On_Ex/Hands-On_Ex_08/Hands-On_Ex08.html",
    "href": "Hands-On_Ex/Hands-On_Ex_08/Hands-On_Ex08.html",
    "title": "Hands-On Exercise 08",
    "section": "",
    "text": "TBC"
  },
  {
    "objectID": "Hands-On_Ex/Hands-On_Ex_10/Hands-On_Ex10.html",
    "href": "Hands-On_Ex/Hands-On_Ex_10/Hands-On_Ex10.html",
    "title": "Hands-On Exercise 10",
    "section": "",
    "text": "TBC"
  },
  {
    "objectID": "In-Class_Ex/In-Class_Ex_04/In-Class_Ex04.html",
    "href": "In-Class_Ex/In-Class_Ex_04/In-Class_Ex04.html",
    "title": "In Class Exercise 04",
    "section": "",
    "text": "(saved under ‘data’ folder)\nHunan county boundary layer - geospatial dataset\nHunan_2012 - csv dataset containing Hunan’s 2012 local development indicators"
  },
  {
    "objectID": "In-Class_Ex/In-Class_Ex_06/In-Class_Ex06.html",
    "href": "In-Class_Ex/In-Class_Ex_06/In-Class_Ex06.html",
    "title": "In Class Exercise 06",
    "section": "",
    "text": "(saved under ‘data’ folder)\nMyanmar Township Boundary Data - geospatial dataset\nShan-ICT - csv dataset containing 2014 Myanmar Population and Housing Census Myanmar\n\n\n\n\n\n\npacman::p_load(sf, sfdep, tmap, plotly, tidyverse)\n\n\n\n\n\n# Import geospatial hunan data\nhunan &lt;- st_read(dsn = \"data/geospatial\", layer = \"Hunan\")\n\nReading layer `Hunan' from data source \n  `C:\\Users\\Henry\\Desktop\\SMU Masters\\2024-2025 T1\\Geospatial Analytics & Applications\\Project\\GeospatialWebsite\\In-Class_Ex\\In-Class_Ex_06\\data\\geospatial' \n  using driver `ESRI Shapefile'\nSimple feature collection with 88 features and 7 fields\nGeometry type: POLYGON\nDimension:     XY\nBounding box:  xmin: 108.7831 ymin: 24.6342 xmax: 114.2544 ymax: 30.12812\nGeodetic CRS:  WGS 84\n\n\n\n\n\n\n# Import GDPPC data\nGDPPC &lt;- read_csv(\"data/aspatial/Hunan_GDPPC.csv\")\n\nRows: 1496 Columns: 3\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr (1): County\ndbl (2): Year, GDPPC\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message."
  },
  {
    "objectID": "In-Class_Ex/In-Class_Ex_08/In-Class_Ex08.html",
    "href": "In-Class_Ex/In-Class_Ex_08/In-Class_Ex08.html",
    "title": "In Class Exercise 03",
    "section": "",
    "text": "TBC"
  },
  {
    "objectID": "In-Class_Ex/In-Class_Ex_10/In-Class_Ex10.html",
    "href": "In-Class_Ex/In-Class_Ex_10/In-Class_Ex10.html",
    "title": "In Class Exercise 03",
    "section": "",
    "text": "TBC"
  },
  {
    "objectID": "In-Class_Ex/In-Class_Ex_02/In-Class_Ex02.html#piazza-issues",
    "href": "In-Class_Ex/In-Class_Ex_02/In-Class_Ex02.html#piazza-issues",
    "title": "In Class Exercise 02",
    "section": "",
    "text": "# Solution - install maptolls from posit\n#| eval: false # eval: false\ninstall.packages(\"maptools\", repos = \"https://packagemanager.posit.co/cran/2023-10-13\")\n\npackage 'maptools' successfully unpacked and MD5 sums checked\n\n\nWarning: cannot remove prior installation of package 'maptools'\n\n\nWarning in file.copy(savedcopy, lib, recursive = TRUE): problem copying\nC:\\R-4.4.1\\library\\00LOCK\\maptools\\libs\\x64\\maptools.dll to\nC:\\R-4.4.1\\library\\maptools\\libs\\x64\\maptools.dll: Permission denied\n\n\nWarning: restored 'maptools'\n\n\n\nThe downloaded binary packages are in\n    C:\\Users\\Henry\\AppData\\Local\\Temp\\RtmpK8h2Yl\\downloaded_packages\n\n\n\n\n\n\n# Load Packages\npacman::p_load(tidyverse, sf, tmap, ggstatsplot, spatstat, raster)\n\n# Load mpsz_sf dataset\nmpsz_sf &lt;- st_read(dsn = \"data/MasterPlan2014SubzoneBoundaryWebSHP\", layer = \"MP14_SUBZONE_WEB_PL\") %&gt;%\n  st_set_crs(., 3414) # Change CRS attribute to 3414\n\nReading layer `MP14_SUBZONE_WEB_PL' from data source \n  `C:\\Users\\Henry\\Desktop\\SMU Masters\\2024-2025 T1\\Geospatial Analytics & Applications\\Project\\GeospatialWebsite\\In-Class_Ex\\In-Class_Ex_02\\data\\MasterPlan2014SubzoneBoundaryWebSHP' \n  using driver `ESRI Shapefile'\nSimple feature collection with 323 features and 15 fields\nGeometry type: MULTIPOLYGON\nDimension:     XY\nBounding box:  xmin: 2667.538 ymin: 15748.72 xmax: 56396.44 ymax: 50256.33\nProjected CRS: SVY21\n\n\nWarning: st_crs&lt;- : replacing crs does not reproject data; use st_transform for\nthat\n\n# Create costaloutline dataset\nsg_sf &lt;- mpsz_sf %&gt;%\n  st_union() # Can just use st_union instead of requiring costaloutline dataset\n# Check sg_sf\nplot(sg_sf)"
  },
  {
    "objectID": "In-Class_Ex/In-Class_Ex_02/In-Class_Ex02.html#other-spatstat-package-geospatial-processing",
    "href": "In-Class_Ex/In-Class_Ex_02/In-Class_Ex02.html#other-spatstat-package-geospatial-processing",
    "title": "In Class Exercise 02",
    "section": "Other Spatstat package geospatial processing",
    "text": "Other Spatstat package geospatial processing\n\n1. Create ppp objects from sf data frame\n\n# Load childcare sf\nchildcare_sf &lt;- st_read(\"data/child-care-services-geojson.geojson\") %&gt;%\n  st_transform(crs = 3414)\n\nReading layer `child-care-services-geojson' from data source \n  `C:\\Users\\Henry\\Desktop\\SMU Masters\\2024-2025 T1\\Geospatial Analytics & Applications\\Project\\GeospatialWebsite\\In-Class_Ex\\In-Class_Ex_02\\data\\child-care-services-geojson.geojson' \n  using driver `GeoJSON'\nSimple feature collection with 1545 features and 2 fields\nGeometry type: POINT\nDimension:     XYZ\nBounding box:  xmin: 103.6824 ymin: 1.248403 xmax: 103.9897 ymax: 1.462134\nz_range:       zmin: 0 zmax: 0\nGeodetic CRS:  WGS 84\n\n# Create ppp object with as.ppp() from spatstat.geom\nchildcare_ppp &lt;- as.ppp(childcare_sf)\n\nWarning in as.ppp.sf(childcare_sf): only first attribute column is used for\nmarks\n\n# Visualize ppp object\nplot(childcare_ppp)\n\nWarning in default.charmap(ntypes, chars): Too many types to display every type\nas a different character\n\n\nWarning: Only 10 out of 1545 symbols are shown in the symbol map\n\n\n\n\n\n\n\n\n\n\n# Check property of ppp object\nsummary(childcare_ppp)\n\nMarked planar point pattern:  1545 points\nAverage intensity 1.91145e-06 points per square unit\n\nCoordinates are given to 11 decimal places\n\nmarks are of type 'character'\nSummary:\n   Length     Class      Mode \n     1545 character character \n\nWindow: rectangle = [11203.01, 45404.24] x [25667.6, 49300.88] units\n                    (34200 x 23630 units)\nWindow area = 808287000 square units\n\n\n\n\n2. Create owin object from sf data frame\n\n# Create owin object with as.owin() from spatstat.geom\nsg_owin &lt;- as.owin(sg_sf)\n\n# Visualize owin object\nplot(sg_owin)\n\n\n\n\n\n\n\n\n\n# Check property of owin object\nsummary(sg_owin)\n\nWindow: polygonal boundary\n80 separate polygons (35 holes)\n                  vertices         area relative.area\npolygon 1            14650  6.97996e+08      8.93e-01\npolygon 2 (hole)         3 -2.21090e+00     -2.83e-09\npolygon 3              285  1.61128e+06      2.06e-03\npolygon 4 (hole)         3 -2.05920e-03     -2.63e-12\npolygon 5 (hole)         3 -8.83647e-03     -1.13e-11\npolygon 6              668  5.40368e+07      6.91e-02\npolygon 7               44  2.26577e+03      2.90e-06\npolygon 8               27  1.50315e+04      1.92e-05\npolygon 9              711  1.28815e+07      1.65e-02\npolygon 10 (hole)       36 -4.01660e+04     -5.14e-05\npolygon 11 (hole)      317 -5.11280e+04     -6.54e-05\npolygon 12 (hole)        3 -3.41405e-01     -4.37e-10\npolygon 13 (hole)        3 -2.89050e-05     -3.70e-14\npolygon 14              77  3.29939e+05      4.22e-04\npolygon 15              30  2.80002e+04      3.58e-05\npolygon 16 (hole)        3 -2.83151e-01     -3.62e-10\npolygon 17              71  8.18750e+03      1.05e-05\npolygon 18 (hole)        3 -1.68316e-04     -2.15e-13\npolygon 19 (hole)       36 -7.79904e+03     -9.97e-06\npolygon 20 (hole)        4 -2.05611e-02     -2.63e-11\npolygon 21 (hole)        3 -2.18000e-06     -2.79e-15\npolygon 22 (hole)        3 -3.65501e-03     -4.67e-12\npolygon 23 (hole)        3 -4.95057e-02     -6.33e-11\npolygon 24 (hole)        3 -3.99521e-02     -5.11e-11\npolygon 25 (hole)        3 -6.62377e-01     -8.47e-10\npolygon 26 (hole)        3 -2.09065e-03     -2.67e-12\npolygon 27              91  1.49663e+04      1.91e-05\npolygon 28 (hole)       26 -1.25665e+03     -1.61e-06\npolygon 29 (hole)      349 -1.21433e+03     -1.55e-06\npolygon 30 (hole)       20 -4.39069e+00     -5.62e-09\npolygon 31 (hole)       48 -1.38338e+02     -1.77e-07\npolygon 32 (hole)       28 -1.99862e+01     -2.56e-08\npolygon 33              40  1.38607e+04      1.77e-05\npolygon 34 (hole)       40 -6.00381e+03     -7.68e-06\npolygon 35 (hole)        7 -1.40545e-01     -1.80e-10\npolygon 36 (hole)       12 -8.36709e+01     -1.07e-07\npolygon 37              45  2.51218e+03      3.21e-06\npolygon 38             142  3.22293e+03      4.12e-06\npolygon 39             148  3.10395e+03      3.97e-06\npolygon 40              75  1.73526e+04      2.22e-05\npolygon 41              83  5.28920e+03      6.76e-06\npolygon 42             211  4.70521e+05      6.02e-04\npolygon 43             106  3.04104e+03      3.89e-06\npolygon 44             266  1.50631e+06      1.93e-03\npolygon 45              71  5.63061e+03      7.20e-06\npolygon 46              10  1.99717e+02      2.55e-07\npolygon 47             478  2.06120e+06      2.64e-03\npolygon 48             155  2.67502e+05      3.42e-04\npolygon 49            1027  1.27782e+06      1.63e-03\npolygon 50 (hole)        3 -1.16959e-03     -1.50e-12\npolygon 51              65  8.42861e+04      1.08e-04\npolygon 52              47  3.82087e+04      4.89e-05\npolygon 53               6  4.50259e+02      5.76e-07\npolygon 54             132  9.53357e+04      1.22e-04\npolygon 55 (hole)        3 -3.23310e-04     -4.13e-13\npolygon 56               4  2.69313e+02      3.44e-07\npolygon 57 (hole)        3 -1.46474e-03     -1.87e-12\npolygon 58            1045  4.44510e+06      5.68e-03\npolygon 59              22  6.74651e+03      8.63e-06\npolygon 60              64  3.43149e+04      4.39e-05\npolygon 61 (hole)        3 -1.98390e-03     -2.54e-12\npolygon 62 (hole)        4 -1.13774e-02     -1.46e-11\npolygon 63              14  5.86546e+03      7.50e-06\npolygon 64              95  5.96187e+04      7.62e-05\npolygon 65 (hole)        4 -1.86410e-02     -2.38e-11\npolygon 66 (hole)        3 -5.12482e-03     -6.55e-12\npolygon 67 (hole)        3 -1.96410e-03     -2.51e-12\npolygon 68 (hole)        3 -5.55856e-03     -7.11e-12\npolygon 69             234  2.08755e+06      2.67e-03\npolygon 70              10  4.90942e+02      6.28e-07\npolygon 71             234  4.72886e+05      6.05e-04\npolygon 72 (hole)       13 -3.91907e+02     -5.01e-07\npolygon 73              15  4.03300e+04      5.16e-05\npolygon 74             227  1.10308e+06      1.41e-03\npolygon 75              10  6.60195e+03      8.44e-06\npolygon 76              19  3.09221e+04      3.95e-05\npolygon 77             145  9.61782e+05      1.23e-03\npolygon 78              30  4.28933e+03      5.49e-06\npolygon 79              37  1.29481e+04      1.66e-05\npolygon 80               4  9.47108e+01      1.21e-07\nenclosing rectangle: [2667.54, 56396.44] x [15748.72, 50256.33] units\n                     (53730 x 34510 units)\nWindow area = 781945000 square units\nFraction of frame area: 0.422\n\n\n\n\n3. Combine point events object and owin object\n\n# Combine point events object and owin object\nchildcareSG_ppp &lt;-  childcare_ppp[sg_owin]\n\n# Visualize combined object\nplot(childcareSG_ppp)\n\nWarning in default.charmap(ntypes, chars): Too many types to display every type\nas a different character\n\n\nWarning: Only 10 out of 1545 symbols are shown in the symbol map"
  },
  {
    "objectID": "In-Class_Ex/In-Class_Ex_02/In-Class_Ex02.html#spatial-points-pattern-analysis",
    "href": "In-Class_Ex/In-Class_Ex_02/In-Class_Ex02.html#spatial-points-pattern-analysis",
    "title": "In Class Exercise 02",
    "section": "Spatial Points Pattern Analysis",
    "text": "Spatial Points Pattern Analysis\n\n1. Kernel Density Estimation of Spatial Point Event\n\n# Change scale from metre to km\nchildcareSG_ppp.km &lt;- rescale.ppp(childcareSG_ppp, 1000, \"km\")\n\n# Adaptive density estimation\nkde_childcareSG_adaptive &lt;- adaptive.density(childcareSG_ppp.km, method=\"kernel\")\n\n# Visualize results\nplot(kde_childcareSG_adaptive)\n\n\n\n\n\n\n\n\n\n\n2. Convert Kernel Density Estimation Output into grid object\n\n# Convert KDE into grid with spatstat.geom\ngridded_kde_childcareSG_ad &lt;- as(kde_childcareSG_adaptive, \"SpatialGridDataFrame\")\n\n# # Convert KDE into grid with maptools method\n# gridded_kde_childcareSG_ad &lt;- maptools::as.SpatialGridDataFrame.im(kde_childcareSG_adaptive)\n\n# Visualize results\nspplot(gridded_kde_childcareSG_ad)\n\n\n\n\n\n\n\n\n\n\n3. Visualize Kernel Density Estimation raster with tmap function\n\n# Visualize output\nkde_childcareSG_ad_raster &lt;- raster(kde_childcareSG_adaptive)\ntm_shape(kde_childcareSG_ad_raster) + \n  tm_raster(palette = \"viridis\") +\n  tm_layout(legend.position = c(\"right\", \"bottom\"), \n            frame = FALSE,\n            bg.color = \"#E4D5C9\")\n\nWarning: Currect projection of shape kde_childcareSG_ad_raster unknown. Long\nlat (epsg 4326) coordinates assumed.\n\n\n\n\n\n\n\n\n\n\n\n4. Extract Study Area\n\n# Filter specific planning area\npg_owin &lt;- mpsz_sf %&gt;%\n  filter(PLN_AREA_N == \"PUNGGOL\") %&gt;%\n  as.owin()\n\n# Create point events object and filtered owin object\nchildcare_pg &lt;-  childcare_ppp[pg_owin]\n\n# Visualize result\nplot(childcare_pg)  \n\nWarning in default.charmap(ntypes, chars): Too many types to display every type\nas a different character\n\n\nWarning: Only 10 out of 61 symbols are shown in the symbol map\n\n\n\n\n\n\n\n\n\n\n\n5. Monte Carlo Simulation\n\n# Ensure reproducibility\nset.seed(42)\n\n\n\n6. Edge Correction Methods\nGenerally dont have worry about edge correction for Singapopre. “Ripley” is a popular method that should work for most cases. But for specific area, users may need to be careful when specific points are too close to edge."
  },
  {
    "objectID": "In-Class_Ex/In-Class_Ex_02/In-Class_Ex02.html#geospatial-analytics-thailand-road-accident-case-study",
    "href": "In-Class_Ex/In-Class_Ex_02/In-Class_Ex02.html#geospatial-analytics-thailand-road-accident-case-study",
    "title": "In Class Exercise 02",
    "section": "Geospatial ANalytics: Thailand Road Accident Case Study",
    "text": "Geospatial ANalytics: Thailand Road Accident Case Study\n\n# Load road accidents and Convert to sf dataframe\naccidents_sf &lt;- read_csv(\"data/thai_road_accident_2019_2022.csv\") %&gt;% \n  filter(!is.na(longitude) & longitude != \"\", !is.na(latitude) & latitude != \"\") %&gt;%\n  filter(province_en %in% c(\"Bangkok\", \"Nonthaburi\", \"Pathum Thani\", \n                              \"Samut Prakan\", \"Samut Sakhon\", \"Nakhon Pathom\")) %&gt;%\n  st_as_sf(coords = c(\"longitude\", \"latitude\"), crs = 4326) %&gt;%\n  st_transform(crs = 32647)\n\nRows: 81735 Columns: 18\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr  (10): province_th, province_en, agency, route, vehicle_type, presumed_c...\ndbl   (6): acc_code, number_of_vehicles_involved, number_of_fatalities, numb...\ndttm  (2): incident_datetime, report_datetime\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\nglimpse(accidents_sf) \n\nRows: 12,986\nColumns: 17\n$ acc_code                    &lt;dbl&gt; 571882, 600001, 605043, 629691, 571887, 59…\n$ incident_datetime           &lt;dttm&gt; 2019-01-01 02:25:00, 2019-01-01 03:00:00,…\n$ report_datetime             &lt;dttm&gt; 2019-01-02 17:32:00, 2019-01-05 10:33:00,…\n$ province_th                 &lt;chr&gt; \"นครปฐม\", \"นนทบุรี\", \"สมุทรปราการ\", \"กรุงเทพมห…\n$ province_en                 &lt;chr&gt; \"Nakhon Pathom\", \"Nonthaburi\", \"Samut Prak…\n$ agency                      &lt;chr&gt; \"department of rural roads\", \"department o…\n$ route                       &lt;chr&gt; \"แยกทางหลวงหมายเลข 4 (กม.ที่ 51+920) - บ้านวัด…\n$ vehicle_type                &lt;chr&gt; \"motorcycle\", \"private/passenger car\", \"pr…\n$ presumed_cause              &lt;chr&gt; \"speeding\", \"speeding\", \"running red light…\n$ accident_type               &lt;chr&gt; \"rollover/fallen on straight road\", \"rollo…\n$ number_of_vehicles_involved &lt;dbl&gt; 1, 1, 2, 1, 1, 1, 1, 1, 1, 1, 2, 2, 3, 2, …\n$ number_of_fatalities        &lt;dbl&gt; 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, …\n$ number_of_injuries          &lt;dbl&gt; 2, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, …\n$ weather_condition           &lt;chr&gt; \"clear\", \"clear\", \"clear\", \"clear\", \"clear…\n$ road_description            &lt;chr&gt; \"straight road\", \"straight road\", \"other\",…\n$ slope_description           &lt;chr&gt; \"no slope\", \"no slope\", \"other\", \"other\", …\n$ geometry                    &lt;POINT [m]&gt; POINT (627012.3 1533381), POINT (655…\n\n\n\n# Load thai road for only Bangkok Metropolitan Region\nthai_bound &lt;- st_read(dsn = \"data/tha_adm_rtsd_itos_20210121_shp/\", layer = \"tha_admbnda_adm1_rtsd_20220121\") %&gt;%\n  st_transform(crs = 32647) %&gt;%\n  filter(ADM1_EN %in% c(\"Bangkok\", \"Nonthaburi\", \"Pathum Thani\", \n                              \"Samut Prakan\", \"Samut Sakhon\", \"Nakhon Pathom\"))\n\nReading layer `tha_admbnda_adm1_rtsd_20220121' from data source \n  `C:\\Users\\Henry\\Desktop\\SMU Masters\\2024-2025 T1\\Geospatial Analytics & Applications\\Project\\GeospatialWebsite\\In-Class_Ex\\In-Class_Ex_02\\data\\tha_adm_rtsd_itos_20210121_shp' \n  using driver `ESRI Shapefile'\nSimple feature collection with 77 features and 16 fields\nGeometry type: MULTIPOLYGON\nDimension:     XY\nBounding box:  xmin: 97.34336 ymin: 5.613038 xmax: 105.637 ymax: 20.46507\nGeodetic CRS:  WGS 84\n\nglimpse(thai_bound)\n\nRows: 6\nColumns: 17\n$ Shape_Leng &lt;dbl&gt; 2.417227, 1.695100, 1.251111, 1.884945, 2.463030, 1.566369\n$ Shape_Area &lt;dbl&gt; 0.13133873, 0.07926199, 0.05323766, 0.12698345, 0.17891420,…\n$ ADM1_EN    &lt;chr&gt; \"Bangkok\", \"Samut Prakan\", \"Nonthaburi\", \"Pathum Thani\", \"N…\n$ ADM1_TH    &lt;chr&gt; \"กรุงเทพมหานคร\", \"สมุทรปราการ\", \"นนทบุรี\", \"ปทุมธานี\", \"นครปฐม\", …\n$ ADM1_PCODE &lt;chr&gt; \"TH10\", \"TH11\", \"TH12\", \"TH13\", \"TH73\", \"TH74\"\n$ ADM1_REF   &lt;chr&gt; NA, NA, NA, NA, NA, NA\n$ ADM1ALT1EN &lt;chr&gt; NA, NA, NA, NA, NA, NA\n$ ADM1ALT2EN &lt;chr&gt; NA, NA, NA, NA, NA, NA\n$ ADM1ALT1TH &lt;chr&gt; NA, NA, NA, NA, NA, NA\n$ ADM1ALT2TH &lt;chr&gt; NA, NA, NA, NA, NA, NA\n$ ADM0_EN    &lt;chr&gt; \"Thailand\", \"Thailand\", \"Thailand\", \"Thailand\", \"Thailand\",…\n$ ADM0_TH    &lt;chr&gt; \"ประเทศไทย\", \"ประเทศไทย\", \"ประเทศไทย\", \"ประเทศไทย\", \"ประเทศ…\n$ ADM0_PCODE &lt;chr&gt; \"TH\", \"TH\", \"TH\", \"TH\", \"TH\", \"TH\"\n$ date       &lt;date&gt; 2019-02-18, 2019-02-18, 2019-02-18, 2019-02-18, 2019-02-18,…\n$ validOn    &lt;date&gt; 2022-01-22, 2022-01-22, 2022-01-22, 2022-01-22, 2022-01-22,…\n$ validTo    &lt;date&gt; -001-11-30, -001-11-30, -001-11-30, -001-11-30, -001-11-30,…\n$ geometry   &lt;MULTIPOLYGON [m]&gt; MULTIPOLYGON (((674339.8 15..., MULTIPOLYGON (((687139.8 15…\n\n\n\n# Visualize accident data\ntmap_mode(\"plot\")\n\ntmap mode set to plotting\n\ntm_shape(thai_bound) +\n  tm_polygons() +\n  tm_shape(accidents_sf) +\n  tm_dots(size = 0.01, col = \"black\", alpha = 0.5)"
  },
  {
    "objectID": "Hands-On_Ex/Hands-On_Ex_03/Hands-On_Ex03.html#setting-up",
    "href": "Hands-On_Ex/Hands-On_Ex_03/Hands-On_Ex03.html#setting-up",
    "title": "Hands-On Exercise 03",
    "section": "7.1 Setting Up",
    "text": "7.1 Setting Up\n\n7.1.1 Loading the R packages\n\npacman::p_load(sf, spNetwork, tmap, tidyverse)\n\n\n\n7.1.2 Importing spatial data\n\n# Load network dataset\nnetwork &lt;- st_read(dsn=\"data\", layer=\"Punggol_St\") # Check that geometry is Linestring and not multilinestring\n\nReading layer `Punggol_St' from data source \n  `C:\\Users\\Henry\\Desktop\\SMU Masters\\2024-2025 T1\\Geospatial Analytics & Applications\\Project\\GeospatialWebsite\\Hands-On_Ex\\Hands-On_Ex_03\\data' \n  using driver `ESRI Shapefile'\nSimple feature collection with 2642 features and 2 fields\nGeometry type: LINESTRING\nDimension:     XY\nBounding box:  xmin: 34038.56 ymin: 40941.11 xmax: 38882.85 ymax: 44801.27\nProjected CRS: SVY21 / Singapore TM\n\n\n\n# Load childcare dataset\nchildcare &lt;- st_read(dsn=\"data\", layer=\"Punggol_CC\") %&gt;%\n  st_zm(drop = TRUE, what = \"ZM\") # Remove Z dimension\n\nReading layer `Punggol_CC' from data source \n  `C:\\Users\\Henry\\Desktop\\SMU Masters\\2024-2025 T1\\Geospatial Analytics & Applications\\Project\\GeospatialWebsite\\Hands-On_Ex\\Hands-On_Ex_03\\data' \n  using driver `ESRI Shapefile'\nSimple feature collection with 61 features and 1 field\nGeometry type: POINT\nDimension:     XYZ\nBounding box:  xmin: 34423.98 ymin: 41503.6 xmax: 37619.47 ymax: 44685.77\nz_range:       zmin: 0 zmax: 0\nProjected CRS: SVY21 / Singapore TM\n\n\n\nChildcareNetwork\n\n\n\n# See childcare features\nchildcare\n\nSimple feature collection with 61 features and 1 field\nGeometry type: POINT\nDimension:     XY\nBounding box:  xmin: 34423.98 ymin: 41503.6 xmax: 37619.47 ymax: 44685.77\nProjected CRS: SVY21 / Singapore TM\nFirst 10 features:\n      Name                  geometry\n1   kml_10 POINT (36173.81 42550.33)\n2   kml_99 POINT (36479.56 42405.21)\n3  kml_100 POINT (36618.72 41989.13)\n4  kml_101 POINT (36285.37 42261.42)\n5  kml_122  POINT (35414.54 42625.1)\n6  kml_161 POINT (36545.16 42580.09)\n7  kml_172 POINT (35289.44 44083.57)\n8  kml_188 POINT (36520.56 42844.74)\n9  kml_205  POINT (36924.01 41503.6)\n10 kml_222 POINT (37141.76 42326.36)\n\n\n\n# See childcare crs information\nst_crs(childcare)\n\nCoordinate Reference System:\n  User input: SVY21 / Singapore TM \n  wkt:\nPROJCRS[\"SVY21 / Singapore TM\",\n    BASEGEOGCRS[\"SVY21\",\n        DATUM[\"SVY21\",\n            ELLIPSOID[\"WGS 84\",6378137,298.257223563,\n                LENGTHUNIT[\"metre\",1]]],\n        PRIMEM[\"Greenwich\",0,\n            ANGLEUNIT[\"degree\",0.0174532925199433]],\n        ID[\"EPSG\",4757]],\n    CONVERSION[\"Singapore Transverse Mercator\",\n        METHOD[\"Transverse Mercator\",\n            ID[\"EPSG\",9807]],\n        PARAMETER[\"Latitude of natural origin\",1.36666666666667,\n            ANGLEUNIT[\"degree\",0.0174532925199433],\n            ID[\"EPSG\",8801]],\n        PARAMETER[\"Longitude of natural origin\",103.833333333333,\n            ANGLEUNIT[\"degree\",0.0174532925199433],\n            ID[\"EPSG\",8802]],\n        PARAMETER[\"Scale factor at natural origin\",1,\n            SCALEUNIT[\"unity\",1],\n            ID[\"EPSG\",8805]],\n        PARAMETER[\"False easting\",28001.642,\n            LENGTHUNIT[\"metre\",1],\n            ID[\"EPSG\",8806]],\n        PARAMETER[\"False northing\",38744.572,\n            LENGTHUNIT[\"metre\",1],\n            ID[\"EPSG\",8807]]],\n    CS[Cartesian,2],\n        AXIS[\"northing (N)\",north,\n            ORDER[1],\n            LENGTHUNIT[\"metre\",1]],\n        AXIS[\"easting (E)\",east,\n            ORDER[2],\n            LENGTHUNIT[\"metre\",1]],\n    USAGE[\n        SCOPE[\"Cadastre, engineering survey, topographic mapping.\"],\n        AREA[\"Singapore - onshore and offshore.\"],\n        BBOX[1.13,103.59,1.47,104.07]],\n    ID[\"EPSG\",3414]]\n\n\n\n\n\n# See network features\nnetwork\n\nSimple feature collection with 2642 features and 2 fields\nGeometry type: LINESTRING\nDimension:     XY\nBounding box:  xmin: 34038.56 ymin: 40941.11 xmax: 38882.85 ymax: 44801.27\nProjected CRS: SVY21 / Singapore TM\nFirst 10 features:\n     LINK_ID                   ST_NAME                       geometry\n1  116130894                PUNGGOL RD LINESTRING (36546.89 44574....\n2  116130897 PONGGOL TWENTY-FOURTH AVE LINESTRING (36546.89 44574....\n3  116130901   PONGGOL SEVENTEENTH AVE LINESTRING (36012.73 44154....\n4  116130902   PONGGOL SEVENTEENTH AVE LINESTRING (36062.81 44197....\n5  116130907           PUNGGOL CENTRAL LINESTRING (36131.85 42755....\n6  116130908                PUNGGOL RD LINESTRING (36112.93 42752....\n7  116130909           PUNGGOL CENTRAL LINESTRING (36127.4 42744.5...\n8  116130910               PUNGGOL FLD LINESTRING (35994.98 42428....\n9  116130911               PUNGGOL FLD LINESTRING (35984.97 42407....\n10 116130912            EDGEFIELD PLNS LINESTRING (36200.87 42219....\n\n\n\n# See network crs information\nst_crs(network)\n\nCoordinate Reference System:\n  User input: SVY21 / Singapore TM \n  wkt:\nPROJCRS[\"SVY21 / Singapore TM\",\n    BASEGEOGCRS[\"SVY21\",\n        DATUM[\"SVY21\",\n            ELLIPSOID[\"WGS 84\",6378137,298.257223563,\n                LENGTHUNIT[\"metre\",1]]],\n        PRIMEM[\"Greenwich\",0,\n            ANGLEUNIT[\"degree\",0.0174532925199433]],\n        ID[\"EPSG\",4757]],\n    CONVERSION[\"Singapore Transverse Mercator\",\n        METHOD[\"Transverse Mercator\",\n            ID[\"EPSG\",9807]],\n        PARAMETER[\"Latitude of natural origin\",1.36666666666667,\n            ANGLEUNIT[\"degree\",0.0174532925199433],\n            ID[\"EPSG\",8801]],\n        PARAMETER[\"Longitude of natural origin\",103.833333333333,\n            ANGLEUNIT[\"degree\",0.0174532925199433],\n            ID[\"EPSG\",8802]],\n        PARAMETER[\"Scale factor at natural origin\",1,\n            SCALEUNIT[\"unity\",1],\n            ID[\"EPSG\",8805]],\n        PARAMETER[\"False easting\",28001.642,\n            LENGTHUNIT[\"metre\",1],\n            ID[\"EPSG\",8806]],\n        PARAMETER[\"False northing\",38744.572,\n            LENGTHUNIT[\"metre\",1],\n            ID[\"EPSG\",8807]]],\n    CS[Cartesian,2],\n        AXIS[\"northing (N)\",north,\n            ORDER[1],\n            LENGTHUNIT[\"metre\",1]],\n        AXIS[\"easting (E)\",east,\n            ORDER[2],\n            LENGTHUNIT[\"metre\",1]],\n    USAGE[\n        SCOPE[\"Cadastre, engineering survey, topographic mapping.\"],\n        AREA[\"Singapore - onshore and offshore.\"],\n        BBOX[1.13,103.59,1.47,104.07]],\n    ID[\"EPSG\",3414]]"
  },
  {
    "objectID": "Hands-On_Ex/Hands-On_Ex_03/Hands-On_Ex03.html#visualize-geospatial-data",
    "href": "Hands-On_Ex/Hands-On_Ex_03/Hands-On_Ex03.html#visualize-geospatial-data",
    "title": "Hands-On Exercise 03",
    "section": "7.2 Visualize Geospatial Data",
    "text": "7.2 Visualize Geospatial Data\n\n# Visualize both geospatial data\nplot(st_geometry(network)) # Use st_geometry to plot only the network without corresponding attributes\nplot(childcare,add=T,col='red',pch = 19)\n\n\n\n\n\n\n\n\n\n# Interactive Visualization with tmap \ntmap_mode('view')\n\ntmap mode set to interactive viewing\n\ntm_shape(childcare) +\n  tm_dots() +\n  tm_shape(network) +\n  tm_lines()\n\n\n\n\n\n\n# Set tmap_mode back to plot\ntmap_mode('plot')\n\ntmap mode set to plotting"
  },
  {
    "objectID": "Hands-On_Ex/Hands-On_Ex_03/Hands-On_Ex03.html#network-kde-nkde-analysis",
    "href": "Hands-On_Ex/Hands-On_Ex_03/Hands-On_Ex03.html#network-kde-nkde-analysis",
    "title": "Hands-On Exercise 03",
    "section": "7.3 Network KDE (NKDE) ANalysis",
    "text": "7.3 Network KDE (NKDE) ANalysis\n\n7.3.1 Prepare Lixel Objects\n\n# Cut spatiallines objects into lixels with specified minimal distance using lixelize_lines from spNetwork\nlixels &lt;- lixelize_lines(network, 700, mindist = 375)\n# Use nearest neighbour to gauge the appropriate distance - bottom ~25%-10%\n\n\n\n7.3.2 Generate line centre points\n\n# create line centre points with lines_center from spNetwork\nsamples &lt;- lines_center(lixels) \n\ntmap_mode('view')\n\ntmap mode set to interactive viewing\n\ntm_shape(lixels) + \n  tm_lines() + \n  tm_shape(samples) + \n  tm_dots(size =0.01)\n\n\n\n\ntmap_mode(\"plot\")\n\ntmap mode set to plotting\n\n\n\n\n7.3.3 Perform NKDE\n\n# # Remove Z-dimension from childcare (No longer required)\n# childcare_rmz &lt;- st_zm(childcare)\n\n# Perform NKDE\ndensities &lt;- nkde(network, \n                  events = childcare,\n                  w = rep(1, nrow(childcare)),\n                  samples = samples,\n                  kernel_name = \"quartic\", # Try to avoid gaussian if intensity is negative\n                  bw = 300, \n                  div= \"bw\", \n                  method = \"simple\", \n                  digits = 1, \n                  tol = 1,\n                  grid_shape = c(1,1), \n                  max_depth = 8,\n                  agg = 5, \n                  sparse = TRUE,\n                  verbose = FALSE)\n# Densities - represents intensity\n\n\n# Insert computed density values as density field\nsamples$density &lt;- densities\nlixels$density &lt;- densities\n\n# Recaling to enhance mapping\nsamples$density &lt;- samples$density*1000\nlixels$density &lt;- lixels$density*1000\n\n# Visualize interactive plot\ntmap_mode('view')\n\ntmap mode set to interactive viewing\n\ntm_shape(lixels)+\n  tm_lines(col=\"density\")+\ntm_shape(childcare)+\n  tm_dots()\n\n\n\n\ntmap_mode('plot')\n\ntmap mode set to plotting"
  },
  {
    "objectID": "Hands-On_Ex/Hands-On_Ex_03/Hands-On_Ex03.html#network-constrainted-g--and-k--function-analysis",
    "href": "Hands-On_Ex/Hands-On_Ex_03/Hands-On_Ex03.html#network-constrainted-g--and-k--function-analysis",
    "title": "Hands-On Exercise 03",
    "section": "7.4 Network Constrainted G- and K- Function Analysis",
    "text": "7.4 Network Constrainted G- and K- Function Analysis\nHo: The observed spatial point events (i.e distribution of childcare centres) are uniformly distributed over a street network in Punggol Planning Area.\n\n# Perform complete spatial randomness test using kfunction from spNetwork\nkfun_childcare &lt;- kfunctions(network, \n                             childcare,\n                             start = 0, \n                             end = 1000, \n                             step = 50, \n                             width = 50, \n                             nsim = 50, # 51 simulations \n                             resolution = 50,\n                             verbose = FALSE, \n                             conf_int = 0.05)\n\n\n# Visualize k-function output\nkfun_childcare$plotk\n\n\n\n\n\n\n\n\nConclusion\n- There is non complete spatial randomness\n- In certain distances (~250-500), childcares are regularly spaced out\n- At higher distances (&gt;600), childcares are randomly spaced out"
  },
  {
    "objectID": "Take-Home_Ex/Take-Home_Ex_01/Take-Home_Ex01.html#loading-r-packages",
    "href": "Take-Home_Ex/Take-Home_Ex_01/Take-Home_Ex01.html#loading-r-packages",
    "title": "Take Home Exercise 01",
    "section": "1.1 Loading R Packages",
    "text": "1.1 Loading R Packages\nI will be using the following R packages:\n-sf package to perform geospatial wrangling tasks \n- spatstat package to calculate nearest neighbour \n- spNetwork package to perform network kernel density estimation (NKDE) and temporal network kernel density estimation \n- tidyverse package for reading csv files, dataframe processing tasks \n- tmap package for plotting tasks \n- classInt and viridis to generate gif animation for temporal network kernel density estimation.\n\n\npacman::p_load(tidyverse, spatstat, sf, spNetwork, tmap, classInt, viridis)"
  },
  {
    "objectID": "Take-Home_Ex/Take-Home_Ex_01/Take-Home_Ex01.html#loading-datasets",
    "href": "Take-Home_Ex/Take-Home_Ex_01/Take-Home_Ex01.html#loading-datasets",
    "title": "Take Home Exercise 01",
    "section": "1.2 Loading Datasets",
    "text": "1.2 Loading Datasets\n\n1.2.1 Thailand Road Accidents Data\n\n# Load 2019-2020 Road Accidents Data\nra_tbl &lt;- read_csv('data/thai_road_accident_2019_2022.csv')\n\nRows: 81735 Columns: 18\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr  (10): province_th, province_en, agency, route, vehicle_type, presumed_c...\ndbl   (6): acc_code, number_of_vehicles_involved, number_of_fatalities, numb...\ndttm  (2): incident_datetime, report_datetime\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\n# Check data\nglimpse(ra_tbl)\n\nRows: 81,735\nColumns: 18\n$ acc_code                    &lt;dbl&gt; 571905, 3790870, 599075, 571924, 599523, 5…\n$ incident_datetime           &lt;dttm&gt; 2019-01-01 00:00:00, 2019-01-01 00:03:00,…\n$ report_datetime             &lt;dttm&gt; 2019-01-02 06:11:00, 2020-02-20 13:48:00,…\n$ province_th                 &lt;chr&gt; \"ลพบุรี\", \"อุบลราชธานี\", \"ประจวบคีรีขันธ์\", \"เชียงใ…\n$ province_en                 &lt;chr&gt; \"Loburi\", \"Ubon Ratchathani\", \"Prachuap Kh…\n$ agency                      &lt;chr&gt; \"department of rural roads\", \"department o…\n$ route                       &lt;chr&gt; \"แยกทางหลวงหมายเลข 21 (กม.ที่ 31+000) - บ้านวั…\n$ vehicle_type                &lt;chr&gt; \"motorcycle\", \"private/passenger car\", \"mo…\n$ presumed_cause              &lt;chr&gt; \"driving under the influence of alcohol\", …\n$ accident_type               &lt;chr&gt; \"other\", \"rollover/fallen on straight road…\n$ number_of_vehicles_involved &lt;dbl&gt; 1, 1, 2, 1, 1, 1, 2, 2, 2, 2, 1, 1, 1, 1, …\n$ number_of_fatalities        &lt;dbl&gt; 0, 0, 1, 0, 0, 0, 0, 1, 3, 0, 0, 1, 0, 0, …\n$ number_of_injuries          &lt;dbl&gt; 2, 2, 0, 1, 0, 2, 2, 0, 0, 1, 1, 0, 1, 1, …\n$ weather_condition           &lt;chr&gt; \"clear\", \"clear\", \"clear\", \"clear\", \"clear…\n$ latitude                    &lt;dbl&gt; 14.959105, 15.210738, 12.374259, 18.601721…\n$ longitude                   &lt;dbl&gt; 100.87346, 104.86269, 99.90795, 98.80420, …\n$ road_description            &lt;chr&gt; \"straight road\", \"straight road\", \"wide cu…\n$ slope_description           &lt;chr&gt; \"no slope\", \"no slope\", \"slope area\", \"no …\n\n\n\n\n1.2.2 Thailand Openstreet Map Data\n\n# Load Thailand Roads from Openstreet Map\nth_road &lt;- st_read(dsn = \"data/hotosm_tha_roads_lines_shp/\", layer = \"hotosm_tha_roads_lines_shp\") \n\nReading layer `hotosm_tha_roads_lines_shp' from data source \n  `C:\\Users\\Henry\\Desktop\\SMU Masters\\2024-2025 T1\\Geospatial Analytics & Applications\\Project\\GeospatialWebsite\\Take-Home_Ex\\Take-Home_Ex_01\\data\\hotosm_tha_roads_lines_shp' \n  using driver `ESRI Shapefile'\nSimple feature collection with 2792590 features and 14 fields\nGeometry type: MULTILINESTRING\nDimension:     XY\nBounding box:  xmin: 97.34457 ymin: 5.643645 xmax: 105.6528 ymax: 20.47168\nCRS:           NA\n\n\n\n# Check data\n# glimpse(th_road)\nhead(th_road, n=5)\n\nSimple feature collection with 5 features and 14 fields\nGeometry type: MULTILINESTRING\nDimension:     XY\nBounding box:  xmin: 100.7831 ymin: 13.73046 xmax: 100.7913 ymax: 13.74091\nCRS:           NA\n            name               name_en        highway  surface smoothness width\n1     ถนนฉลองกรุง    Chalong Krung Road      secondary    paved       &lt;NA&gt;  &lt;NA&gt;\n2 ซอยฉลองกรุง 1/1 Soi Chalong Krung 1/1    residential     &lt;NA&gt;       &lt;NA&gt;  &lt;NA&gt;\n3           &lt;NA&gt;                  &lt;NA&gt; secondary_link     &lt;NA&gt;       &lt;NA&gt;  &lt;NA&gt;\n4           &lt;NA&gt;                  &lt;NA&gt;        service     &lt;NA&gt;       &lt;NA&gt;  &lt;NA&gt;\n5     ถนนฉลองกรุง    Chalong Krung Road      secondary concrete       &lt;NA&gt;  &lt;NA&gt;\n  lanes oneway bridge layer source        name_th     osm_id  osm_type\n1  &lt;NA&gt;    yes   &lt;NA&gt;  &lt;NA&gt;   &lt;NA&gt;     ถนนฉลองกรุง 1125681229 ways_line\n2  &lt;NA&gt;   &lt;NA&gt;   &lt;NA&gt;  &lt;NA&gt;   &lt;NA&gt; ซอยฉลองกรุง 1/1  594401607 ways_line\n3  &lt;NA&gt;    yes   &lt;NA&gt;  &lt;NA&gt;   &lt;NA&gt;           &lt;NA&gt;  472283206 ways_line\n4  &lt;NA&gt;   &lt;NA&gt;   &lt;NA&gt;  &lt;NA&gt;   &lt;NA&gt;           &lt;NA&gt;  594401608 ways_line\n5     2    yes    yes     1   Bing     ถนนฉลองกรุง  116847248 ways_line\n                        geometry\n1 MULTILINESTRING ((100.7913 ...\n2 MULTILINESTRING ((100.7882 ...\n3 MULTILINESTRING ((100.7844 ...\n4 MULTILINESTRING ((100.7873 ...\n5 MULTILINESTRING ((100.7831 ...\n\n\n\n\n1.2.3 Thailand Subnational Administrative Boundaries\nBased on the description from HDX, there are a few administrative boundaries:\n- Level 0: Country\n- Level 1: Province\n- Level 2: District\n- Level 3: Sub-District, Tambon\nWhile the dataset contains other shp files, the focus will be on those levels.\n\nLevel 0Level 1Level 2Level 3\n\n\n\n# Load Thailand Country from HDX\nth_bound_l0 &lt;- st_read(dsn = \"data/tha_adm_rtsd_itos_20210121_shp/\", layer = \"tha_admbnda_adm0_rtsd_20220121\")\n\nReading layer `tha_admbnda_adm0_rtsd_20220121' from data source \n  `C:\\Users\\Henry\\Desktop\\SMU Masters\\2024-2025 T1\\Geospatial Analytics & Applications\\Project\\GeospatialWebsite\\Take-Home_Ex\\Take-Home_Ex_01\\data\\tha_adm_rtsd_itos_20210121_shp' \n  using driver `ESRI Shapefile'\nSimple feature collection with 1 feature and 13 fields\nGeometry type: MULTIPOLYGON\nDimension:     XY\nBounding box:  xmin: 97.34336 ymin: 5.613038 xmax: 105.637 ymax: 20.46507\nGeodetic CRS:  WGS 84\n\nglimpse(th_bound_l0)\n\nRows: 1\nColumns: 14\n$ Shape_Leng &lt;dbl&gt; 106.6359\n$ Shape_Area &lt;dbl&gt; 43.40351\n$ ADM0_EN    &lt;chr&gt; \"Thailand\"\n$ ADM0_TH    &lt;chr&gt; \"ประเทศไทย\"\n$ ADM0_PCODE &lt;chr&gt; \"TH\"\n$ ADM0_REF   &lt;chr&gt; NA\n$ ADM0ALT1EN &lt;chr&gt; NA\n$ ADM0ALT2EN &lt;chr&gt; NA\n$ ADM0ALT1TH &lt;chr&gt; NA\n$ ADM0ALT2TH &lt;chr&gt; NA\n$ date       &lt;date&gt; 2019-02-18\n$ validOn    &lt;date&gt; 2022-01-22\n$ validTo    &lt;date&gt; -001-11-30\n$ geometry   &lt;MULTIPOLYGON [°]&gt; MULTIPOLYGON (((100.0903 6....\n\n# Visualize the boundaries\nplot(st_geometry(th_bound_l0))\n\n\n\n\n\n\n\n\n\n\n\n# Load Thailand Province from HDX\nth_bound_l1 &lt;- st_read(dsn = \"data/tha_adm_rtsd_itos_20210121_shp/\", layer = \"tha_admbnda_adm1_rtsd_20220121\")\n\nReading layer `tha_admbnda_adm1_rtsd_20220121' from data source \n  `C:\\Users\\Henry\\Desktop\\SMU Masters\\2024-2025 T1\\Geospatial Analytics & Applications\\Project\\GeospatialWebsite\\Take-Home_Ex\\Take-Home_Ex_01\\data\\tha_adm_rtsd_itos_20210121_shp' \n  using driver `ESRI Shapefile'\nSimple feature collection with 77 features and 16 fields\nGeometry type: MULTIPOLYGON\nDimension:     XY\nBounding box:  xmin: 97.34336 ymin: 5.613038 xmax: 105.637 ymax: 20.46507\nGeodetic CRS:  WGS 84\n\nglimpse(th_bound_l1)\n\nRows: 77\nColumns: 17\n$ Shape_Leng &lt;dbl&gt; 2.417227, 1.695100, 1.251111, 1.884945, 3.041716, 1.739908,…\n$ Shape_Area &lt;dbl&gt; 0.13133873, 0.07926199, 0.05323766, 0.12698345, 0.21393797,…\n$ ADM1_EN    &lt;chr&gt; \"Bangkok\", \"Samut Prakan\", \"Nonthaburi\", \"Pathum Thani\", \"P…\n$ ADM1_TH    &lt;chr&gt; \"กรุงเทพมหานคร\", \"สมุทรปราการ\", \"นนทบุรี\", \"ปทุมธานี\", \"พระนครศรีอ…\n$ ADM1_PCODE &lt;chr&gt; \"TH10\", \"TH11\", \"TH12\", \"TH13\", \"TH14\", \"TH15\", \"TH16\", \"TH…\n$ ADM1_REF   &lt;chr&gt; NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA,…\n$ ADM1ALT1EN &lt;chr&gt; NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA,…\n$ ADM1ALT2EN &lt;chr&gt; NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA,…\n$ ADM1ALT1TH &lt;chr&gt; NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA,…\n$ ADM1ALT2TH &lt;chr&gt; NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA,…\n$ ADM0_EN    &lt;chr&gt; \"Thailand\", \"Thailand\", \"Thailand\", \"Thailand\", \"Thailand\",…\n$ ADM0_TH    &lt;chr&gt; \"ประเทศไทย\", \"ประเทศไทย\", \"ประเทศไทย\", \"ประเทศไทย\", \"ประเทศ…\n$ ADM0_PCODE &lt;chr&gt; \"TH\", \"TH\", \"TH\", \"TH\", \"TH\", \"TH\", \"TH\", \"TH\", \"TH\", \"TH\",…\n$ date       &lt;date&gt; 2019-02-18, 2019-02-18, 2019-02-18, 2019-02-18, 2019-02-18…\n$ validOn    &lt;date&gt; 2022-01-22, 2022-01-22, 2022-01-22, 2022-01-22, 2022-01-22…\n$ validTo    &lt;date&gt; -001-11-30, -001-11-30, -001-11-30, -001-11-30, -001-11-30…\n$ geometry   &lt;MULTIPOLYGON [°]&gt; MULTIPOLYGON (((100.6139 13..., MULTIPOLYGON (…\n\n# Visualize the boundaries\nplot(st_geometry(th_bound_l1))\n\n\n\n\n\n\n\n\n\n\n\n# Load Thailand Province from HDX\nth_bound_l2 &lt;- st_read(dsn = \"data/tha_adm_rtsd_itos_20210121_shp/\", layer = \"tha_admbnda_adm2_rtsd_20220121\") \n\nReading layer `tha_admbnda_adm2_rtsd_20220121' from data source \n  `C:\\Users\\Henry\\Desktop\\SMU Masters\\2024-2025 T1\\Geospatial Analytics & Applications\\Project\\GeospatialWebsite\\Take-Home_Ex\\Take-Home_Ex_01\\data\\tha_adm_rtsd_itos_20210121_shp' \n  using driver `ESRI Shapefile'\nSimple feature collection with 928 features and 19 fields\nGeometry type: MULTIPOLYGON\nDimension:     XY\nBounding box:  xmin: 97.34336 ymin: 5.613038 xmax: 105.637 ymax: 20.46507\nGeodetic CRS:  WGS 84\n\nglimpse(th_bound_l2)\n\nRows: 928\nColumns: 20\n$ Shape_Leng &lt;dbl&gt; 0.08541733, 0.13413177, 0.67634217, 0.08588647, 0.30172202,…\n$ Shape_Area &lt;dbl&gt; 0.0004504685, 0.0009501914, 0.0198588627, 0.0003369561, 0.0…\n$ ADM2_EN    &lt;chr&gt; \"Phra Nakhon\", \"Dusit\", \"Nong Chok\", \"Bang Rak\", \"Bang Khen…\n$ ADM2_TH    &lt;chr&gt; \"พระนคร\", \"ดุสิต\", \"หนองจอก\", \"บางรัก\", \"บางเขน\", \"บางกะปิ\", \"ป…\n$ ADM2_PCODE &lt;chr&gt; \"TH1001\", \"TH1002\", \"TH1003\", \"TH1004\", \"TH1005\", \"TH1006\",…\n$ ADM2_REF   &lt;chr&gt; NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA,…\n$ ADM2ALT1EN &lt;chr&gt; NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA,…\n$ ADM2ALT2EN &lt;chr&gt; NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA,…\n$ ADM2ALT1TH &lt;chr&gt; NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA,…\n$ ADM2ALT2TH &lt;chr&gt; NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA,…\n$ ADM1_EN    &lt;chr&gt; \"Bangkok\", \"Bangkok\", \"Bangkok\", \"Bangkok\", \"Bangkok\", \"Ban…\n$ ADM1_TH    &lt;chr&gt; \"กรุงเทพมหานคร\", \"กรุงเทพมหานคร\", \"กรุงเทพมหานคร\", \"กรุงเทพมหาน…\n$ ADM1_PCODE &lt;chr&gt; \"TH10\", \"TH10\", \"TH10\", \"TH10\", \"TH10\", \"TH10\", \"TH10\", \"TH…\n$ ADM0_EN    &lt;chr&gt; \"Thailand\", \"Thailand\", \"Thailand\", \"Thailand\", \"Thailand\",…\n$ ADM0_TH    &lt;chr&gt; \"ประเทศไทย\", \"ประเทศไทย\", \"ประเทศไทย\", \"ประเทศไทย\", \"ประเทศ…\n$ ADM0_PCODE &lt;chr&gt; \"TH\", \"TH\", \"TH\", \"TH\", \"TH\", \"TH\", \"TH\", \"TH\", \"TH\", \"TH\",…\n$ date       &lt;date&gt; 2019-02-18, 2019-02-18, 2019-02-18, 2019-02-18, 2019-02-18…\n$ validOn    &lt;date&gt; 2022-01-22, 2022-01-22, 2022-01-22, 2022-01-22, 2022-01-22…\n$ validTo    &lt;date&gt; -001-11-30, -001-11-30, -001-11-30, -001-11-30, -001-11-30…\n$ geometry   &lt;MULTIPOLYGON [°]&gt; MULTIPOLYGON (((100.5007 13..., MULTIPOLYGON (…\n\n# Visualize the boundaries\nplot(st_geometry(th_bound_l2))\n\n\n\n\n\n\n\n\n\n\n\n# Load Thailand Province from HDX\nth_bound_l3 &lt;- st_read(dsn = \"data/tha_adm_rtsd_itos_20210121_shp/\", layer = \"tha_admbnda_adm3_rtsd_20220121\") \n\nReading layer `tha_admbnda_adm3_rtsd_20220121' from data source \n  `C:\\Users\\Henry\\Desktop\\SMU Masters\\2024-2025 T1\\Geospatial Analytics & Applications\\Project\\GeospatialWebsite\\Take-Home_Ex\\Take-Home_Ex_01\\data\\tha_adm_rtsd_itos_20210121_shp' \n  using driver `ESRI Shapefile'\nSimple feature collection with 7425 features and 22 fields\nGeometry type: MULTIPOLYGON\nDimension:     XY\nBounding box:  xmin: 97.34336 ymin: 5.613038 xmax: 105.637 ymax: 20.46507\nGeodetic CRS:  WGS 84\n\nglimpse(th_bound_l3)\n\nRows: 7,425\nColumns: 23\n$ Shape_Leng &lt;dbl&gt; 0.04769920, 0.03355050, 0.01728931, 0.01904576, 0.01523190,…\n$ Shape_Area &lt;dbl&gt; 1.284175e-04, 6.068479e-05, 1.769761e-05, 1.920433e-05, 1.2…\n$ ADM3_EN    &lt;chr&gt; \"Phraborom Maharatchawang\", \"Wang Burapha Phirom\", \"Wat Rat…\n$ ADM3_TH    &lt;chr&gt; \"พระบรมมหาราชวัง\", \"วังบูรพาภิรมย์\", \"วัดราชบพิธ\", \"สำราญราษฎร์\", \"…\n$ ADM3_PCODE &lt;chr&gt; \"TH100101\", \"TH100102\", \"TH100103\", \"TH100104\", \"TH100105\",…\n$ ADM3_REF   &lt;chr&gt; NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA,…\n$ ADM3ALT1EN &lt;chr&gt; NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA,…\n$ ADM3ALT2EN &lt;chr&gt; NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA,…\n$ ADM3ALT1TH &lt;chr&gt; NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA,…\n$ ADM3ALT2TH &lt;chr&gt; NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA,…\n$ ADM2_EN    &lt;chr&gt; \"Phra Nakhon\", \"Phra Nakhon\", \"Phra Nakhon\", \"Phra Nakhon\",…\n$ ADM2_TH    &lt;chr&gt; \"พระนคร\", \"พระนคร\", \"พระนคร\", \"พระนคร\", \"พระนคร\", \"พระนคร\",…\n$ ADM2_PCODE &lt;chr&gt; \"TH1001\", \"TH1001\", \"TH1001\", \"TH1001\", \"TH1001\", \"TH1001\",…\n$ ADM1_EN    &lt;chr&gt; \"Bangkok\", \"Bangkok\", \"Bangkok\", \"Bangkok\", \"Bangkok\", \"Ban…\n$ ADM1_TH    &lt;chr&gt; \"กรุงเทพมหานคร\", \"กรุงเทพมหานคร\", \"กรุงเทพมหานคร\", \"กรุงเทพมหาน…\n$ ADM1_PCODE &lt;chr&gt; \"TH10\", \"TH10\", \"TH10\", \"TH10\", \"TH10\", \"TH10\", \"TH10\", \"TH…\n$ ADM0_EN    &lt;chr&gt; \"Thailand\", \"Thailand\", \"Thailand\", \"Thailand\", \"Thailand\",…\n$ ADM0_TH    &lt;chr&gt; \"ประเทศไทย\", \"ประเทศไทย\", \"ประเทศไทย\", \"ประเทศไทย\", \"ประเทศ…\n$ ADM0_PCODE &lt;chr&gt; \"TH\", \"TH\", \"TH\", \"TH\", \"TH\", \"TH\", \"TH\", \"TH\", \"TH\", \"TH\",…\n$ date       &lt;date&gt; 2019-02-18, 2019-02-18, 2019-02-18, 2019-02-18, 2019-02-18…\n$ validOn    &lt;date&gt; 2022-01-22, 2022-01-22, 2022-01-22, 2022-01-22, 2022-01-22…\n$ validTo    &lt;date&gt; -001-11-30, -001-11-30, -001-11-30, -001-11-30, -001-11-30…\n$ geometry   &lt;MULTIPOLYGON [°]&gt; MULTIPOLYGON (((100.4945 13..., MULTIPOLYGON (…\n\n# Visualize the boundaries\nplot(st_geometry(th_bound_l3))\n\n\n\n\n\n\n\n\n\n\n\n\n\n1.2.4 Basic Preprocessing\nFrom a quick look of the various datasets, it is clear that preprocessing is required in order to filter the datasets to:\n1. Focus on the study area (Bangkok Metropolitan Region)\n2. Work with smaller data to better manage R session memory handling\nOther geospatial preprocessing steps will also be taken accordingly. Once done, these datasets will be saved as RDS files for easy retrieval.\n\n1.2.4.1 Processing Thailand Road Accident\nThe Thailand road accident dataset will be processed to: - remove blanks/na from longitude/latitude (mitigate errors when converting into sf object) - filtered to Bangkok Metropolitan Region - convert tibble dataframe to sf dataframe - project to Thailand coordinate reference system for alignment and visualization\n\n# Transform Thailand Road Accident data\nra_tbl_flt &lt;- ra_tbl %&gt;%\n  filter(!is.na(longitude) & longitude != \"\", !is.na(latitude) & latitude != \"\") %&gt;%\n  filter(province_en %in% c(\"Bangkok\", \"Nonthaburi\", \"Pathum Thani\", \n                              \"Samut Prakan\", \"Samut Sakhon\", \"Nakhon Pathom\")) %&gt;%\n  st_as_sf(coords = c(\"longitude\", \"latitude\"), crs = 4326) %&gt;%\n  st_transform(crs = 32647)\n\n# Check for duplicates\nany(duplicated(st_coordinates(ra_tbl_flt)))\n\n[1] TRUE\n\n\nSince there are duplicates, as this may affect further analysis, st_jitter of sf will be used\n\nra_tbl_flt_jittered &lt;- st_jitter(ra_tbl_flt, amount = 0.1)\n\nThe processed data is then exported as RDS.\n\n# Export to processed sub-folder as RDS\nwrite_rds(ra_tbl_flt_jittered, 'data/processed/th_acc.rds')\n\n\n\n1.2.4.2 Processing Thailand Subnational Administrative Boundaries\nWhile level 1 was sufficient to filter the boundary to the study area, level 3 was selected for the flexibility purposes.\nThe level 3 Thailand Subnational Administrative Boundaries will be processed based to: - filtered to Bangkok Metropolitan Region - project to Thailand coordinate reference system for alignment and visualization\n\n# Filter Thai boundary for only Bangkok Metropolitan Region\nth_bound_l3_flt &lt;- th_bound_l3 %&gt;%\n  filter(ADM1_EN %in% c(\"Bangkok\", \"Nonthaburi\", \"Pathum Thani\", \n                              \"Samut Prakan\", \"Samut Sakhon\", \"Nakhon Pathom\"))%&gt;%\n  st_transform(crs = 32647) \n\nglimpse(th_bound_l3_flt)\n\nRows: 477\nColumns: 23\n$ Shape_Leng &lt;dbl&gt; 0.04769920, 0.03355050, 0.01728931, 0.01904576, 0.01523190,…\n$ Shape_Area &lt;dbl&gt; 1.284175e-04, 6.068479e-05, 1.769761e-05, 1.920433e-05, 1.2…\n$ ADM3_EN    &lt;chr&gt; \"Phraborom Maharatchawang\", \"Wang Burapha Phirom\", \"Wat Rat…\n$ ADM3_TH    &lt;chr&gt; \"พระบรมมหาราชวัง\", \"วังบูรพาภิรมย์\", \"วัดราชบพิธ\", \"สำราญราษฎร์\", \"…\n$ ADM3_PCODE &lt;chr&gt; \"TH100101\", \"TH100102\", \"TH100103\", \"TH100104\", \"TH100105\",…\n$ ADM3_REF   &lt;chr&gt; NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA,…\n$ ADM3ALT1EN &lt;chr&gt; NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA,…\n$ ADM3ALT2EN &lt;chr&gt; NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA,…\n$ ADM3ALT1TH &lt;chr&gt; NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA,…\n$ ADM3ALT2TH &lt;chr&gt; NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA,…\n$ ADM2_EN    &lt;chr&gt; \"Phra Nakhon\", \"Phra Nakhon\", \"Phra Nakhon\", \"Phra Nakhon\",…\n$ ADM2_TH    &lt;chr&gt; \"พระนคร\", \"พระนคร\", \"พระนคร\", \"พระนคร\", \"พระนคร\", \"พระนคร\",…\n$ ADM2_PCODE &lt;chr&gt; \"TH1001\", \"TH1001\", \"TH1001\", \"TH1001\", \"TH1001\", \"TH1001\",…\n$ ADM1_EN    &lt;chr&gt; \"Bangkok\", \"Bangkok\", \"Bangkok\", \"Bangkok\", \"Bangkok\", \"Ban…\n$ ADM1_TH    &lt;chr&gt; \"กรุงเทพมหานคร\", \"กรุงเทพมหานคร\", \"กรุงเทพมหานคร\", \"กรุงเทพมหาน…\n$ ADM1_PCODE &lt;chr&gt; \"TH10\", \"TH10\", \"TH10\", \"TH10\", \"TH10\", \"TH10\", \"TH10\", \"TH…\n$ ADM0_EN    &lt;chr&gt; \"Thailand\", \"Thailand\", \"Thailand\", \"Thailand\", \"Thailand\",…\n$ ADM0_TH    &lt;chr&gt; \"ประเทศไทย\", \"ประเทศไทย\", \"ประเทศไทย\", \"ประเทศไทย\", \"ประเทศ…\n$ ADM0_PCODE &lt;chr&gt; \"TH\", \"TH\", \"TH\", \"TH\", \"TH\", \"TH\", \"TH\", \"TH\", \"TH\", \"TH\",…\n$ date       &lt;date&gt; 2019-02-18, 2019-02-18, 2019-02-18, 2019-02-18, 2019-02-18…\n$ validOn    &lt;date&gt; 2022-01-22, 2022-01-22, 2022-01-22, 2022-01-22, 2022-01-22…\n$ validTo    &lt;date&gt; -001-11-30, -001-11-30, -001-11-30, -001-11-30, -001-11-30…\n$ geometry   &lt;MULTIPOLYGON [m]&gt; MULTIPOLYGON (((661579 1521..., MULTIPOLYGON (…\n\n\nThe processed data is again exported as RDS.\n\n# Export to processed sub-folder as RDS\nwrite_rds(th_bound_l3_flt, 'data/processed/th_bound_l3.rds')\n\n\n\n1.2.4.1 Processing Thailand Openstreet Map Data\nGiven the large openstreet map dataset (~2.7m objects), the dataset needs to be filtered prior to performing st_intersects.\nThis will be done by selecting the relevant highway attributes. Relevant highway attributes are defined following the default access restrictions based on the Road Traffic Act, 1979 for various different vehicle types.\n\n# Check types of highway in Openstreet Map data\ntable(ra_tbl_flt$vehicle_type)\n\n\n        4-wheel pickup truck                6-wheel truck \n                        3522                          472 \n            7-10-wheel truck                      bicycle \n                         389                           18 \n     large passenger vehicle     large truck with trailer \n                          76                          998 \n                  motorcycle           motorized tricycle \n                        1687                           14 \n                       other       passenger pickup truck \n                        1088                           63 \n                  pedestrian        private/passenger car \n                          18                         4486 \ntractor/agricultural vehicle                          van \n                           1                          154 \n\n\n\n# Check types of highway in Openstreet Map data\ntable(th_road$highway)\n\n\n     abandoned        barrier      bridleway         busway   construction \n             5              1              6             35           1008 \n      corridor       cycleway         escape        footway  living_street \n            77            961              3          55110             35 \n      motorway  motorway_link          parth           path          paved \n          2330           2122              1          26824              1 \n    pedestrian        primary   primary_link       proposed        raceway \n           847          15026           6690             17             53 \n   residential           road      secondary secondary_link        service \n       1323154            730          26754           5063         896514 \n         steps       tertiary  tertiary_link          track          trunk \n          5330          34507           1371         254299          14433 \n    trunk_link   unclassified \n          9304         109979 \n\n\nGiven that accidents involving pedestrian and bicycle etc are proportionately smaller than those involving motorcar and motorcycle, the openstreet map data will be filtered to include relevant highway attribute for the latter vehicle types. Residental is additionally excluded for computation efficiency (large number of residential objects) and the less influential nature of the attribute (road within a residential area that gives the public access to one or multiple residences).\n\n# Filter Thai Openstreet Map data by highway types \nth_road_flt &lt;- th_road %&gt;%\n  filter(highway %in% c('motorway', 'trunk', 'primary', 'secondary', 'tertiary', 'unclassified',  # Roads\n                        'motorway_link', 'trunk_link', 'primary_link', 'secondary_link', 'tertiary_link',  # Link Roads\n                        'living_street', 'road', 'path'\n                        ) \n         ) %&gt;%\n  st_set_crs(., 4326) %&gt;%\n  st_transform(crs = 32647) \nglimpse(th_road_flt)\n\nRows: 255,168\nColumns: 15\n$ name       &lt;chr&gt; \"ถนนฉลองกรุง\", NA, \"ถนนฉลองกรุง\", \"ถนนเอราวัณ 1\", NA, NA, NA, …\n$ name_en    &lt;chr&gt; \"Chalong Krung Road\", NA, \"Chalong Krung Road\", \"Erawan 1 R…\n$ highway    &lt;chr&gt; \"secondary\", \"secondary_link\", \"secondary\", \"tertiary\", \"pa…\n$ surface    &lt;chr&gt; \"paved\", NA, \"concrete\", NA, \"unpaved\", \"unpaved\", NA, NA, …\n$ smoothness &lt;chr&gt; NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA,…\n$ width      &lt;chr&gt; NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, \"4\", NA, NA, NA, NA…\n$ lanes      &lt;chr&gt; NA, NA, \"2\", NA, NA, NA, NA, NA, \"1\", \"1\", \"1\", NA, NA, NA,…\n$ oneway     &lt;chr&gt; \"yes\", \"yes\", \"yes\", NA, NA, NA, NA, NA, NA, NA, NA, NA, NA…\n$ bridge     &lt;chr&gt; NA, NA, \"yes\", NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, …\n$ layer      &lt;chr&gt; NA, NA, \"1\", NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA…\n$ source     &lt;chr&gt; NA, NA, \"Bing\", NA, \"GPS\", \"GPS\", NA, NA, NA, \"survey\", \"di…\n$ name_th    &lt;chr&gt; \"ถนนฉลองกรุง\", NA, \"ถนนฉลองกรุง\", \"ถนนเอราวัณ 1\", NA, NA, NA, …\n$ osm_id     &lt;dbl&gt; 1125681229, 472283206, 116847248, 378672881, 1238351123, 12…\n$ osm_type   &lt;chr&gt; \"ways_line\", \"ways_line\", \"ways_line\", \"ways_line\", \"ways_l…\n$ geometry   &lt;MULTILINESTRING [m]&gt; MULTILINESTRING ((693686.1 ..., MULTILINEST…\n\n\nst_intersects is then used to return openstreet map objects that are within the study area.\n\n# # Use st_union to get overall study area boundary\nth_bound_union &lt;- th_bound_l3_flt %&gt;%\n  st_union()\n\n# Use st_intersects to get roads within the study area\nth_roads_intersects &lt;- st_intersects(th_road_flt, th_bound_union)\n\n# Get index mask of roads objects that intersects with study area \nroads_logical &lt;- lengths(th_roads_intersects) &gt; 0\n# Filter openstreet map with the index mask\nth_roads_bmr &lt;- th_road_flt[roads_logical, ]\n\n\nglimpse(th_roads_bmr)\n\nRows: 36,472\nColumns: 15\n$ name       &lt;chr&gt; \"ถนนฉลองกรุง\", NA, \"ถนนฉลองกรุง\", \"ถนนเอราวัณ 1\", \"ถนนลำลูกกา\",…\n$ name_en    &lt;chr&gt; \"Chalong Krung Road\", NA, \"Chalong Krung Road\", \"Erawan 1 R…\n$ highway    &lt;chr&gt; \"secondary\", \"secondary_link\", \"secondary\", \"tertiary\", \"se…\n$ surface    &lt;chr&gt; \"paved\", NA, \"concrete\", NA, NA, NA, NA, NA, \"asphalt\", NA,…\n$ smoothness &lt;chr&gt; NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA,…\n$ width      &lt;chr&gt; NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA,…\n$ lanes      &lt;chr&gt; NA, NA, \"2\", NA, \"3\", \"3\", \"3\", \"3\", \"3\", NA, NA, NA, NA, N…\n$ oneway     &lt;chr&gt; \"yes\", \"yes\", \"yes\", NA, \"yes\", \"yes\", \"yes\", \"yes\", \"yes\",…\n$ bridge     &lt;chr&gt; NA, NA, \"yes\", NA, NA, NA, NA, NA, NA, NA, NA, \"yes\", NA, N…\n$ layer      &lt;chr&gt; NA, NA, \"1\", NA, NA, NA, NA, NA, NA, NA, NA, \"1\", NA, NA, N…\n$ source     &lt;chr&gt; NA, NA, \"Bing\", NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, \"Bi…\n$ name_th    &lt;chr&gt; \"ถนนฉลองกรุง\", NA, \"ถนนฉลองกรุง\", \"ถนนเอราวัณ 1\", \"ถนนลำลูกกา\",…\n$ osm_id     &lt;dbl&gt; 1125681229, 472283206, 116847248, 378672881, 1312138113, 13…\n$ osm_type   &lt;chr&gt; \"ways_line\", \"ways_line\", \"ways_line\", \"ways_line\", \"ways_l…\n$ geometry   &lt;MULTILINESTRING [m]&gt; MULTILINESTRING ((693686.1 ..., MULTILINEST…\n\n\n\nBangkokNonthaburiPathum ThaniSamut PrakanSamut SakhonNakhon Pathom\n\n\n\n# Use st_union to get Bangkok boundary\nbk_bound_union &lt;- th_bound_l3_flt  %&gt;%\n  filter(ADM1_EN == \"Bangkok\") %&gt;%\n  st_union()\n\n# Use st_intersects to get roads within Bangkok\nbk_roads_intersects &lt;- st_intersects(th_road_flt, bk_bound_union)\n\n# Get index mask of roads objects that intersects with Bangkok\nroads_logical_bk &lt;- lengths(bk_roads_intersects) &gt; 0\n# Filter openstreet map with the index mask\nth_roads_bk &lt;- th_road_flt[roads_logical_bk, ]\n\n\n\n\n# Use st_union to get Nonthaburi boundary\nntb_bound_union &lt;- th_bound_l3_flt  %&gt;%\n  filter(ADM1_EN == \"Nonthaburi\") %&gt;%\n  st_union()\n\n# Use st_intersects to get roads within Nonthaburi\nntb_roads_intersects &lt;- st_intersects(th_road_flt, ntb_bound_union)\n\n# Get index mask of roads objects that intersects with Nonthaburi\nroads_logical_ntb &lt;- lengths(ntb_roads_intersects) &gt; 0\n# Filter openstreet map with the index mask\nth_roads_ntb &lt;- th_road_flt[roads_logical_ntb, ]\n\n\n\n\n# Use st_union to get Pathum Thani boundary\npt_bound_union &lt;- th_bound_l3_flt  %&gt;%\n  filter(ADM1_EN == \"Pathum Thani\") %&gt;%\n  st_union()\n\n# Use st_intersects to get roads within Pathum Thani\npt_roads_intersects &lt;- st_intersects(th_road_flt, pt_bound_union)\n\n# Get index mask of roads objects that intersects with Pathum Thani\nroads_logical_pt &lt;- lengths(pt_roads_intersects) &gt; 0\n# Filter openstreet map with the index mask\nth_roads_pt &lt;- th_road_flt[roads_logical_pt, ]\n\n\n\n\n# Use st_union to get Samut Prakan boundary\nsp_bound_union &lt;- th_bound_l3_flt  %&gt;%\n  filter(ADM1_EN == \"Samut Prakan\") %&gt;%\n  st_union()\n\n# Use st_intersects to get roads within Samut Prakan\nsp_roads_intersects &lt;- st_intersects(th_road_flt, sp_bound_union)\n\n# Get index mask of roads objects that intersects with Samut Prakan\nroads_logical_sp &lt;- lengths(sp_roads_intersects) &gt; 0\n# Filter openstreet map with the index mask\nth_roads_sp &lt;- th_road_flt[roads_logical_sp, ]\n\n\n\n\n# Use st_union to get Samut Sakhon boundary\nss_bound_union &lt;- th_bound_l3_flt  %&gt;%\n  filter(ADM1_EN == \"Samut Sakhon\") %&gt;%\n  st_union()\n\n# Use st_intersects to get roads within Samut Sakhon\nss_roads_intersects &lt;- st_intersects(th_road_flt, ss_bound_union)\n\n# Get index mask of roads objects that intersects with Samut Sakhon\nroads_logical_ss &lt;- lengths(ss_roads_intersects) &gt; 0\n# Filter openstreet map with the index mask\nth_roads_ss &lt;- th_road_flt[roads_logical_ss, ]\n\n\n\n\n# Use st_union to get Nakhon Pathom boundary\nnp_bound_union &lt;- th_bound_l3_flt  %&gt;%\n  filter(ADM1_EN == \"Nakhon Pathom\") %&gt;%\n  st_union()\n\n# Use st_intersects to get roads within Nakhon Pathom\nnp_roads_intersects &lt;- st_intersects(th_road_flt, np_bound_union)\n\n# Get index mask of roads objects that intersects with Nakhon Pathom\nroads_logical_np &lt;- lengths(np_roads_intersects) &gt; 0\n# Filter openstreet map with the index mask\nth_roads_np &lt;- th_road_flt[roads_logical_np, ]\n\n\n\n\nThe processed openstreet map dataset is then exported in a similar fashion\n\n# Export to processed sub-folder as RDS\nwrite_rds(th_roads_bmr, 'data/processed/th_osm.rds')\n\n# Bangkok\nwrite_rds(th_roads_bk, 'data/processed/th_osm_bk.rds')\n\n# Nonthaburi\nwrite_rds(th_roads_ntb, 'data/processed/th_osm_ntb.rds')\n\n# Pathum Thani\nwrite_rds(th_roads_pt, 'data/processed/th_osm_pt.rds')\n\n# Samut Prakan\nwrite_rds(th_roads_sp, 'data/processed/th_osm_sp.rds')\n\n# Samut Sakhon\nwrite_rds(th_roads_ss, 'data/processed/th_osm_ss.rds')\n\n# Nakhon Pathom\nwrite_rds(th_roads_np, 'data/processed/th_osm_np.rds')"
  },
  {
    "objectID": "Hands-On_Ex/Hands-On_Ex_04/Hands-On_Ex04.html#setting-up",
    "href": "Hands-On_Ex/Hands-On_Ex_04/Hands-On_Ex04.html#setting-up",
    "title": "Hands-On Exercise 04",
    "section": "8.1 Setting Up",
    "text": "8.1 Setting Up\n\n8.1.1 Loading the R packages\n\npacman::p_load(sf, spdep, tmap, tidyverse, knitr)\n\n\n\n8.1.2 Importing spatial data\n\nHunan ShapefileHunan 2012\n\n\n\n# Load shapefile\nhunan &lt;- st_read(dsn = \"data/geospatial\", layer = \"Hunan\")\n\nReading layer `Hunan' from data source \n  `C:\\Users\\Henry\\Desktop\\SMU Masters\\2024-2025 T1\\Geospatial Analytics & Applications\\Project\\GeospatialWebsite\\Hands-On_Ex\\Hands-On_Ex_04\\data\\geospatial' \n  using driver `ESRI Shapefile'\nSimple feature collection with 88 features and 7 fields\nGeometry type: POLYGON\nDimension:     XY\nBounding box:  xmin: 108.7831 ymin: 24.6342 xmax: 114.2544 ymax: 30.12812\nGeodetic CRS:  WGS 84\n\n\n\n# Check crs\nst_crs(hunan)\n\nCoordinate Reference System:\n  User input: WGS 84 \n  wkt:\nGEOGCRS[\"WGS 84\",\n    DATUM[\"World Geodetic System 1984\",\n        ELLIPSOID[\"WGS 84\",6378137,298.257223563,\n            LENGTHUNIT[\"metre\",1]]],\n    PRIMEM[\"Greenwich\",0,\n        ANGLEUNIT[\"degree\",0.0174532925199433]],\n    CS[ellipsoidal,2],\n        AXIS[\"latitude\",north,\n            ORDER[1],\n            ANGLEUNIT[\"degree\",0.0174532925199433]],\n        AXIS[\"longitude\",east,\n            ORDER[2],\n            ANGLEUNIT[\"degree\",0.0174532925199433]],\n    ID[\"EPSG\",4326]]\n\n\n\n# Check crs\nglimpse(hunan)\n\nRows: 88\nColumns: 8\n$ NAME_2     &lt;chr&gt; \"Changde\", \"Changde\", \"Changde\", \"Changde\", \"Changde\", \"Cha…\n$ ID_3       &lt;int&gt; 21098, 21100, 21101, 21102, 21103, 21104, 21109, 21110, 211…\n$ NAME_3     &lt;chr&gt; \"Anxiang\", \"Hanshou\", \"Jinshi\", \"Li\", \"Linli\", \"Shimen\", \"L…\n$ ENGTYPE_3  &lt;chr&gt; \"County\", \"County\", \"County City\", \"County\", \"County\", \"Cou…\n$ Shape_Leng &lt;dbl&gt; 1.869074, 2.360691, 1.425620, 3.474325, 2.289506, 4.171918,…\n$ Shape_Area &lt;dbl&gt; 0.10056190, 0.19978745, 0.05302413, 0.18908121, 0.11450357,…\n$ County     &lt;chr&gt; \"Anxiang\", \"Hanshou\", \"Jinshi\", \"Li\", \"Linli\", \"Shimen\", \"L…\n$ geometry   &lt;POLYGON [°]&gt; POLYGON ((112.0625 29.75523..., POLYGON ((112.2288 …\n\n\n\n\n\n# Load csv file\nhunan2012 &lt;- read_csv(\"data/aspatial/Hunan_2012.csv\")\n\nRows: 88 Columns: 29\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr  (2): County, City\ndbl (27): avg_wage, deposite, FAI, Gov_Rev, Gov_Exp, GDP, GDPPC, GIO, Loan, ...\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\n\n\n# Check file\nglimpse(hunan2012)\n\nRows: 88\nColumns: 29\n$ County      &lt;chr&gt; \"Anhua\", \"Anren\", \"Anxiang\", \"Baojing\", \"Chaling\", \"Changn…\n$ City        &lt;chr&gt; \"Yiyang\", \"Chenzhou\", \"Changde\", \"Hunan West\", \"Zhuzhou\", …\n$ avg_wage    &lt;dbl&gt; 30544, 28058, 31935, 30843, 31251, 28518, 54540, 28597, 33…\n$ deposite    &lt;dbl&gt; 10967.0, 4598.9, 5517.2, 2250.0, 8241.4, 10860.0, 24332.0,…\n$ FAI         &lt;dbl&gt; 6831.7, 6386.1, 3541.0, 1005.4, 6508.4, 7920.0, 33624.0, 1…\n$ Gov_Rev     &lt;dbl&gt; 456.72, 220.57, 243.64, 192.59, 620.19, 769.86, 5350.00, 1…\n$ Gov_Exp     &lt;dbl&gt; 2703.0, 1454.7, 1779.5, 1379.1, 1947.0, 2631.6, 7885.5, 11…\n$ GDP         &lt;dbl&gt; 13225.0, 4941.2, 12482.0, 4087.9, 11585.0, 19886.0, 88009.…\n$ GDPPC       &lt;dbl&gt; 14567, 12761, 23667, 14563, 20078, 24418, 88656, 10132, 17…\n$ GIO         &lt;dbl&gt; 9276.90, 4189.20, 5108.90, 3623.50, 9157.70, 37392.00, 513…\n$ Loan        &lt;dbl&gt; 3954.90, 2555.30, 2806.90, 1253.70, 4287.40, 4242.80, 4053…\n$ NIPCR       &lt;dbl&gt; 3528.3, 3271.8, 7693.7, 4191.3, 3887.7, 9528.0, 17070.0, 3…\n$ Bed         &lt;dbl&gt; 2718, 970, 1931, 927, 1449, 3605, 3310, 582, 2170, 2179, 1…\n$ Emp         &lt;dbl&gt; 494.310, 290.820, 336.390, 195.170, 330.290, 548.610, 670.…\n$ EmpR        &lt;dbl&gt; 441.4, 255.4, 270.5, 145.6, 299.0, 415.1, 452.0, 127.6, 21…\n$ EmpRT       &lt;dbl&gt; 338.0, 99.4, 205.9, 116.4, 154.0, 273.7, 219.4, 94.4, 174.…\n$ Pri_Stu     &lt;dbl&gt; 54.175, 33.171, 19.584, 19.249, 33.906, 81.831, 59.151, 18…\n$ Sec_Stu     &lt;dbl&gt; 32.830, 17.505, 17.819, 11.831, 20.548, 44.485, 39.685, 7.…\n$ Household   &lt;dbl&gt; 290.4, 104.6, 148.1, 73.2, 148.7, 211.2, 300.3, 76.1, 139.…\n$ Household_R &lt;dbl&gt; 234.5, 121.9, 135.4, 69.9, 139.4, 211.7, 248.4, 59.6, 110.…\n$ NOIP        &lt;dbl&gt; 101, 34, 53, 18, 106, 115, 214, 17, 55, 70, 44, 84, 74, 17…\n$ Pop_R       &lt;dbl&gt; 670.3, 243.2, 346.0, 184.1, 301.6, 448.2, 475.1, 189.6, 31…\n$ RSCG        &lt;dbl&gt; 5760.60, 2386.40, 3957.90, 768.04, 4009.50, 5220.40, 22604…\n$ Pop_T       &lt;dbl&gt; 910.8, 388.7, 528.3, 281.3, 578.4, 816.3, 998.6, 256.7, 45…\n$ Agri        &lt;dbl&gt; 4942.253, 2357.764, 4524.410, 1118.561, 3793.550, 6430.782…\n$ Service     &lt;dbl&gt; 5414.5, 3814.1, 14100.0, 541.8, 5444.0, 13074.6, 17726.6, …\n$ Disp_Inc    &lt;dbl&gt; 12373, 16072, 16610, 13455, 20461, 20868, 183252, 12379, 1…\n$ RORP        &lt;dbl&gt; 0.7359464, 0.6256753, 0.6549309, 0.6544614, 0.5214385, 0.5…\n$ ROREmp      &lt;dbl&gt; 0.8929619, 0.8782065, 0.8041262, 0.7460163, 0.9052651, 0.7…\n\n\n\n\n\n\n\n8.1.3 Merging both datasets\nBoth datasets have the common field “County”\n\nhunan &lt;- left_join(hunan, hunan2012, by = \"County\") %&gt;%\n  # select(1:4, 7, 15)\n  select(`NAME_2`, `ID_3`, `NAME_3`, `ENGTYPE_3`, `County`, `GDPPC`, `geometry`) # Using Column names for readability\n# See result\nglimpse(hunan)\n\nRows: 88\nColumns: 7\n$ NAME_2    &lt;chr&gt; \"Changde\", \"Changde\", \"Changde\", \"Changde\", \"Changde\", \"Chan…\n$ ID_3      &lt;int&gt; 21098, 21100, 21101, 21102, 21103, 21104, 21109, 21110, 2111…\n$ NAME_3    &lt;chr&gt; \"Anxiang\", \"Hanshou\", \"Jinshi\", \"Li\", \"Linli\", \"Shimen\", \"Li…\n$ ENGTYPE_3 &lt;chr&gt; \"County\", \"County\", \"County City\", \"County\", \"County\", \"Coun…\n$ County    &lt;chr&gt; \"Anxiang\", \"Hanshou\", \"Jinshi\", \"Li\", \"Linli\", \"Shimen\", \"Li…\n$ GDPPC     &lt;dbl&gt; 23667, 20981, 34592, 24473, 25554, 27137, 63118, 62202, 7066…\n$ geometry  &lt;POLYGON [°]&gt; POLYGON ((112.0625 29.75523..., POLYGON ((112.2288 2…"
  },
  {
    "objectID": "Hands-On_Ex/Hands-On_Ex_04/Hands-On_Ex04.html#exploratory-visualization",
    "href": "Hands-On_Ex/Hands-On_Ex_04/Hands-On_Ex04.html#exploratory-visualization",
    "title": "Hands-On Exercise 04",
    "section": "8.2 Exploratory Visualization",
    "text": "8.2 Exploratory Visualization\n\ntmap_mode(\"plot\")\n\ntmap mode set to plotting\n\nbasemap &lt;- tm_shape(hunan) +\n  tm_polygons() +\n  tm_text(\"NAME_3\", size=0.5)\n\ngdppc &lt;- qtm(hunan, \"GDPPC\")  + \n  tm_layout(legend.text.size = 0.5,  # Adjust the size of the legend text\n            legend.title.size = 0.8)    # Adjust the size of the legend title\ntmap_arrange(basemap, gdppc, asp=1, ncol=2)"
  },
  {
    "objectID": "Hands-On_Ex/Hands-On_Ex_04/Hands-On_Ex04.html#compute-contiguity-spatial-weights",
    "href": "Hands-On_Ex/Hands-On_Ex_04/Hands-On_Ex04.html#compute-contiguity-spatial-weights",
    "title": "Hands-On Exercise 04",
    "section": "8.3 Compute Contiguity Spatial Weights",
    "text": "8.3 Compute Contiguity Spatial Weights\nUse ploy2nb() method of spdep package\n\n8.3.1 (QUEEN) contiguity based neighbours\n\n# Compute Queen contiguity weight matrix\nwm_q &lt;- poly2nb(hunan, queen=TRUE)\nsummary(wm_q)\n\nNeighbour list object:\nNumber of regions: 88 \nNumber of nonzero links: 448 \nPercentage nonzero weights: 5.785124 \nAverage number of links: 5.090909 \nLink number distribution:\n\n 1  2  3  4  5  6  7  8  9 11 \n 2  2 12 16 24 14 11  4  2  1 \n2 least connected regions:\n30 65 with 1 link\n1 most connected region:\n85 with 11 links\n\n\n\n# See neighbours for the nth polygon in the object\nn = 1\nwm_q[[n]]\n\n[1]  2  3  4 57 85\n\npaste0(\"Polygon \", n, \" has \", length(wm_q[[n]]), \" neighbours\")\n\n[1] \"Polygon 1 has 5 neighbours\"\n\n\n\n# County name of nth Polygon \nhunan$County[n]\n\n[1] \"Anxiang\"\n\n# County names for neighbouring polygons\nhunan$NAME_3[wm_q[[n]]]\n\n[1] \"Hanshou\" \"Jinshi\"  \"Li\"      \"Nan\"     \"Taoyuan\"\n\n\n\n# GDPPC of the neighbouring countries\nnb1 &lt;- wm_q[[n]]\nnb1 &lt;- hunan$GDPPC[nb1]\nnb1\n\n[1] 20981 34592 24473 21311 22879\n\n\n\n# Complete weight matrix with Queen's method\nstr(wm_q)\n\nList of 88\n $ : int [1:5] 2 3 4 57 85\n $ : int [1:5] 1 57 58 78 85\n $ : int [1:4] 1 4 5 85\n $ : int [1:4] 1 3 5 6\n $ : int [1:4] 3 4 6 85\n $ : int [1:5] 4 5 69 75 85\n $ : int [1:4] 67 71 74 84\n $ : int [1:7] 9 46 47 56 78 80 86\n $ : int [1:6] 8 66 68 78 84 86\n $ : int [1:8] 16 17 19 20 22 70 72 73\n $ : int [1:3] 14 17 72\n $ : int [1:5] 13 60 61 63 83\n $ : int [1:4] 12 15 60 83\n $ : int [1:3] 11 15 17\n $ : int [1:4] 13 14 17 83\n $ : int [1:5] 10 17 22 72 83\n $ : int [1:7] 10 11 14 15 16 72 83\n $ : int [1:5] 20 22 23 77 83\n $ : int [1:6] 10 20 21 73 74 86\n $ : int [1:7] 10 18 19 21 22 23 82\n $ : int [1:5] 19 20 35 82 86\n $ : int [1:5] 10 16 18 20 83\n $ : int [1:7] 18 20 38 41 77 79 82\n $ : int [1:5] 25 28 31 32 54\n $ : int [1:5] 24 28 31 33 81\n $ : int [1:4] 27 33 42 81\n $ : int [1:3] 26 29 42\n $ : int [1:5] 24 25 33 49 54\n $ : int [1:3] 27 37 42\n $ : int 33\n $ : int [1:8] 24 25 32 36 39 40 56 81\n $ : int [1:8] 24 31 50 54 55 56 75 85\n $ : int [1:5] 25 26 28 30 81\n $ : int [1:3] 36 45 80\n $ : int [1:6] 21 41 47 80 82 86\n $ : int [1:6] 31 34 40 45 56 80\n $ : int [1:4] 29 42 43 44\n $ : int [1:4] 23 44 77 79\n $ : int [1:5] 31 40 42 43 81\n $ : int [1:6] 31 36 39 43 45 79\n $ : int [1:6] 23 35 45 79 80 82\n $ : int [1:7] 26 27 29 37 39 43 81\n $ : int [1:6] 37 39 40 42 44 79\n $ : int [1:4] 37 38 43 79\n $ : int [1:6] 34 36 40 41 79 80\n $ : int [1:3] 8 47 86\n $ : int [1:5] 8 35 46 80 86\n $ : int [1:5] 50 51 52 53 55\n $ : int [1:4] 28 51 52 54\n $ : int [1:5] 32 48 52 54 55\n $ : int [1:3] 48 49 52\n $ : int [1:5] 48 49 50 51 54\n $ : int [1:3] 48 55 75\n $ : int [1:6] 24 28 32 49 50 52\n $ : int [1:5] 32 48 50 53 75\n $ : int [1:7] 8 31 32 36 78 80 85\n $ : int [1:6] 1 2 58 64 76 85\n $ : int [1:5] 2 57 68 76 78\n $ : int [1:4] 60 61 87 88\n $ : int [1:4] 12 13 59 61\n $ : int [1:7] 12 59 60 62 63 77 87\n $ : int [1:3] 61 77 87\n $ : int [1:4] 12 61 77 83\n $ : int [1:2] 57 76\n $ : int 76\n $ : int [1:5] 9 67 68 76 84\n $ : int [1:4] 7 66 76 84\n $ : int [1:5] 9 58 66 76 78\n $ : int [1:3] 6 75 85\n $ : int [1:3] 10 72 73\n $ : int [1:3] 7 73 74\n $ : int [1:5] 10 11 16 17 70\n $ : int [1:5] 10 19 70 71 74\n $ : int [1:6] 7 19 71 73 84 86\n $ : int [1:6] 6 32 53 55 69 85\n $ : int [1:7] 57 58 64 65 66 67 68\n $ : int [1:7] 18 23 38 61 62 63 83\n $ : int [1:7] 2 8 9 56 58 68 85\n $ : int [1:7] 23 38 40 41 43 44 45\n $ : int [1:8] 8 34 35 36 41 45 47 56\n $ : int [1:6] 25 26 31 33 39 42\n $ : int [1:5] 20 21 23 35 41\n $ : int [1:9] 12 13 15 16 17 18 22 63 77\n $ : int [1:6] 7 9 66 67 74 86\n $ : int [1:11] 1 2 3 5 6 32 56 57 69 75 ...\n $ : int [1:9] 8 9 19 21 35 46 47 74 84\n $ : int [1:4] 59 61 62 88\n $ : int [1:2] 59 87\n - attr(*, \"class\")= chr \"nb\"\n - attr(*, \"region.id\")= chr [1:88] \"1\" \"2\" \"3\" \"4\" ...\n - attr(*, \"call\")= language poly2nb(pl = hunan, queen = TRUE)\n - attr(*, \"type\")= chr \"queen\"\n - attr(*, \"sym\")= logi TRUE\n\n\n\n\n8.3.2 (ROOK) contiguity based neighbours\n\n# Compute Rook contiguity weight matrix\nwm_r &lt;- poly2nb(hunan, queen=FALSE)\nsummary(wm_r)\n\nNeighbour list object:\nNumber of regions: 88 \nNumber of nonzero links: 440 \nPercentage nonzero weights: 5.681818 \nAverage number of links: 5 \nLink number distribution:\n\n 1  2  3  4  5  6  7  8  9 10 \n 2  2 12 20 21 14 11  3  2  1 \n2 least connected regions:\n30 65 with 1 link\n1 most connected region:\n85 with 10 links\n\n\n\n\n8.3.3 Visualizing contiguity weights\nWe need points to make connectivity graphs. The points will be taken from polygon centroids.\n\n# Get longitude\nlongitude &lt;- map_dbl(hunan$geometry, ~st_centroid(.x)[[1]])\n\n# Get latitude\nlatitude &lt;- map_dbl(hunan$geometry, ~st_centroid(.x)[[2]])\n\n# Combine both to get coordinate objects\ncoords &lt;- cbind(longitude, latitude)\n\n# Check coordinate objects\nhead(coords)\n\n     longitude latitude\n[1,]  112.1531 29.44362\n[2,]  112.0372 28.86489\n[3,]  111.8917 29.47107\n[4,]  111.7031 29.74499\n[5,]  111.6138 29.49258\n[6,]  111.0341 29.79863\n\n\n\n# Plot Queen contiguity based neighbours map\nplot(hunan$geometry, border=\"lightgrey\")\nplot(wm_q, coords, pch = 19, cex = 0.6, add = TRUE, col= \"red\")\n\n\n\n\n\n\n\n\n\n# Plot Rook contiguity based neighbours map\nplot(hunan$geometry, border=\"lightgrey\")\nplot(wm_r, coords, pch = 19, cex = 0.6, add = TRUE, col = \"red\")\n\n\n\n\n\n\n\n\n\n# Show both plots side by sde\npar(mfrow=c(1,2))\nplot(hunan$geometry, border=\"lightgrey\", main=\"Queen Contiguity\", cex.main = 0.7)\nplot(wm_q, coords, pch = 19, cex = 0.6, add = TRUE, col= \"red\")\nplot(hunan$geometry, border=\"lightgrey\", main=\"Rook Contiguity\", cex.main = 0.7)\nplot(wm_r, coords, pch = 19, cex = 0.6, add = TRUE, col = \"red\")"
  },
  {
    "objectID": "Hands-On_Ex/Hands-On_Ex_04/Hands-On_Ex04.html#compute-distance-based-neighbours",
    "href": "Hands-On_Ex/Hands-On_Ex_04/Hands-On_Ex04.html#compute-distance-based-neighbours",
    "title": "Hands-On Exercise 04",
    "section": "8.4 Compute Distance Based Neighbours",
    "text": "8.4 Compute Distance Based Neighbours\nUse dnearaneigh() of spdep package"
  },
  {
    "objectID": "Hands-On_Ex/Hands-On_Ex_04/Hands-On_Ex04.html#determine-cut-off-distance",
    "href": "Hands-On_Ex/Hands-On_Ex_04/Hands-On_Ex04.html#determine-cut-off-distance",
    "title": "Hands-On Exercise 04",
    "section": "8.4.1 Determine cut-off distance",
    "text": "8.4.1 Determine cut-off distance\n\n# Determine upper limit for distance band\nk1 &lt;- knn2nb(knearneigh(coords))\nk1dists &lt;- unlist(nbdists(k1, coords, longlat = TRUE))\nsummary(k1dists)\n\n   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. \n  24.79   32.57   38.01   39.07   44.52   61.79"
  },
  {
    "objectID": "Hands-On_Ex/Hands-On_Ex_04/Hands-On_Ex04.html#compute-fixed-distance-weight-matrix",
    "href": "Hands-On_Ex/Hands-On_Ex_04/Hands-On_Ex04.html#compute-fixed-distance-weight-matrix",
    "title": "Hands-On Exercise 04",
    "section": "8.4.2 Compute fixed distance weight matrix",
    "text": "8.4.2 Compute fixed distance weight matrix\n\n# Compute fixed distance weight matrix\nwm_d62 &lt;- dnearneigh(coords, 0, 62, longlat = TRUE)\nwm_d62\n\nNeighbour list object:\nNumber of regions: 88 \nNumber of nonzero links: 324 \nPercentage nonzero weights: 4.183884 \nAverage number of links: 3.681818 \n\n\nThere are 3.681818 average number of neighbours per region (324/88)\n\nStr methodTable & Card method\n\n\n\n# Check weight matrix\nstr(wm_d62)\n\nList of 88\n $ : int [1:5] 3 4 5 57 64\n $ : int [1:4] 57 58 78 85\n $ : int [1:4] 1 4 5 57\n $ : int [1:3] 1 3 5\n $ : int [1:4] 1 3 4 85\n $ : int 69\n $ : int [1:2] 67 84\n $ : int [1:4] 9 46 47 78\n $ : int [1:4] 8 46 68 84\n $ : int [1:4] 16 22 70 72\n $ : int [1:3] 14 17 72\n $ : int [1:5] 13 60 61 63 83\n $ : int [1:4] 12 15 60 83\n $ : int [1:2] 11 17\n $ : int 13\n $ : int [1:4] 10 17 22 83\n $ : int [1:3] 11 14 16\n $ : int [1:3] 20 22 63\n $ : int [1:5] 20 21 73 74 82\n $ : int [1:5] 18 19 21 22 82\n $ : int [1:6] 19 20 35 74 82 86\n $ : int [1:4] 10 16 18 20\n $ : int [1:3] 41 77 82\n $ : int [1:4] 25 28 31 54\n $ : int [1:4] 24 28 33 81\n $ : int [1:4] 27 33 42 81\n $ : int [1:2] 26 29\n $ : int [1:6] 24 25 33 49 52 54\n $ : int [1:2] 27 37\n $ : int 33\n $ : int [1:2] 24 36\n $ : int 50\n $ : int [1:5] 25 26 28 30 81\n $ : int [1:3] 36 45 80\n $ : int [1:6] 21 41 46 47 80 82\n $ : int [1:5] 31 34 45 56 80\n $ : int [1:2] 29 42\n $ : int [1:3] 44 77 79\n $ : int [1:4] 40 42 43 81\n $ : int [1:3] 39 45 79\n $ : int [1:5] 23 35 45 79 82\n $ : int [1:5] 26 37 39 43 81\n $ : int [1:3] 39 42 44\n $ : int [1:2] 38 43\n $ : int [1:6] 34 36 40 41 79 80\n $ : int [1:5] 8 9 35 47 86\n $ : int [1:5] 8 35 46 80 86\n $ : int [1:5] 50 51 52 53 55\n $ : int [1:4] 28 51 52 54\n $ : int [1:6] 32 48 51 52 54 55\n $ : int [1:4] 48 49 50 52\n $ : int [1:6] 28 48 49 50 51 54\n $ : int [1:2] 48 55\n $ : int [1:5] 24 28 49 50 52\n $ : int [1:4] 48 50 53 75\n $ : int 36\n $ : int [1:5] 1 2 3 58 64\n $ : int [1:5] 2 57 64 66 68\n $ : int [1:3] 60 87 88\n $ : int [1:4] 12 13 59 61\n $ : int [1:5] 12 60 62 63 87\n $ : int [1:4] 61 63 77 87\n $ : int [1:5] 12 18 61 62 83\n $ : int [1:4] 1 57 58 76\n $ : int 76\n $ : int [1:5] 58 67 68 76 84\n $ : int [1:2] 7 66\n $ : int [1:4] 9 58 66 84\n $ : int [1:2] 6 75\n $ : int [1:3] 10 72 73\n $ : int [1:2] 73 74\n $ : int [1:3] 10 11 70\n $ : int [1:4] 19 70 71 74\n $ : int [1:5] 19 21 71 73 86\n $ : int [1:2] 55 69\n $ : int [1:3] 64 65 66\n $ : int [1:3] 23 38 62\n $ : int [1:2] 2 8\n $ : int [1:4] 38 40 41 45\n $ : int [1:5] 34 35 36 45 47\n $ : int [1:5] 25 26 33 39 42\n $ : int [1:6] 19 20 21 23 35 41\n $ : int [1:4] 12 13 16 63\n $ : int [1:4] 7 9 66 68\n $ : int [1:2] 2 5\n $ : int [1:4] 21 46 47 74\n $ : int [1:4] 59 61 62 88\n $ : int [1:2] 59 87\n - attr(*, \"class\")= chr \"nb\"\n - attr(*, \"region.id\")= chr [1:88] \"1\" \"2\" \"3\" \"4\" ...\n - attr(*, \"call\")= language dnearneigh(x = coords, d1 = 0, d2 = 62, longlat = TRUE)\n - attr(*, \"dnn\")= num [1:2] 0 62\n - attr(*, \"bounds\")= chr [1:2] \"GE\" \"LE\"\n - attr(*, \"nbtype\")= chr \"distance\"\n - attr(*, \"sym\")= logi TRUE\n\n\n\n\n\n# Combine table() and card() from spdep\ntable(hunan$County, card(wm_d62))\n\n               \n                1 2 3 4 5 6\n  Anhua         1 0 0 0 0 0\n  Anren         0 0 0 1 0 0\n  Anxiang       0 0 0 0 1 0\n  Baojing       0 0 0 0 1 0\n  Chaling       0 0 1 0 0 0\n  Changning     0 0 1 0 0 0\n  Changsha      0 0 0 1 0 0\n  Chengbu       0 1 0 0 0 0\n  Chenxi        0 0 0 1 0 0\n  Cili          0 1 0 0 0 0\n  Dao           0 0 0 1 0 0\n  Dongan        0 0 1 0 0 0\n  Dongkou       0 0 0 1 0 0\n  Fenghuang     0 0 0 1 0 0\n  Guidong       0 0 1 0 0 0\n  Guiyang       0 0 0 1 0 0\n  Guzhang       0 0 0 0 0 1\n  Hanshou       0 0 0 1 0 0\n  Hengdong      0 0 0 0 1 0\n  Hengnan       0 0 0 0 1 0\n  Hengshan      0 0 0 0 0 1\n  Hengyang      0 0 0 0 0 1\n  Hongjiang     0 0 0 0 1 0\n  Huarong       0 0 0 1 0 0\n  Huayuan       0 0 0 1 0 0\n  Huitong       0 0 0 1 0 0\n  Jiahe         0 0 0 0 1 0\n  Jianghua      0 0 1 0 0 0\n  Jiangyong     0 1 0 0 0 0\n  Jingzhou      0 1 0 0 0 0\n  Jinshi        0 0 0 1 0 0\n  Jishou        0 0 0 0 0 1\n  Lanshan       0 0 0 1 0 0\n  Leiyang       0 0 0 1 0 0\n  Lengshuijiang 0 0 1 0 0 0\n  Li            0 0 1 0 0 0\n  Lianyuan      0 0 0 0 1 0\n  Liling        0 1 0 0 0 0\n  Linli         0 0 0 1 0 0\n  Linwu         0 0 0 1 0 0\n  Linxiang      1 0 0 0 0 0\n  Liuyang       0 1 0 0 0 0\n  Longhui       0 0 1 0 0 0\n  Longshan      0 1 0 0 0 0\n  Luxi          0 0 0 0 1 0\n  Mayang        0 0 0 0 0 1\n  Miluo         0 0 0 0 1 0\n  Nan           0 0 0 0 1 0\n  Ningxiang     0 0 0 1 0 0\n  Ningyuan      0 0 0 0 1 0\n  Pingjiang     0 1 0 0 0 0\n  Qidong        0 0 1 0 0 0\n  Qiyang        0 0 1 0 0 0\n  Rucheng       0 1 0 0 0 0\n  Sangzhi       0 1 0 0 0 0\n  Shaodong      0 0 0 0 1 0\n  Shaoshan      0 0 0 0 1 0\n  Shaoyang      0 0 0 1 0 0\n  Shimen        1 0 0 0 0 0\n  Shuangfeng    0 0 0 0 0 1\n  Shuangpai     0 0 0 1 0 0\n  Suining       0 0 0 0 1 0\n  Taojiang      0 1 0 0 0 0\n  Taoyuan       0 1 0 0 0 0\n  Tongdao       0 1 0 0 0 0\n  Wangcheng     0 0 0 1 0 0\n  Wugang        0 0 1 0 0 0\n  Xiangtan      0 0 0 1 0 0\n  Xiangxiang    0 0 0 0 1 0\n  Xiangyin      0 0 0 1 0 0\n  Xinhua        0 0 0 0 1 0\n  Xinhuang      1 0 0 0 0 0\n  Xinning       0 1 0 0 0 0\n  Xinshao       0 0 0 0 0 1\n  Xintian       0 0 0 0 1 0\n  Xupu          0 1 0 0 0 0\n  Yanling       0 0 1 0 0 0\n  Yizhang       1 0 0 0 0 0\n  Yongshun      0 0 0 1 0 0\n  Yongxing      0 0 0 1 0 0\n  You           0 0 0 1 0 0\n  Yuanjiang     0 0 0 0 1 0\n  Yuanling      1 0 0 0 0 0\n  Yueyang       0 0 1 0 0 0\n  Zhijiang      0 0 0 0 1 0\n  Zhongfang     0 0 0 1 0 0\n  Zhuzhou       0 0 0 0 1 0\n  Zixing        0 0 1 0 0 0\n\n\n\n\n\n\n# Depth first search on neighbour list\nn_comp &lt;- n.comp.nb(wm_d62)\n\n# Number of disjoint connected subgraphs\nn_comp$nc\n\n[1] 1\n\n\nAll regions are part of a single fully connected component\n\n# Shows number of region\ntable(n_comp$comp.id) # Shows all 88 regions since they are all connected\n\n\n 1 \n88 \n\n\n\n8.4.2.1 Visualize fixed distance weight matrix\n\n# Plot fixed distance weight matrix\nplot(hunan$geometry, border=\"lightgrey\")\nplot(wm_d62, coords, add=TRUE)\nplot(k1, coords, add=TRUE, col=\"red\", length=0.08)\n\n\n\n\n\n\n\n\n\n#  Show 1st nearest neighbours and distance link plots side by side\npar(mfrow=c(1,2))\nplot(hunan$geometry, border=\"lightgrey\", main=\"1st nearest neighbours\", cex.main = 0.7)\nplot(k1, coords, add=TRUE, col=\"red\", length=0.08)\nplot(hunan$geometry, border=\"lightgrey\", main=\"Distance link\", cex.main = 0.7)\nplot(wm_d62, coords, add=TRUE, pch = 19, cex = 0.6)\n\n\n\n\n\n\n\n\n\n\n8.4.3 Compute adaptive distance weight matrix\n\n# Compute adaptive distance weight matrix\nknn6 &lt;- knn2nb(knearneigh(coords, k=6))\nknn6\n\nNeighbour list object:\nNumber of regions: 88 \nNumber of nonzero links: 528 \nPercentage nonzero weights: 6.818182 \nAverage number of links: 6 \nNon-symmetric neighbours list\n\n\n\n# Check weight matrix\nstr(knn6)\n\nList of 88\n $ : int [1:6] 2 3 4 5 57 64\n $ : int [1:6] 1 3 57 58 78 85\n $ : int [1:6] 1 2 4 5 57 85\n $ : int [1:6] 1 3 5 6 69 85\n $ : int [1:6] 1 3 4 6 69 85\n $ : int [1:6] 3 4 5 69 75 85\n $ : int [1:6] 9 66 67 71 74 84\n $ : int [1:6] 9 46 47 78 80 86\n $ : int [1:6] 8 46 66 68 84 86\n $ : int [1:6] 16 19 22 70 72 73\n $ : int [1:6] 10 14 16 17 70 72\n $ : int [1:6] 13 15 60 61 63 83\n $ : int [1:6] 12 15 60 61 63 83\n $ : int [1:6] 11 15 16 17 72 83\n $ : int [1:6] 12 13 14 17 60 83\n $ : int [1:6] 10 11 17 22 72 83\n $ : int [1:6] 10 11 14 16 72 83\n $ : int [1:6] 20 22 23 63 77 83\n $ : int [1:6] 10 20 21 73 74 82\n $ : int [1:6] 18 19 21 22 23 82\n $ : int [1:6] 19 20 35 74 82 86\n $ : int [1:6] 10 16 18 19 20 83\n $ : int [1:6] 18 20 41 77 79 82\n $ : int [1:6] 25 28 31 52 54 81\n $ : int [1:6] 24 28 31 33 54 81\n $ : int [1:6] 25 27 29 33 42 81\n $ : int [1:6] 26 29 30 37 42 81\n $ : int [1:6] 24 25 33 49 52 54\n $ : int [1:6] 26 27 37 42 43 81\n $ : int [1:6] 26 27 28 33 49 81\n $ : int [1:6] 24 25 36 39 40 54\n $ : int [1:6] 24 31 50 54 55 56\n $ : int [1:6] 25 26 28 30 49 81\n $ : int [1:6] 36 40 41 45 56 80\n $ : int [1:6] 21 41 46 47 80 82\n $ : int [1:6] 31 34 40 45 56 80\n $ : int [1:6] 26 27 29 42 43 44\n $ : int [1:6] 23 43 44 62 77 79\n $ : int [1:6] 25 40 42 43 44 81\n $ : int [1:6] 31 36 39 43 45 79\n $ : int [1:6] 23 35 45 79 80 82\n $ : int [1:6] 26 27 37 39 43 81\n $ : int [1:6] 37 39 40 42 44 79\n $ : int [1:6] 37 38 39 42 43 79\n $ : int [1:6] 34 36 40 41 79 80\n $ : int [1:6] 8 9 35 47 78 86\n $ : int [1:6] 8 21 35 46 80 86\n $ : int [1:6] 49 50 51 52 53 55\n $ : int [1:6] 28 33 48 51 52 54\n $ : int [1:6] 32 48 51 52 54 55\n $ : int [1:6] 28 48 49 50 52 54\n $ : int [1:6] 28 48 49 50 51 54\n $ : int [1:6] 48 50 51 52 55 75\n $ : int [1:6] 24 28 49 50 51 52\n $ : int [1:6] 32 48 50 52 53 75\n $ : int [1:6] 32 34 36 78 80 85\n $ : int [1:6] 1 2 3 58 64 68\n $ : int [1:6] 2 57 64 66 68 78\n $ : int [1:6] 12 13 60 61 87 88\n $ : int [1:6] 12 13 59 61 63 87\n $ : int [1:6] 12 13 60 62 63 87\n $ : int [1:6] 12 38 61 63 77 87\n $ : int [1:6] 12 18 60 61 62 83\n $ : int [1:6] 1 3 57 58 68 76\n $ : int [1:6] 58 64 66 67 68 76\n $ : int [1:6] 9 58 67 68 76 84\n $ : int [1:6] 7 65 66 68 76 84\n $ : int [1:6] 9 57 58 66 78 84\n $ : int [1:6] 4 5 6 32 75 85\n $ : int [1:6] 10 16 19 22 72 73\n $ : int [1:6] 7 19 73 74 84 86\n $ : int [1:6] 10 11 14 16 17 70\n $ : int [1:6] 10 19 21 70 71 74\n $ : int [1:6] 19 21 71 73 84 86\n $ : int [1:6] 6 32 50 53 55 69\n $ : int [1:6] 58 64 65 66 67 68\n $ : int [1:6] 18 23 38 61 62 63\n $ : int [1:6] 2 8 9 46 58 68\n $ : int [1:6] 38 40 41 43 44 45\n $ : int [1:6] 34 35 36 41 45 47\n $ : int [1:6] 25 26 28 33 39 42\n $ : int [1:6] 19 20 21 23 35 41\n $ : int [1:6] 12 13 15 16 22 63\n $ : int [1:6] 7 9 66 68 71 74\n $ : int [1:6] 2 3 4 5 56 69\n $ : int [1:6] 8 9 21 46 47 74\n $ : int [1:6] 59 60 61 62 63 88\n $ : int [1:6] 59 60 61 62 63 87\n - attr(*, \"region.id\")= chr [1:88] \"1\" \"2\" \"3\" \"4\" ...\n - attr(*, \"call\")= language knearneigh(x = coords, k = 6)\n - attr(*, \"sym\")= logi FALSE\n - attr(*, \"type\")= chr \"knn\"\n - attr(*, \"knn-k\")= num 6\n - attr(*, \"class\")= chr \"nb\"\n\n\n\n8.4.3.1 Visualize adaptive distance weight matrix\n\n# Plot adaptive distance weight matrix\nplot(hunan$geometry, border=\"lightgrey\")\nplot(knn6, coords, pch = 19, cex = 0.6, add = TRUE, col = \"red\")"
  },
  {
    "objectID": "Hands-On_Ex/Hands-On_Ex_04/Hands-On_Ex04.html#compute-inversed-distance-weights-matrix",
    "href": "Hands-On_Ex/Hands-On_Ex_04/Hands-On_Ex04.html#compute-inversed-distance-weights-matrix",
    "title": "Hands-On Exercise 04",
    "section": "8.5 Compute Inversed Distance Weights Matrix",
    "text": "8.5 Compute Inversed Distance Weights Matrix\nUse nbdists() of spdep package\n\n# Compute weight matrix with inversed distance method\ndist &lt;- nbdists(wm_q, coords, longlat = TRUE)\nids &lt;- lapply(dist, function(x) 1/(x))\nids\n\n[[1]]\n[1] 0.01535405 0.03916350 0.01820896 0.02807922 0.01145113\n\n[[2]]\n[1] 0.01535405 0.01764308 0.01925924 0.02323898 0.01719350\n\n[[3]]\n[1] 0.03916350 0.02822040 0.03695795 0.01395765\n\n[[4]]\n[1] 0.01820896 0.02822040 0.03414741 0.01539065\n\n[[5]]\n[1] 0.03695795 0.03414741 0.01524598 0.01618354\n\n[[6]]\n[1] 0.015390649 0.015245977 0.021748129 0.011883901 0.009810297\n\n[[7]]\n[1] 0.01708612 0.01473997 0.01150924 0.01872915\n\n[[8]]\n[1] 0.02022144 0.03453056 0.02529256 0.01036340 0.02284457 0.01500600 0.01515314\n\n[[9]]\n[1] 0.02022144 0.01574888 0.02109502 0.01508028 0.02902705 0.01502980\n\n[[10]]\n[1] 0.02281552 0.01387777 0.01538326 0.01346650 0.02100510 0.02631658 0.01874863\n[8] 0.01500046\n\n[[11]]\n[1] 0.01882869 0.02243492 0.02247473\n\n[[12]]\n[1] 0.02779227 0.02419652 0.02333385 0.02986130 0.02335429\n\n[[13]]\n[1] 0.02779227 0.02650020 0.02670323 0.01714243\n\n[[14]]\n[1] 0.01882869 0.01233868 0.02098555\n\n[[15]]\n[1] 0.02650020 0.01233868 0.01096284 0.01562226\n\n[[16]]\n[1] 0.02281552 0.02466962 0.02765018 0.01476814 0.01671430\n\n[[17]]\n[1] 0.01387777 0.02243492 0.02098555 0.01096284 0.02466962 0.01593341 0.01437996\n\n[[18]]\n[1] 0.02039779 0.02032767 0.01481665 0.01473691 0.01459380\n\n[[19]]\n[1] 0.01538326 0.01926323 0.02668415 0.02140253 0.01613589 0.01412874\n\n[[20]]\n[1] 0.01346650 0.02039779 0.01926323 0.01723025 0.02153130 0.01469240 0.02327034\n\n[[21]]\n[1] 0.02668415 0.01723025 0.01766299 0.02644986 0.02163800\n\n[[22]]\n[1] 0.02100510 0.02765018 0.02032767 0.02153130 0.01489296\n\n[[23]]\n[1] 0.01481665 0.01469240 0.01401432 0.02246233 0.01880425 0.01530458 0.01849605\n\n[[24]]\n[1] 0.02354598 0.01837201 0.02607264 0.01220154 0.02514180\n\n[[25]]\n[1] 0.02354598 0.02188032 0.01577283 0.01949232 0.02947957\n\n[[26]]\n[1] 0.02155798 0.01745522 0.02212108 0.02220532\n\n[[27]]\n[1] 0.02155798 0.02490625 0.01562326\n\n[[28]]\n[1] 0.01837201 0.02188032 0.02229549 0.03076171 0.02039506\n\n[[29]]\n[1] 0.02490625 0.01686587 0.01395022\n\n[[30]]\n[1] 0.02090587\n\n[[31]]\n[1] 0.02607264 0.01577283 0.01219005 0.01724850 0.01229012 0.01609781 0.01139438\n[8] 0.01150130\n\n[[32]]\n[1] 0.01220154 0.01219005 0.01712515 0.01340413 0.01280928 0.01198216 0.01053374\n[8] 0.01065655\n\n[[33]]\n[1] 0.01949232 0.01745522 0.02229549 0.02090587 0.01979045\n\n[[34]]\n[1] 0.03113041 0.03589551 0.02882915\n\n[[35]]\n[1] 0.01766299 0.02185795 0.02616766 0.02111721 0.02108253 0.01509020\n\n[[36]]\n[1] 0.01724850 0.03113041 0.01571707 0.01860991 0.02073549 0.01680129\n\n[[37]]\n[1] 0.01686587 0.02234793 0.01510990 0.01550676\n\n[[38]]\n[1] 0.01401432 0.02407426 0.02276151 0.01719415\n\n[[39]]\n[1] 0.01229012 0.02172543 0.01711924 0.02629732 0.01896385\n\n[[40]]\n[1] 0.01609781 0.01571707 0.02172543 0.01506473 0.01987922 0.01894207\n\n[[41]]\n[1] 0.02246233 0.02185795 0.02205991 0.01912542 0.01601083 0.01742892\n\n[[42]]\n[1] 0.02212108 0.01562326 0.01395022 0.02234793 0.01711924 0.01836831 0.01683518\n\n[[43]]\n[1] 0.01510990 0.02629732 0.01506473 0.01836831 0.03112027 0.01530782\n\n[[44]]\n[1] 0.01550676 0.02407426 0.03112027 0.01486508\n\n[[45]]\n[1] 0.03589551 0.01860991 0.01987922 0.02205991 0.02107101 0.01982700\n\n[[46]]\n[1] 0.03453056 0.04033752 0.02689769\n\n[[47]]\n[1] 0.02529256 0.02616766 0.04033752 0.01949145 0.02181458\n\n[[48]]\n[1] 0.02313819 0.03370576 0.02289485 0.01630057 0.01818085\n\n[[49]]\n[1] 0.03076171 0.02138091 0.02394529 0.01990000\n\n[[50]]\n[1] 0.01712515 0.02313819 0.02551427 0.02051530 0.02187179\n\n[[51]]\n[1] 0.03370576 0.02138091 0.02873854\n\n[[52]]\n[1] 0.02289485 0.02394529 0.02551427 0.02873854 0.03516672\n\n[[53]]\n[1] 0.01630057 0.01979945 0.01253977\n\n[[54]]\n[1] 0.02514180 0.02039506 0.01340413 0.01990000 0.02051530 0.03516672\n\n[[55]]\n[1] 0.01280928 0.01818085 0.02187179 0.01979945 0.01882298\n\n[[56]]\n[1] 0.01036340 0.01139438 0.01198216 0.02073549 0.01214479 0.01362855 0.01341697\n\n[[57]]\n[1] 0.028079221 0.017643082 0.031423501 0.029114131 0.013520292 0.009903702\n\n[[58]]\n[1] 0.01925924 0.03142350 0.02722997 0.01434859 0.01567192\n\n[[59]]\n[1] 0.01696711 0.01265572 0.01667105 0.01785036\n\n[[60]]\n[1] 0.02419652 0.02670323 0.01696711 0.02343040\n\n[[61]]\n[1] 0.02333385 0.01265572 0.02343040 0.02514093 0.02790764 0.01219751 0.02362452\n\n[[62]]\n[1] 0.02514093 0.02002219 0.02110260\n\n[[63]]\n[1] 0.02986130 0.02790764 0.01407043 0.01805987\n\n[[64]]\n[1] 0.02911413 0.01689892\n\n[[65]]\n[1] 0.02471705\n\n[[66]]\n[1] 0.01574888 0.01726461 0.03068853 0.01954805 0.01810569\n\n[[67]]\n[1] 0.01708612 0.01726461 0.01349843 0.01361172\n\n[[68]]\n[1] 0.02109502 0.02722997 0.03068853 0.01406357 0.01546511\n\n[[69]]\n[1] 0.02174813 0.01645838 0.01419926\n\n[[70]]\n[1] 0.02631658 0.01963168 0.02278487\n\n[[71]]\n[1] 0.01473997 0.01838483 0.03197403\n\n[[72]]\n[1] 0.01874863 0.02247473 0.01476814 0.01593341 0.01963168\n\n[[73]]\n[1] 0.01500046 0.02140253 0.02278487 0.01838483 0.01652709\n\n[[74]]\n[1] 0.01150924 0.01613589 0.03197403 0.01652709 0.01342099 0.02864567\n\n[[75]]\n[1] 0.011883901 0.010533736 0.012539774 0.018822977 0.016458383 0.008217581\n\n[[76]]\n[1] 0.01352029 0.01434859 0.01689892 0.02471705 0.01954805 0.01349843 0.01406357\n\n[[77]]\n[1] 0.014736909 0.018804247 0.022761507 0.012197506 0.020022195 0.014070428\n[7] 0.008440896\n\n[[78]]\n[1] 0.02323898 0.02284457 0.01508028 0.01214479 0.01567192 0.01546511 0.01140779\n\n[[79]]\n[1] 0.01530458 0.01719415 0.01894207 0.01912542 0.01530782 0.01486508 0.02107101\n\n[[80]]\n[1] 0.01500600 0.02882915 0.02111721 0.01680129 0.01601083 0.01982700 0.01949145\n[8] 0.01362855\n\n[[81]]\n[1] 0.02947957 0.02220532 0.01150130 0.01979045 0.01896385 0.01683518\n\n[[82]]\n[1] 0.02327034 0.02644986 0.01849605 0.02108253 0.01742892\n\n[[83]]\n[1] 0.023354289 0.017142433 0.015622258 0.016714303 0.014379961 0.014593799\n[7] 0.014892965 0.018059871 0.008440896\n\n[[84]]\n[1] 0.01872915 0.02902705 0.01810569 0.01361172 0.01342099 0.01297994\n\n[[85]]\n [1] 0.011451133 0.017193502 0.013957649 0.016183544 0.009810297 0.010656545\n [7] 0.013416965 0.009903702 0.014199260 0.008217581 0.011407794\n\n[[86]]\n[1] 0.01515314 0.01502980 0.01412874 0.02163800 0.01509020 0.02689769 0.02181458\n[8] 0.02864567 0.01297994\n\n[[87]]\n[1] 0.01667105 0.02362452 0.02110260 0.02058034\n\n[[88]]\n[1] 0.01785036 0.02058034"
  },
  {
    "objectID": "Hands-On_Ex/Hands-On_Ex_04/Hands-On_Ex04.html#compute-row-standardised-weights-matrix",
    "href": "Hands-On_Ex/Hands-On_Ex_04/Hands-On_Ex04.html#compute-row-standardised-weights-matrix",
    "title": "Hands-On Exercise 04",
    "section": "8.6 Compute Row-standardised Weights Matrix",
    "text": "8.6 Compute Row-standardised Weights Matrix\nUse nb2listw() of spdep package\n\n# Assign equal weights for neighouring polygon\nrswm_q &lt;- nb2listw(wm_q, style=\"W\", zero.policy = TRUE)\nrswm_q\n\nCharacteristics of weights list object:\nNeighbour list object:\nNumber of regions: 88 \nNumber of nonzero links: 448 \nPercentage nonzero weights: 5.785124 \nAverage number of links: 5.090909 \n\nWeights style: W \nWeights constants summary:\n   n   nn S0       S1       S2\nW 88 7744 88 37.86334 365.9147\n\n\n\n# Weight of first polygon's 8 neighbours type\nrswm_q$weights[10]\n\n[[1]]\n[1] 0.125 0.125 0.125 0.125 0.125 0.125 0.125 0.125\n\n\n\n# Derive row standardised distance weight matrix\nrswm_ids &lt;- nb2listw(wm_q, glist=ids, style=\"B\", zero.policy=TRUE)\nrswm_ids\n\nCharacteristics of weights list object:\nNeighbour list object:\nNumber of regions: 88 \nNumber of nonzero links: 448 \nPercentage nonzero weights: 5.785124 \nAverage number of links: 5.090909 \n\nWeights style: B \nWeights constants summary:\n   n   nn       S0        S1     S2\nB 88 7744 8.786867 0.3776535 3.8137\n\n\n\n# Check weights\nrswm_ids$weights[1]\n\n[[1]]\n[1] 0.01535405 0.03916350 0.01820896 0.02807922 0.01145113\n\n\n\n# See summary of the weights\nsummary(unlist(rswm_ids$weights))\n\n    Min.  1st Qu.   Median     Mean  3rd Qu.     Max. \n0.008218 0.015088 0.018739 0.019614 0.022823 0.040338"
  },
  {
    "objectID": "Hands-On_Ex/Hands-On_Ex_04/Hands-On_Ex04.html#spatial-weight-matrix-application",
    "href": "Hands-On_Ex/Hands-On_Ex_04/Hands-On_Ex04.html#spatial-weight-matrix-application",
    "title": "Hands-On Exercise 04",
    "section": "8.7 Spatial Weight Matrix Application",
    "text": "8.7 Spatial Weight Matrix Application\n\n8.7.1 Spatial lag with row standardised weights\n\n# Calculate average neighbour GDPPC value for each polygon\nGDPPC.lag &lt;- lag.listw(rswm_q, hunan$GDPPC)\nGDPPC.lag\n\n [1] 24847.20 22724.80 24143.25 27737.50 27270.25 21248.80 43747.00 33582.71\n [9] 45651.17 32027.62 32671.00 20810.00 25711.50 30672.33 33457.75 31689.20\n[17] 20269.00 23901.60 25126.17 21903.43 22718.60 25918.80 20307.00 20023.80\n[25] 16576.80 18667.00 14394.67 19848.80 15516.33 20518.00 17572.00 15200.12\n[33] 18413.80 14419.33 24094.50 22019.83 12923.50 14756.00 13869.80 12296.67\n[41] 15775.17 14382.86 11566.33 13199.50 23412.00 39541.00 36186.60 16559.60\n[49] 20772.50 19471.20 19827.33 15466.80 12925.67 18577.17 14943.00 24913.00\n[57] 25093.00 24428.80 17003.00 21143.75 20435.00 17131.33 24569.75 23835.50\n[65] 26360.00 47383.40 55157.75 37058.00 21546.67 23348.67 42323.67 28938.60\n[73] 25880.80 47345.67 18711.33 29087.29 20748.29 35933.71 15439.71 29787.50\n[81] 18145.00 21617.00 29203.89 41363.67 22259.09 44939.56 16902.00 16930.00\n\n\n\nnb1 &lt;- wm_q[[1]]\nnb1 &lt;- hunan$GDPPC[nb1]\nnb1\n\n[1] 20981 34592 24473 21311 22879\n\n\nSpatial lag is the weighted average of neighbouring region’s values of the variable\n\n# Append spatially lag GDPPC values onto hunan sf dataframe\nlag.list &lt;- list(hunan$NAME_3, lag.listw(rswm_q, hunan$GDPPC))\nlag.res &lt;- as.data.frame(lag.list)\ncolnames(lag.res) &lt;- c(\"NAME_3\", \"lag GDPPC\")\nhunan &lt;- left_join(hunan,lag.res)\n\nJoining with `by = join_by(NAME_3)`\n\n# Check resulting hunan dataframe\nhead(hunan)\n\nSimple feature collection with 6 features and 7 fields\nGeometry type: POLYGON\nDimension:     XY\nBounding box:  xmin: 110.4922 ymin: 28.61762 xmax: 112.3013 ymax: 30.12812\nGeodetic CRS:  WGS 84\n   NAME_2  ID_3  NAME_3   ENGTYPE_3  County GDPPC lag GDPPC\n1 Changde 21098 Anxiang      County Anxiang 23667  24847.20\n2 Changde 21100 Hanshou      County Hanshou 20981  22724.80\n3 Changde 21101  Jinshi County City  Jinshi 34592  24143.25\n4 Changde 21102      Li      County      Li 24473  27737.50\n5 Changde 21103   Linli      County   Linli 25554  27270.25\n6 Changde 21104  Shimen      County  Shimen 27137  21248.80\n                        geometry\n1 POLYGON ((112.0625 29.75523...\n2 POLYGON ((112.2288 29.11684...\n3 POLYGON ((111.8927 29.6013,...\n4 POLYGON ((111.3731 29.94649...\n5 POLYGON ((111.6324 29.76288...\n6 POLYGON ((110.8825 30.11675...\n\n\n\n# Plot both GDPPC and spatial lag GDPPC side by side\ngdppc &lt;- qtm(hunan, \"GDPPC\") + \n  tm_layout(legend.text.size = 0.5,  # Adjust the size of the legend text\n            legend.title.size = 0.8)    # Adjust the size of the legend title\nlag_gdppc &lt;- qtm(hunan, \"lag GDPPC\") + \n  tm_layout(legend.text.size = 0.5,  # Adjust the size of the legend text\n            legend.title.size = 0.8)    # Adjust the size of the legend title\ntmap_arrange(gdppc, lag_gdppc, asp=1, ncol=2)\n\n\n\n\n\n\n\n\n\n\n8.7.2 Spatial lag as sum of neighbouring values\n\n# Assign value of 1 per neighbour\nb_weights &lt;- lapply(wm_q, function(x) 0*x + 1)\nb_weights2 &lt;- nb2listw(wm_q, \n                       glist = b_weights, \n                       style = \"B\")\nb_weights2\n\nCharacteristics of weights list object:\nNeighbour list object:\nNumber of regions: 88 \nNumber of nonzero links: 448 \nPercentage nonzero weights: 5.785124 \nAverage number of links: 5.090909 \n\nWeights style: B \nWeights constants summary:\n   n   nn  S0  S1    S2\nB 88 7744 448 896 10224\n\n\n\n# Compute lag variable from weight and GDPPC \nlag_sum &lt;- list(hunan$NAME_3, lag.listw(b_weights2, hunan$GDPPC))\nlag.res &lt;- as.data.frame(lag_sum)\ncolnames(lag.res) &lt;- c(\"NAME_3\", \"lag_sum GDPPC\")\n\n# Check result\nlag_sum\n\n[[1]]\n [1] \"Anxiang\"       \"Hanshou\"       \"Jinshi\"        \"Li\"           \n [5] \"Linli\"         \"Shimen\"        \"Liuyang\"       \"Ningxiang\"    \n [9] \"Wangcheng\"     \"Anren\"         \"Guidong\"       \"Jiahe\"        \n[13] \"Linwu\"         \"Rucheng\"       \"Yizhang\"       \"Yongxing\"     \n[17] \"Zixing\"        \"Changning\"     \"Hengdong\"      \"Hengnan\"      \n[21] \"Hengshan\"      \"Leiyang\"       \"Qidong\"        \"Chenxi\"       \n[25] \"Zhongfang\"     \"Huitong\"       \"Jingzhou\"      \"Mayang\"       \n[29] \"Tongdao\"       \"Xinhuang\"      \"Xupu\"          \"Yuanling\"     \n[33] \"Zhijiang\"      \"Lengshuijiang\" \"Shuangfeng\"    \"Xinhua\"       \n[37] \"Chengbu\"       \"Dongan\"        \"Dongkou\"       \"Longhui\"      \n[41] \"Shaodong\"      \"Suining\"       \"Wugang\"        \"Xinning\"      \n[45] \"Xinshao\"       \"Shaoshan\"      \"Xiangxiang\"    \"Baojing\"      \n[49] \"Fenghuang\"     \"Guzhang\"       \"Huayuan\"       \"Jishou\"       \n[53] \"Longshan\"      \"Luxi\"          \"Yongshun\"      \"Anhua\"        \n[57] \"Nan\"           \"Yuanjiang\"     \"Jianghua\"      \"Lanshan\"      \n[61] \"Ningyuan\"      \"Shuangpai\"     \"Xintian\"       \"Huarong\"      \n[65] \"Linxiang\"      \"Miluo\"         \"Pingjiang\"     \"Xiangyin\"     \n[69] \"Cili\"          \"Chaling\"       \"Liling\"        \"Yanling\"      \n[73] \"You\"           \"Zhuzhou\"       \"Sangzhi\"       \"Yueyang\"      \n[77] \"Qiyang\"        \"Taojiang\"      \"Shaoyang\"      \"Lianyuan\"     \n[81] \"Hongjiang\"     \"Hengyang\"      \"Guiyang\"       \"Changsha\"     \n[85] \"Taoyuan\"       \"Xiangtan\"      \"Dao\"           \"Jiangyong\"    \n\n[[2]]\n [1] 124236 113624  96573 110950 109081 106244 174988 235079 273907 256221\n[11]  98013 104050 102846  92017 133831 158446 141883 119508 150757 153324\n[21] 113593 129594 142149 100119  82884  74668  43184  99244  46549  20518\n[31] 140576 121601  92069  43258 144567 132119  51694  59024  69349  73780\n[41]  94651 100680  69398  52798 140472 118623 180933  82798  83090  97356\n[51]  59482  77334  38777 111463  74715 174391 150558 122144  68012  84575\n[61] 143045  51394  98279  47671  26360 236917 220631 185290  64640  70046\n[71] 126971 144693 129404 284074 112268 203611 145238 251536 108078 238300\n[81] 108870 108085 262835 248182 244850 404456  67608  33860\n\n\n\n# Append result to hunan sf dataframe\nhunan &lt;- left_join(hunan, lag.res)\n\nJoining with `by = join_by(NAME_3)`\n\n# Check resulting hunan dataframe\nhead(hunan)\n\nSimple feature collection with 6 features and 8 fields\nGeometry type: POLYGON\nDimension:     XY\nBounding box:  xmin: 110.4922 ymin: 28.61762 xmax: 112.3013 ymax: 30.12812\nGeodetic CRS:  WGS 84\n   NAME_2  ID_3  NAME_3   ENGTYPE_3  County GDPPC lag GDPPC lag_sum GDPPC\n1 Changde 21098 Anxiang      County Anxiang 23667  24847.20        124236\n2 Changde 21100 Hanshou      County Hanshou 20981  22724.80        113624\n3 Changde 21101  Jinshi County City  Jinshi 34592  24143.25         96573\n4 Changde 21102      Li      County      Li 24473  27737.50        110950\n5 Changde 21103   Linli      County   Linli 25554  27270.25        109081\n6 Changde 21104  Shimen      County  Shimen 27137  21248.80        106244\n                        geometry\n1 POLYGON ((112.0625 29.75523...\n2 POLYGON ((112.2288 29.11684...\n3 POLYGON ((111.8927 29.6013,...\n4 POLYGON ((111.3731 29.94649...\n5 POLYGON ((111.6324 29.76288...\n6 POLYGON ((110.8825 30.11675...\n\n\n\n# Plot both GDPPC and spatial lag sum GDPPC side by side \ngdppc &lt;- qtm(hunan, \"GDPPC\") + \n  tm_layout(legend.text.size = 0.5,  # Adjust the size of the legend text\n            legend.title.size = 0.8)    # Adjust the size of the legend title\nlag_sum_gdppc &lt;- qtm(hunan, \"lag_sum GDPPC\") + \n  tm_layout(legend.text.size = 0.5,  # Adjust the size of the legend text\n            legend.title.size = 0.8)    # Adjust the size of the legend title\ntmap_arrange(gdppc, lag_sum_gdppc, asp=1, ncol=2)\n\n\n\n\n\n\n\n\n\n\n8.7.3 Spatial window average\n\n# Add diagonal element to neighbour list\nwm_qs &lt;- include.self(wm_q)\n\n# Look at neighbour list of area [1]\nwm_qs[[1]]\n\n[1]  1  2  3  4 57 85\n\n\n\n# Get weights of the area [1] neighbours\nwm_qs &lt;- nb2listw(wm_qs)\nwm_qs\n\nCharacteristics of weights list object:\nNeighbour list object:\nNumber of regions: 88 \nNumber of nonzero links: 536 \nPercentage nonzero weights: 6.921488 \nAverage number of links: 6.090909 \n\nWeights style: W \nWeights constants summary:\n   n   nn S0       S1       S2\nW 88 7744 88 30.90265 357.5308\n\n\n\n# Creeate lag variable from weight structure and GDPPC variable\nlag_w_avg_gpdpc &lt;- lag.listw(wm_qs, \n                             hunan$GDPPC)\nlag_w_avg_gpdpc\n\n [1] 24650.50 22434.17 26233.00 27084.60 26927.00 22230.17 47621.20 37160.12\n [9] 49224.71 29886.89 26627.50 22690.17 25366.40 25825.75 30329.00 32682.83\n[17] 25948.62 23987.67 25463.14 21904.38 23127.50 25949.83 20018.75 19524.17\n[25] 18955.00 17800.40 15883.00 18831.33 14832.50 17965.00 17159.89 16199.44\n[33] 18764.50 26878.75 23188.86 20788.14 12365.20 15985.00 13764.83 11907.43\n[41] 17128.14 14593.62 11644.29 12706.00 21712.29 43548.25 35049.00 16226.83\n[49] 19294.40 18156.00 19954.75 18145.17 12132.75 18419.29 14050.83 23619.75\n[57] 24552.71 24733.67 16762.60 20932.60 19467.75 18334.00 22541.00 26028.00\n[65] 29128.50 46569.00 47576.60 36545.50 20838.50 22531.00 42115.50 27619.00\n[73] 27611.33 44523.29 18127.43 28746.38 20734.50 33880.62 14716.38 28516.22\n[81] 18086.14 21244.50 29568.80 48119.71 22310.75 43151.60 17133.40 17009.33\n\n\n\n# Convert lag variable listw object into dataframe\nlag.list.wm_qs &lt;- list(hunan$NAME_3, lag.listw(wm_qs, hunan$GDPPC))\nlag_wm_qs.res &lt;- as.data.frame(lag.list.wm_qs)\ncolnames(lag_wm_qs.res) &lt;- c(\"NAME_3\", \"lag_window_avg GDPPC\")\n\n# Append lag_window_avg GDPPC values to hunan sf dataframe\nhunan &lt;- left_join(hunan, lag_wm_qs.res)\n\nJoining with `by = join_by(NAME_3)`\n\n# Check hunan dataframe\nhead(hunan)\n\nSimple feature collection with 6 features and 9 fields\nGeometry type: POLYGON\nDimension:     XY\nBounding box:  xmin: 110.4922 ymin: 28.61762 xmax: 112.3013 ymax: 30.12812\nGeodetic CRS:  WGS 84\n   NAME_2  ID_3  NAME_3   ENGTYPE_3  County GDPPC lag GDPPC lag_sum GDPPC\n1 Changde 21098 Anxiang      County Anxiang 23667  24847.20        124236\n2 Changde 21100 Hanshou      County Hanshou 20981  22724.80        113624\n3 Changde 21101  Jinshi County City  Jinshi 34592  24143.25         96573\n4 Changde 21102      Li      County      Li 24473  27737.50        110950\n5 Changde 21103   Linli      County   Linli 25554  27270.25        109081\n6 Changde 21104  Shimen      County  Shimen 27137  21248.80        106244\n  lag_window_avg GDPPC                       geometry\n1             24650.50 POLYGON ((112.0625 29.75523...\n2             22434.17 POLYGON ((112.2288 29.11684...\n3             26233.00 POLYGON ((111.8927 29.6013,...\n4             27084.60 POLYGON ((111.3731 29.94649...\n5             26927.00 POLYGON ((111.6324 29.76288...\n6             22230.17 POLYGON ((110.8825 30.11675...\n\n\n\n# Compare values of lag GDPPC and Spatial window average with kable() from Knitr\nhunan %&gt;%\n  select(\"County\", \n         \"lag GDPPC\", \n         \"lag_window_avg GDPPC\") %&gt;%\n  kable()\n\n\n\n\n\n\n\n\n\n\nCounty\nlag GDPPC\nlag_window_avg GDPPC\ngeometry\n\n\n\n\nAnxiang\n24847.20\n24650.50\nPOLYGON ((112.0625 29.75523…\n\n\nHanshou\n22724.80\n22434.17\nPOLYGON ((112.2288 29.11684…\n\n\nJinshi\n24143.25\n26233.00\nPOLYGON ((111.8927 29.6013,…\n\n\nLi\n27737.50\n27084.60\nPOLYGON ((111.3731 29.94649…\n\n\nLinli\n27270.25\n26927.00\nPOLYGON ((111.6324 29.76288…\n\n\nShimen\n21248.80\n22230.17\nPOLYGON ((110.8825 30.11675…\n\n\nLiuyang\n43747.00\n47621.20\nPOLYGON ((113.9905 28.5682,…\n\n\nNingxiang\n33582.71\n37160.12\nPOLYGON ((112.7181 28.38299…\n\n\nWangcheng\n45651.17\n49224.71\nPOLYGON ((112.7914 28.52688…\n\n\nAnren\n32027.62\n29886.89\nPOLYGON ((113.1757 26.82734…\n\n\nGuidong\n32671.00\n26627.50\nPOLYGON ((114.1799 26.20117…\n\n\nJiahe\n20810.00\n22690.17\nPOLYGON ((112.4425 25.74358…\n\n\nLinwu\n25711.50\n25366.40\nPOLYGON ((112.5914 25.55143…\n\n\nRucheng\n30672.33\n25825.75\nPOLYGON ((113.6759 25.87578…\n\n\nYizhang\n33457.75\n30329.00\nPOLYGON ((113.2621 25.68394…\n\n\nYongxing\n31689.20\n32682.83\nPOLYGON ((113.3169 26.41843…\n\n\nZixing\n20269.00\n25948.62\nPOLYGON ((113.7311 26.16259…\n\n\nChangning\n23901.60\n23987.67\nPOLYGON ((112.6144 26.60198…\n\n\nHengdong\n25126.17\n25463.14\nPOLYGON ((113.1056 27.21007…\n\n\nHengnan\n21903.43\n21904.38\nPOLYGON ((112.7599 26.98149…\n\n\nHengshan\n22718.60\n23127.50\nPOLYGON ((112.607 27.4689, …\n\n\nLeiyang\n25918.80\n25949.83\nPOLYGON ((112.9996 26.69276…\n\n\nQidong\n20307.00\n20018.75\nPOLYGON ((111.7818 27.0383,…\n\n\nChenxi\n20023.80\n19524.17\nPOLYGON ((110.2624 28.21778…\n\n\nZhongfang\n16576.80\n18955.00\nPOLYGON ((109.9431 27.72858…\n\n\nHuitong\n18667.00\n17800.40\nPOLYGON ((109.9419 27.10512…\n\n\nJingzhou\n14394.67\n15883.00\nPOLYGON ((109.8186 26.75842…\n\n\nMayang\n19848.80\n18831.33\nPOLYGON ((109.795 27.98008,…\n\n\nTongdao\n15516.33\n14832.50\nPOLYGON ((109.9294 26.46561…\n\n\nXinhuang\n20518.00\n17965.00\nPOLYGON ((109.227 27.43733,…\n\n\nXupu\n17572.00\n17159.89\nPOLYGON ((110.7189 28.30485…\n\n\nYuanling\n15200.12\n16199.44\nPOLYGON ((110.9652 28.99895…\n\n\nZhijiang\n18413.80\n18764.50\nPOLYGON ((109.8818 27.60661…\n\n\nLengshuijiang\n14419.33\n26878.75\nPOLYGON ((111.5307 27.81472…\n\n\nShuangfeng\n24094.50\n23188.86\nPOLYGON ((112.263 27.70421,…\n\n\nXinhua\n22019.83\n20788.14\nPOLYGON ((111.3345 28.19642…\n\n\nChengbu\n12923.50\n12365.20\nPOLYGON ((110.4455 26.69317…\n\n\nDongan\n14756.00\n15985.00\nPOLYGON ((111.4531 26.86812…\n\n\nDongkou\n13869.80\n13764.83\nPOLYGON ((110.6622 27.37305…\n\n\nLonghui\n12296.67\n11907.43\nPOLYGON ((110.985 27.65983,…\n\n\nShaodong\n15775.17\n17128.14\nPOLYGON ((111.9054 27.40254…\n\n\nSuining\n14382.86\n14593.62\nPOLYGON ((110.389 27.10006,…\n\n\nWugang\n11566.33\n11644.29\nPOLYGON ((110.9878 27.03345…\n\n\nXinning\n13199.50\n12706.00\nPOLYGON ((111.0736 26.84627…\n\n\nXinshao\n23412.00\n21712.29\nPOLYGON ((111.6013 27.58275…\n\n\nShaoshan\n39541.00\n43548.25\nPOLYGON ((112.5391 27.97742…\n\n\nXiangxiang\n36186.60\n35049.00\nPOLYGON ((112.4549 28.05783…\n\n\nBaojing\n16559.60\n16226.83\nPOLYGON ((109.7015 28.82844…\n\n\nFenghuang\n20772.50\n19294.40\nPOLYGON ((109.5239 28.19206…\n\n\nGuzhang\n19471.20\n18156.00\nPOLYGON ((109.8968 28.74034…\n\n\nHuayuan\n19827.33\n19954.75\nPOLYGON ((109.5647 28.61712…\n\n\nJishou\n15466.80\n18145.17\nPOLYGON ((109.8375 28.4696,…\n\n\nLongshan\n12925.67\n12132.75\nPOLYGON ((109.6337 29.62521…\n\n\nLuxi\n18577.17\n18419.29\nPOLYGON ((110.1067 28.41835…\n\n\nYongshun\n14943.00\n14050.83\nPOLYGON ((110.0003 29.29499…\n\n\nAnhua\n24913.00\n23619.75\nPOLYGON ((111.6034 28.63716…\n\n\nNan\n25093.00\n24552.71\nPOLYGON ((112.3232 29.46074…\n\n\nYuanjiang\n24428.80\n24733.67\nPOLYGON ((112.4391 29.1791,…\n\n\nJianghua\n17003.00\n16762.60\nPOLYGON ((111.6461 25.29661…\n\n\nLanshan\n21143.75\n20932.60\nPOLYGON ((112.2286 25.61123…\n\n\nNingyuan\n20435.00\n19467.75\nPOLYGON ((112.0715 26.09892…\n\n\nShuangpai\n17131.33\n18334.00\nPOLYGON ((111.8864 26.11957…\n\n\nXintian\n24569.75\n22541.00\nPOLYGON ((112.2578 26.0796,…\n\n\nHuarong\n23835.50\n26028.00\nPOLYGON ((112.9242 29.69134…\n\n\nLinxiang\n26360.00\n29128.50\nPOLYGON ((113.5502 29.67418…\n\n\nMiluo\n47383.40\n46569.00\nPOLYGON ((112.9902 29.02139…\n\n\nPingjiang\n55157.75\n47576.60\nPOLYGON ((113.8436 29.06152…\n\n\nXiangyin\n37058.00\n36545.50\nPOLYGON ((112.9173 28.98264…\n\n\nCili\n21546.67\n20838.50\nPOLYGON ((110.8822 29.69017…\n\n\nChaling\n23348.67\n22531.00\nPOLYGON ((113.7666 27.10573…\n\n\nLiling\n42323.67\n42115.50\nPOLYGON ((113.5673 27.94346…\n\n\nYanling\n28938.60\n27619.00\nPOLYGON ((113.9292 26.6154,…\n\n\nYou\n25880.80\n27611.33\nPOLYGON ((113.5879 27.41324…\n\n\nZhuzhou\n47345.67\n44523.29\nPOLYGON ((113.2493 28.02411…\n\n\nSangzhi\n18711.33\n18127.43\nPOLYGON ((110.556 29.40543,…\n\n\nYueyang\n29087.29\n28746.38\nPOLYGON ((113.343 29.61064,…\n\n\nQiyang\n20748.29\n20734.50\nPOLYGON ((111.5563 26.81318…\n\n\nTaojiang\n35933.71\n33880.62\nPOLYGON ((112.0508 28.67265…\n\n\nShaoyang\n15439.71\n14716.38\nPOLYGON ((111.5013 27.30207…\n\n\nLianyuan\n29787.50\n28516.22\nPOLYGON ((111.6789 28.02946…\n\n\nHongjiang\n18145.00\n18086.14\nPOLYGON ((110.1441 27.47513…\n\n\nHengyang\n21617.00\n21244.50\nPOLYGON ((112.7144 26.98613…\n\n\nGuiyang\n29203.89\n29568.80\nPOLYGON ((113.0811 26.04963…\n\n\nChangsha\n41363.67\n48119.71\nPOLYGON ((112.9421 28.03722…\n\n\nTaoyuan\n22259.09\n22310.75\nPOLYGON ((112.0612 29.32855…\n\n\nXiangtan\n44939.56\n43151.60\nPOLYGON ((113.0426 27.8942,…\n\n\nDao\n16902.00\n17133.40\nPOLYGON ((111.498 25.81679,…\n\n\nJiangyong\n16930.00\n17009.33\nPOLYGON ((111.3659 25.39472…\n\n\n\n\n\n\n# Plot both lag_gdppc and w_ave_gdppc side by side \nw_avg_gdppc &lt;- qtm(hunan, \"lag_window_avg GDPPC\") + \n  tm_layout(legend.text.size = 0.5,  # Adjust the size of the legend text\n            legend.title.size = 0.8)    # Adjust the size of the legend title\ntmap_arrange(lag_gdppc, w_avg_gdppc, asp=1, ncol=2)\n\n\n\n\n\n\n\n\n\n\n8.7.4 Spatial window sum\n\n# Add diagonal element to neighbour list\nwm_qs &lt;- include.self(wm_q)\nwm_qs\n\nNeighbour list object:\nNumber of regions: 88 \nNumber of nonzero links: 536 \nPercentage nonzero weights: 6.921488 \nAverage number of links: 6.090909 \n\n\n\n# Assign binary weights to neighbour structure that includes diagonal element\nb_weights &lt;- lapply(wm_qs, function(x) 0*x + 1)\nb_weights[1]\n\n[[1]]\n[1] 1 1 1 1 1 1\n\n\n\n# Explicitly assign weight values\nb_weights2 &lt;- nb2listw(wm_qs, \n                       glist = b_weights, \n                       style = \"B\")\nb_weights2\n\nCharacteristics of weights list object:\nNeighbour list object:\nNumber of regions: 88 \nNumber of nonzero links: 536 \nPercentage nonzero weights: 6.921488 \nAverage number of links: 6.090909 \n\nWeights style: B \nWeights constants summary:\n   n   nn  S0   S1    S2\nB 88 7744 536 1072 14160\n\n\n\n# Compute lag variable with lag.listw()\nw_sum_gdppc &lt;- list(hunan$NAME_3, lag.listw(b_weights2, hunan$GDPPC))\nw_sum_gdppc\n\n[[1]]\n [1] \"Anxiang\"       \"Hanshou\"       \"Jinshi\"        \"Li\"           \n [5] \"Linli\"         \"Shimen\"        \"Liuyang\"       \"Ningxiang\"    \n [9] \"Wangcheng\"     \"Anren\"         \"Guidong\"       \"Jiahe\"        \n[13] \"Linwu\"         \"Rucheng\"       \"Yizhang\"       \"Yongxing\"     \n[17] \"Zixing\"        \"Changning\"     \"Hengdong\"      \"Hengnan\"      \n[21] \"Hengshan\"      \"Leiyang\"       \"Qidong\"        \"Chenxi\"       \n[25] \"Zhongfang\"     \"Huitong\"       \"Jingzhou\"      \"Mayang\"       \n[29] \"Tongdao\"       \"Xinhuang\"      \"Xupu\"          \"Yuanling\"     \n[33] \"Zhijiang\"      \"Lengshuijiang\" \"Shuangfeng\"    \"Xinhua\"       \n[37] \"Chengbu\"       \"Dongan\"        \"Dongkou\"       \"Longhui\"      \n[41] \"Shaodong\"      \"Suining\"       \"Wugang\"        \"Xinning\"      \n[45] \"Xinshao\"       \"Shaoshan\"      \"Xiangxiang\"    \"Baojing\"      \n[49] \"Fenghuang\"     \"Guzhang\"       \"Huayuan\"       \"Jishou\"       \n[53] \"Longshan\"      \"Luxi\"          \"Yongshun\"      \"Anhua\"        \n[57] \"Nan\"           \"Yuanjiang\"     \"Jianghua\"      \"Lanshan\"      \n[61] \"Ningyuan\"      \"Shuangpai\"     \"Xintian\"       \"Huarong\"      \n[65] \"Linxiang\"      \"Miluo\"         \"Pingjiang\"     \"Xiangyin\"     \n[69] \"Cili\"          \"Chaling\"       \"Liling\"        \"Yanling\"      \n[73] \"You\"           \"Zhuzhou\"       \"Sangzhi\"       \"Yueyang\"      \n[77] \"Qiyang\"        \"Taojiang\"      \"Shaoyang\"      \"Lianyuan\"     \n[81] \"Hongjiang\"     \"Hengyang\"      \"Guiyang\"       \"Changsha\"     \n[85] \"Taoyuan\"       \"Xiangtan\"      \"Dao\"           \"Jiangyong\"    \n\n[[2]]\n [1] 147903 134605 131165 135423 134635 133381 238106 297281 344573 268982\n[11] 106510 136141 126832 103303 151645 196097 207589 143926 178242 175235\n[21] 138765 155699 160150 117145 113730  89002  63532 112988  59330  35930\n[31] 154439 145795 112587 107515 162322 145517  61826  79925  82589  83352\n[41] 119897 116749  81510  63530 151986 174193 210294  97361  96472 108936\n[51]  79819 108871  48531 128935  84305 188958 171869 148402  83813 104663\n[61] 155742  73336 112705  78084  58257 279414 237883 219273  83354  90124\n[71] 168462 165714 165668 311663 126892 229971 165876 271045 117731 256646\n[81] 126603 127467 295688 336838 267729 431516  85667  51028\n\n\n\n# Convert lag variable listw object into dataframe\nw_sum_gdppc.res &lt;- as.data.frame(w_sum_gdppc)\ncolnames(w_sum_gdppc.res) &lt;- c(\"NAME_3\", \"w_sum GDPPC\")\n\n# Append w_sum GDPPC values to hunan sf dataframe\nhunan &lt;- left_join(hunan, w_sum_gdppc.res)\n\nJoining with `by = join_by(NAME_3)`\n\n# Check hunan dataframe\nhead(hunan)\n\nSimple feature collection with 6 features and 10 fields\nGeometry type: POLYGON\nDimension:     XY\nBounding box:  xmin: 110.4922 ymin: 28.61762 xmax: 112.3013 ymax: 30.12812\nGeodetic CRS:  WGS 84\n   NAME_2  ID_3  NAME_3   ENGTYPE_3  County GDPPC lag GDPPC lag_sum GDPPC\n1 Changde 21098 Anxiang      County Anxiang 23667  24847.20        124236\n2 Changde 21100 Hanshou      County Hanshou 20981  22724.80        113624\n3 Changde 21101  Jinshi County City  Jinshi 34592  24143.25         96573\n4 Changde 21102      Li      County      Li 24473  27737.50        110950\n5 Changde 21103   Linli      County   Linli 25554  27270.25        109081\n6 Changde 21104  Shimen      County  Shimen 27137  21248.80        106244\n  lag_window_avg GDPPC w_sum GDPPC                       geometry\n1             24650.50      147903 POLYGON ((112.0625 29.75523...\n2             22434.17      134605 POLYGON ((112.2288 29.11684...\n3             26233.00      131165 POLYGON ((111.8927 29.6013,...\n4             27084.60      135423 POLYGON ((111.3731 29.94649...\n5             26927.00      134635 POLYGON ((111.6324 29.76288...\n6             22230.17      133381 POLYGON ((110.8825 30.11675...\n\n\n\n# Compare values of lag sum GDPPC and Spatial window average with kable() from Knitr\nhunan %&gt;%\n  select(\"County\", \"lag_sum GDPPC\", \"w_sum GDPPC\") %&gt;%\n  kable()\n\n\n\n\n\n\n\n\n\n\nCounty\nlag_sum GDPPC\nw_sum GDPPC\ngeometry\n\n\n\n\nAnxiang\n124236\n147903\nPOLYGON ((112.0625 29.75523…\n\n\nHanshou\n113624\n134605\nPOLYGON ((112.2288 29.11684…\n\n\nJinshi\n96573\n131165\nPOLYGON ((111.8927 29.6013,…\n\n\nLi\n110950\n135423\nPOLYGON ((111.3731 29.94649…\n\n\nLinli\n109081\n134635\nPOLYGON ((111.6324 29.76288…\n\n\nShimen\n106244\n133381\nPOLYGON ((110.8825 30.11675…\n\n\nLiuyang\n174988\n238106\nPOLYGON ((113.9905 28.5682,…\n\n\nNingxiang\n235079\n297281\nPOLYGON ((112.7181 28.38299…\n\n\nWangcheng\n273907\n344573\nPOLYGON ((112.7914 28.52688…\n\n\nAnren\n256221\n268982\nPOLYGON ((113.1757 26.82734…\n\n\nGuidong\n98013\n106510\nPOLYGON ((114.1799 26.20117…\n\n\nJiahe\n104050\n136141\nPOLYGON ((112.4425 25.74358…\n\n\nLinwu\n102846\n126832\nPOLYGON ((112.5914 25.55143…\n\n\nRucheng\n92017\n103303\nPOLYGON ((113.6759 25.87578…\n\n\nYizhang\n133831\n151645\nPOLYGON ((113.2621 25.68394…\n\n\nYongxing\n158446\n196097\nPOLYGON ((113.3169 26.41843…\n\n\nZixing\n141883\n207589\nPOLYGON ((113.7311 26.16259…\n\n\nChangning\n119508\n143926\nPOLYGON ((112.6144 26.60198…\n\n\nHengdong\n150757\n178242\nPOLYGON ((113.1056 27.21007…\n\n\nHengnan\n153324\n175235\nPOLYGON ((112.7599 26.98149…\n\n\nHengshan\n113593\n138765\nPOLYGON ((112.607 27.4689, …\n\n\nLeiyang\n129594\n155699\nPOLYGON ((112.9996 26.69276…\n\n\nQidong\n142149\n160150\nPOLYGON ((111.7818 27.0383,…\n\n\nChenxi\n100119\n117145\nPOLYGON ((110.2624 28.21778…\n\n\nZhongfang\n82884\n113730\nPOLYGON ((109.9431 27.72858…\n\n\nHuitong\n74668\n89002\nPOLYGON ((109.9419 27.10512…\n\n\nJingzhou\n43184\n63532\nPOLYGON ((109.8186 26.75842…\n\n\nMayang\n99244\n112988\nPOLYGON ((109.795 27.98008,…\n\n\nTongdao\n46549\n59330\nPOLYGON ((109.9294 26.46561…\n\n\nXinhuang\n20518\n35930\nPOLYGON ((109.227 27.43733,…\n\n\nXupu\n140576\n154439\nPOLYGON ((110.7189 28.30485…\n\n\nYuanling\n121601\n145795\nPOLYGON ((110.9652 28.99895…\n\n\nZhijiang\n92069\n112587\nPOLYGON ((109.8818 27.60661…\n\n\nLengshuijiang\n43258\n107515\nPOLYGON ((111.5307 27.81472…\n\n\nShuangfeng\n144567\n162322\nPOLYGON ((112.263 27.70421,…\n\n\nXinhua\n132119\n145517\nPOLYGON ((111.3345 28.19642…\n\n\nChengbu\n51694\n61826\nPOLYGON ((110.4455 26.69317…\n\n\nDongan\n59024\n79925\nPOLYGON ((111.4531 26.86812…\n\n\nDongkou\n69349\n82589\nPOLYGON ((110.6622 27.37305…\n\n\nLonghui\n73780\n83352\nPOLYGON ((110.985 27.65983,…\n\n\nShaodong\n94651\n119897\nPOLYGON ((111.9054 27.40254…\n\n\nSuining\n100680\n116749\nPOLYGON ((110.389 27.10006,…\n\n\nWugang\n69398\n81510\nPOLYGON ((110.9878 27.03345…\n\n\nXinning\n52798\n63530\nPOLYGON ((111.0736 26.84627…\n\n\nXinshao\n140472\n151986\nPOLYGON ((111.6013 27.58275…\n\n\nShaoshan\n118623\n174193\nPOLYGON ((112.5391 27.97742…\n\n\nXiangxiang\n180933\n210294\nPOLYGON ((112.4549 28.05783…\n\n\nBaojing\n82798\n97361\nPOLYGON ((109.7015 28.82844…\n\n\nFenghuang\n83090\n96472\nPOLYGON ((109.5239 28.19206…\n\n\nGuzhang\n97356\n108936\nPOLYGON ((109.8968 28.74034…\n\n\nHuayuan\n59482\n79819\nPOLYGON ((109.5647 28.61712…\n\n\nJishou\n77334\n108871\nPOLYGON ((109.8375 28.4696,…\n\n\nLongshan\n38777\n48531\nPOLYGON ((109.6337 29.62521…\n\n\nLuxi\n111463\n128935\nPOLYGON ((110.1067 28.41835…\n\n\nYongshun\n74715\n84305\nPOLYGON ((110.0003 29.29499…\n\n\nAnhua\n174391\n188958\nPOLYGON ((111.6034 28.63716…\n\n\nNan\n150558\n171869\nPOLYGON ((112.3232 29.46074…\n\n\nYuanjiang\n122144\n148402\nPOLYGON ((112.4391 29.1791,…\n\n\nJianghua\n68012\n83813\nPOLYGON ((111.6461 25.29661…\n\n\nLanshan\n84575\n104663\nPOLYGON ((112.2286 25.61123…\n\n\nNingyuan\n143045\n155742\nPOLYGON ((112.0715 26.09892…\n\n\nShuangpai\n51394\n73336\nPOLYGON ((111.8864 26.11957…\n\n\nXintian\n98279\n112705\nPOLYGON ((112.2578 26.0796,…\n\n\nHuarong\n47671\n78084\nPOLYGON ((112.9242 29.69134…\n\n\nLinxiang\n26360\n58257\nPOLYGON ((113.5502 29.67418…\n\n\nMiluo\n236917\n279414\nPOLYGON ((112.9902 29.02139…\n\n\nPingjiang\n220631\n237883\nPOLYGON ((113.8436 29.06152…\n\n\nXiangyin\n185290\n219273\nPOLYGON ((112.9173 28.98264…\n\n\nCili\n64640\n83354\nPOLYGON ((110.8822 29.69017…\n\n\nChaling\n70046\n90124\nPOLYGON ((113.7666 27.10573…\n\n\nLiling\n126971\n168462\nPOLYGON ((113.5673 27.94346…\n\n\nYanling\n144693\n165714\nPOLYGON ((113.9292 26.6154,…\n\n\nYou\n129404\n165668\nPOLYGON ((113.5879 27.41324…\n\n\nZhuzhou\n284074\n311663\nPOLYGON ((113.2493 28.02411…\n\n\nSangzhi\n112268\n126892\nPOLYGON ((110.556 29.40543,…\n\n\nYueyang\n203611\n229971\nPOLYGON ((113.343 29.61064,…\n\n\nQiyang\n145238\n165876\nPOLYGON ((111.5563 26.81318…\n\n\nTaojiang\n251536\n271045\nPOLYGON ((112.0508 28.67265…\n\n\nShaoyang\n108078\n117731\nPOLYGON ((111.5013 27.30207…\n\n\nLianyuan\n238300\n256646\nPOLYGON ((111.6789 28.02946…\n\n\nHongjiang\n108870\n126603\nPOLYGON ((110.1441 27.47513…\n\n\nHengyang\n108085\n127467\nPOLYGON ((112.7144 26.98613…\n\n\nGuiyang\n262835\n295688\nPOLYGON ((113.0811 26.04963…\n\n\nChangsha\n248182\n336838\nPOLYGON ((112.9421 28.03722…\n\n\nTaoyuan\n244850\n267729\nPOLYGON ((112.0612 29.32855…\n\n\nXiangtan\n404456\n431516\nPOLYGON ((113.0426 27.8942,…\n\n\nDao\n67608\n85667\nPOLYGON ((111.498 25.81679,…\n\n\nJiangyong\n33860\n51028\nPOLYGON ((111.3659 25.39472…\n\n\n\n\n\n\n# Plot both lag_sum GDPPC and w_sum_gdppc side by side \nw_sum_gdppc &lt;- qtm(hunan, \"w_sum GDPPC\") + \n  tm_layout(legend.text.size = 0.5,  # Adjust the size of the legend text\n            legend.title.size = 0.8)    # Adjust the size of the legend title\ntmap_arrange(lag_sum_gdppc, w_sum_gdppc, asp=1, ncol=2)"
  },
  {
    "objectID": "Hands-On_Ex/Hands-On_Ex_05/Hands-On_Ex05.html#setting-up",
    "href": "Hands-On_Ex/Hands-On_Ex_05/Hands-On_Ex05.html#setting-up",
    "title": "Hands-On Exercise 05",
    "section": "9.1 Setting Up",
    "text": "9.1 Setting Up\n\n9.1.1 Loading the R packages\n\npacman::p_load(sf, spdep, tmap, tidyverse)\n\n\n\n9.1.2 Importing spatial data\n\nHunan ShapefileHunan 2012\n\n\n\n# Load shapefile\nhunan &lt;- st_read(dsn = \"data/geospatial\", layer = \"Hunan\")\n\nReading layer `Hunan' from data source \n  `C:\\Users\\Henry\\Desktop\\SMU Masters\\2024-2025 T1\\Geospatial Analytics & Applications\\Project\\GeospatialWebsite\\Hands-On_Ex\\Hands-On_Ex_05\\data\\geospatial' \n  using driver `ESRI Shapefile'\nSimple feature collection with 88 features and 7 fields\nGeometry type: POLYGON\nDimension:     XY\nBounding box:  xmin: 108.7831 ymin: 24.6342 xmax: 114.2544 ymax: 30.12812\nGeodetic CRS:  WGS 84\n\n\n\n# Check crs\nst_crs(hunan)\n\nCoordinate Reference System:\n  User input: WGS 84 \n  wkt:\nGEOGCRS[\"WGS 84\",\n    DATUM[\"World Geodetic System 1984\",\n        ELLIPSOID[\"WGS 84\",6378137,298.257223563,\n            LENGTHUNIT[\"metre\",1]]],\n    PRIMEM[\"Greenwich\",0,\n        ANGLEUNIT[\"degree\",0.0174532925199433]],\n    CS[ellipsoidal,2],\n        AXIS[\"latitude\",north,\n            ORDER[1],\n            ANGLEUNIT[\"degree\",0.0174532925199433]],\n        AXIS[\"longitude\",east,\n            ORDER[2],\n            ANGLEUNIT[\"degree\",0.0174532925199433]],\n    ID[\"EPSG\",4326]]\n\n\n\n# Check crs\nglimpse(hunan)\n\nRows: 88\nColumns: 8\n$ NAME_2     &lt;chr&gt; \"Changde\", \"Changde\", \"Changde\", \"Changde\", \"Changde\", \"Cha…\n$ ID_3       &lt;int&gt; 21098, 21100, 21101, 21102, 21103, 21104, 21109, 21110, 211…\n$ NAME_3     &lt;chr&gt; \"Anxiang\", \"Hanshou\", \"Jinshi\", \"Li\", \"Linli\", \"Shimen\", \"L…\n$ ENGTYPE_3  &lt;chr&gt; \"County\", \"County\", \"County City\", \"County\", \"County\", \"Cou…\n$ Shape_Leng &lt;dbl&gt; 1.869074, 2.360691, 1.425620, 3.474325, 2.289506, 4.171918,…\n$ Shape_Area &lt;dbl&gt; 0.10056190, 0.19978745, 0.05302413, 0.18908121, 0.11450357,…\n$ County     &lt;chr&gt; \"Anxiang\", \"Hanshou\", \"Jinshi\", \"Li\", \"Linli\", \"Shimen\", \"L…\n$ geometry   &lt;POLYGON [°]&gt; POLYGON ((112.0625 29.75523..., POLYGON ((112.2288 …\n\n\n\n\n\n# Load csv file\nhunan2012 &lt;- read_csv(\"data/aspatial/Hunan_2012.csv\")\n\nRows: 88 Columns: 29\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr  (2): County, City\ndbl (27): avg_wage, deposite, FAI, Gov_Rev, Gov_Exp, GDP, GDPPC, GIO, Loan, ...\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\n\n\n# Check file\nglimpse(hunan2012)\n\nRows: 88\nColumns: 29\n$ County      &lt;chr&gt; \"Anhua\", \"Anren\", \"Anxiang\", \"Baojing\", \"Chaling\", \"Changn…\n$ City        &lt;chr&gt; \"Yiyang\", \"Chenzhou\", \"Changde\", \"Hunan West\", \"Zhuzhou\", …\n$ avg_wage    &lt;dbl&gt; 30544, 28058, 31935, 30843, 31251, 28518, 54540, 28597, 33…\n$ deposite    &lt;dbl&gt; 10967.0, 4598.9, 5517.2, 2250.0, 8241.4, 10860.0, 24332.0,…\n$ FAI         &lt;dbl&gt; 6831.7, 6386.1, 3541.0, 1005.4, 6508.4, 7920.0, 33624.0, 1…\n$ Gov_Rev     &lt;dbl&gt; 456.72, 220.57, 243.64, 192.59, 620.19, 769.86, 5350.00, 1…\n$ Gov_Exp     &lt;dbl&gt; 2703.0, 1454.7, 1779.5, 1379.1, 1947.0, 2631.6, 7885.5, 11…\n$ GDP         &lt;dbl&gt; 13225.0, 4941.2, 12482.0, 4087.9, 11585.0, 19886.0, 88009.…\n$ GDPPC       &lt;dbl&gt; 14567, 12761, 23667, 14563, 20078, 24418, 88656, 10132, 17…\n$ GIO         &lt;dbl&gt; 9276.90, 4189.20, 5108.90, 3623.50, 9157.70, 37392.00, 513…\n$ Loan        &lt;dbl&gt; 3954.90, 2555.30, 2806.90, 1253.70, 4287.40, 4242.80, 4053…\n$ NIPCR       &lt;dbl&gt; 3528.3, 3271.8, 7693.7, 4191.3, 3887.7, 9528.0, 17070.0, 3…\n$ Bed         &lt;dbl&gt; 2718, 970, 1931, 927, 1449, 3605, 3310, 582, 2170, 2179, 1…\n$ Emp         &lt;dbl&gt; 494.310, 290.820, 336.390, 195.170, 330.290, 548.610, 670.…\n$ EmpR        &lt;dbl&gt; 441.4, 255.4, 270.5, 145.6, 299.0, 415.1, 452.0, 127.6, 21…\n$ EmpRT       &lt;dbl&gt; 338.0, 99.4, 205.9, 116.4, 154.0, 273.7, 219.4, 94.4, 174.…\n$ Pri_Stu     &lt;dbl&gt; 54.175, 33.171, 19.584, 19.249, 33.906, 81.831, 59.151, 18…\n$ Sec_Stu     &lt;dbl&gt; 32.830, 17.505, 17.819, 11.831, 20.548, 44.485, 39.685, 7.…\n$ Household   &lt;dbl&gt; 290.4, 104.6, 148.1, 73.2, 148.7, 211.2, 300.3, 76.1, 139.…\n$ Household_R &lt;dbl&gt; 234.5, 121.9, 135.4, 69.9, 139.4, 211.7, 248.4, 59.6, 110.…\n$ NOIP        &lt;dbl&gt; 101, 34, 53, 18, 106, 115, 214, 17, 55, 70, 44, 84, 74, 17…\n$ Pop_R       &lt;dbl&gt; 670.3, 243.2, 346.0, 184.1, 301.6, 448.2, 475.1, 189.6, 31…\n$ RSCG        &lt;dbl&gt; 5760.60, 2386.40, 3957.90, 768.04, 4009.50, 5220.40, 22604…\n$ Pop_T       &lt;dbl&gt; 910.8, 388.7, 528.3, 281.3, 578.4, 816.3, 998.6, 256.7, 45…\n$ Agri        &lt;dbl&gt; 4942.253, 2357.764, 4524.410, 1118.561, 3793.550, 6430.782…\n$ Service     &lt;dbl&gt; 5414.5, 3814.1, 14100.0, 541.8, 5444.0, 13074.6, 17726.6, …\n$ Disp_Inc    &lt;dbl&gt; 12373, 16072, 16610, 13455, 20461, 20868, 183252, 12379, 1…\n$ RORP        &lt;dbl&gt; 0.7359464, 0.6256753, 0.6549309, 0.6544614, 0.5214385, 0.5…\n$ ROREmp      &lt;dbl&gt; 0.8929619, 0.8782065, 0.8041262, 0.7460163, 0.9052651, 0.7…\n\n\n\n\n\n\n\n9.1.3 Merging both datasets\nBoth datasets have the common field “County”\n\n# Merge both datasets\nhunan &lt;- left_join(hunan, hunan2012, by = \"County\") %&gt;%\n  # select(1:4, 7, 15)\n  select(`NAME_2`, `ID_3`, `NAME_3`, `ENGTYPE_3`, `County`, `GDPPC`, `geometry`) # Using Column names for readability\n# See result\nglimpse(hunan)\n\nRows: 88\nColumns: 7\n$ NAME_2    &lt;chr&gt; \"Changde\", \"Changde\", \"Changde\", \"Changde\", \"Changde\", \"Chan…\n$ ID_3      &lt;int&gt; 21098, 21100, 21101, 21102, 21103, 21104, 21109, 21110, 2111…\n$ NAME_3    &lt;chr&gt; \"Anxiang\", \"Hanshou\", \"Jinshi\", \"Li\", \"Linli\", \"Shimen\", \"Li…\n$ ENGTYPE_3 &lt;chr&gt; \"County\", \"County\", \"County City\", \"County\", \"County\", \"Coun…\n$ County    &lt;chr&gt; \"Anxiang\", \"Hanshou\", \"Jinshi\", \"Li\", \"Linli\", \"Shimen\", \"Li…\n$ GDPPC     &lt;dbl&gt; 23667, 20981, 34592, 24473, 25554, 27137, 63118, 62202, 7066…\n$ geometry  &lt;POLYGON [°]&gt; POLYGON ((112.0625 29.75523..., POLYGON ((112.2288 2…"
  },
  {
    "objectID": "Hands-On_Ex/Hands-On_Ex_05/Hands-On_Ex05.html#global-measures-of-spatial-autocorrelation",
    "href": "Hands-On_Ex/Hands-On_Ex_05/Hands-On_Ex05.html#global-measures-of-spatial-autocorrelation",
    "title": "Hands-On Exercise 05",
    "section": "9.3 Global Measures of Spatial Autocorrelation",
    "text": "9.3 Global Measures of Spatial Autocorrelation\n\n# Compute Queen contiguity weight matrices\nwm_q &lt;- poly2nb(hunan, \n                queen=TRUE)\nsummary(wm_q)\n\nNeighbour list object:\nNumber of regions: 88 \nNumber of nonzero links: 448 \nPercentage nonzero weights: 5.785124 \nAverage number of links: 5.090909 \nLink number distribution:\n\n 1  2  3  4  5  6  7  8  9 11 \n 2  2 12 16 24 14 11  4  2  1 \n2 least connected regions:\n30 65 with 1 link\n1 most connected region:\n85 with 11 links\n\n\n\n# Assign weights to each neighbouring polygon\nrswm_q &lt;- nb2listw(wm_q, \n                   style=\"W\", \n                   zero.policy = TRUE)\nrswm_q\n\nCharacteristics of weights list object:\nNeighbour list object:\nNumber of regions: 88 \nNumber of nonzero links: 448 \nPercentage nonzero weights: 5.785124 \nAverage number of links: 5.090909 \n\nWeights style: W \nWeights constants summary:\n   n   nn S0       S1       S2\nW 88 7744 88 37.86334 365.9147\n\n\n\nInput of nb2listw() must be nb object class. \nStyle: \n\nB &gt;&gt; basic binary coding \nW &gt;&gt; row standardised (sums over all links to n) \nC &gt;&gt; globally standardised (sums over all links to n) \nU &gt;&gt; C divided by the number of neighbours (sums over all links to unity) \nS &gt;&gt; variance-stabilizing coding scheme (sums over all links to n) \n\nIf zero policy = TRUE, spatially lagged value x for zero-neighbour region = 0"
  },
  {
    "objectID": "Hands-On_Ex/Hands-On_Ex_05/Hands-On_Ex05.html#global-measures-of-spatial-autocorrelation-morans-i",
    "href": "Hands-On_Ex/Hands-On_Ex_05/Hands-On_Ex05.html#global-measures-of-spatial-autocorrelation-morans-i",
    "title": "Hands-On Exercise 05",
    "section": "9.4 Global Measures of Spatial Autocorrelation (Moran’s I)",
    "text": "9.4 Global Measures of Spatial Autocorrelation (Moran’s I)\n\n# Perform Moran's I statistical test with moran.test() of spdep\nmoran.test(hunan$GDPPC, \n           listw=rswm_q, \n           zero.policy = TRUE, \n           na.action=na.omit)\n\n\n    Moran I test under randomisation\n\ndata:  hunan$GDPPC  \nweights: rswm_q    \n\nMoran I statistic standard deviate = 4.7351, p-value = 1.095e-06\nalternative hypothesis: greater\nsample estimates:\nMoran I statistic       Expectation          Variance \n      0.300749970      -0.011494253       0.004348351 \n\n\n\n# Permutation test for Moran's I statistic with moran.mc() of spdep\nset.seed(1234)\nbperm= moran.mc(hunan$GDPPC, \n                listw=rswm_q, \n                nsim=999, \n                zero.policy = TRUE, \n                na.action=na.omit)\nbperm\n\n\n    Monte-Carlo simulation of Moran I\n\ndata:  hunan$GDPPC \nweights: rswm_q  \nnumber of simulations + 1: 1000 \n\nstatistic = 0.30075, observed rank = 1000, p-value = 0.001\nalternative hypothesis: greater\n\n\nP-value &lt; 0.05, reject null hypothesis and conclude that there is some level of spatial clustering in GPD per capita with strong evidence of positive spatial autocorrelation\n\n# Mean\nmean(bperm$res[1:999])\n\n[1] -0.01504572\n\n# Variance\nvar(bperm$res[1:999])\n\n[1] 0.004371574\n\n# Sumamry\nsummary(bperm$res[1:999])\n\n    Min.  1st Qu.   Median     Mean  3rd Qu.     Max. \n-0.18339 -0.06168 -0.02125 -0.01505  0.02611  0.27593 \n\n\n\n# Plot histogram of permutations\nhist(bperm$res, \n     freq=TRUE, \n     breaks=20, \n     xlab=\"Simulated Moran's I\")\nabline(v=0, \n       col=\"red\") \n\n\n\n\n\n\n\n\nFrom random simulations, most of Moran’s I values fall close to 0, which results in not rejecting the null hypothesis that there is no spatial autocorrelation.\nHowever, given that observed Moran’s I is ~0.3, it suggests that there is positive spatial autocorrelation\n\n# Plotting with ggplot2 package instead\nbperm_res &lt;- data.frame(Simulated_I = bperm$res)\nggplot2::ggplot(bperm_res, aes(x = Simulated_I)) +\n  geom_histogram(binwidth = 0.02, fill = \"gray\", color = \"black\") +\n  geom_vline(xintercept = 0, color = \"red\") +\n  labs(title = \"Histogram of bperm$res\", \n       x = \"Simulated Moran's I\", \n       y = \"Frequency\") +\n  theme_minimal() +\n  theme(plot.title = element_text(hjust = 0.5))"
  },
  {
    "objectID": "Hands-On_Ex/Hands-On_Ex_05/Hands-On_Ex05.html#global-measures-of-spatial-autocorrelation-gearys-c",
    "href": "Hands-On_Ex/Hands-On_Ex_05/Hands-On_Ex05.html#global-measures-of-spatial-autocorrelation-gearys-c",
    "title": "Hands-On Exercise 05",
    "section": "9.5 Global Measures of Spatial Autocorrelation (Geary’s C)",
    "text": "9.5 Global Measures of Spatial Autocorrelation (Geary’s C)\n\n# Perform Geary's C statistical test with geary.test() of spdep\ngeary.test(hunan$GDPPC, listw=rswm_q)\n\n\n    Geary C test under randomisation\n\ndata:  hunan$GDPPC \nweights: rswm_q   \n\nGeary C statistic standard deviate = 3.6108, p-value = 0.0001526\nalternative hypothesis: Expectation greater than statistic\nsample estimates:\nGeary C statistic       Expectation          Variance \n        0.6907223         1.0000000         0.0073364 \n\n\nP value &lt; 0.05 (from theoretical distribution), reject null hypothesis and conclude that there is positive spatial autocorrelation (given that Geary’s C statistic is &lt;1.)\n\n# Permutation test for Geary's C statistic with geary.mc() of spdep\nset.seed(1234)\nbperm &lt;- geary.mc(hunan$GDPPC, \n               listw=rswm_q, \n               nsim=999)\nbperm\n\n\n    Monte-Carlo simulation of Geary C\n\ndata:  hunan$GDPPC \nweights: rswm_q  \nnumber of simulations + 1: 1000 \n\nstatistic = 0.69072, observed rank = 1, p-value = 0.001\nalternative hypothesis: greater\n\n\nP value &lt; 0.05 (from random permuations), reject null hypothesis and conclude that there is positive spatial autocorrelation (given that Geary’s C statistic is &lt;1.)\n\n# Mean\nmean(bperm$res[1:999])\n\n[1] 1.004402\n\n# Variance\nvar(bperm$res[1:999])\n\n[1] 0.007436493\n\n# Sumamry\nsummary(bperm$res[1:999])\n\n   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. \n 0.7142  0.9502  1.0052  1.0044  1.0595  1.2722 \n\n\n\n# Plot histogram of permutations\nhist(bperm$res, freq=TRUE, breaks=20, xlab=\"Simulated Geary c\")\nabline(v=1, col=\"red\") \n\n\n\n\n\n\n\n\nGenerally random permutations of Geary C will fall close to 1"
  },
  {
    "objectID": "Hands-On_Ex/Hands-On_Ex_05/Hands-On_Ex05.html#spatial-correlogram",
    "href": "Hands-On_Ex/Hands-On_Ex_05/Hands-On_Ex05.html#spatial-correlogram",
    "title": "Hands-On Exercise 05",
    "section": "9.6 Spatial Correlogram",
    "text": "9.6 Spatial Correlogram\nCompute 6-lag spatial correlogram of GDPPC\n\n# Compute 6-lag spatial correlogram of GDPPC with Moran's I global spatial autocorrelation\nMI_corr &lt;- sp.correlogram(wm_q, \n                          hunan$GDPPC, \n                          order=6, \n                          method=\"I\", \n                          style=\"W\")\nplot(MI_corr)\n\n\n\n\n\n\n\n\n\n# Check analysis results\nprint(MI_corr)\n\nSpatial correlogram for hunan$GDPPC \nmethod: Moran's I\n         estimate expectation   variance standard deviate Pr(I) two sided    \n1 (88)  0.3007500  -0.0114943  0.0043484           4.7351       2.189e-06 ***\n2 (88)  0.2060084  -0.0114943  0.0020962           4.7505       2.029e-06 ***\n3 (88)  0.0668273  -0.0114943  0.0014602           2.0496        0.040400 *  \n4 (88)  0.0299470  -0.0114943  0.0011717           1.2107        0.226015    \n5 (88) -0.1530471  -0.0114943  0.0012440          -4.0134       5.984e-05 ***\n6 (88) -0.1187070  -0.0114943  0.0016791          -2.6164        0.008886 ** \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\n\n\nLag 1 - highly statistically significant (***), strong positive spatial autocorrelation (0.3007).\nLag 2 - highly statistically significant (***), positive spatial autocorrelation (0.206).\nLag 3 - statistically significant (*), weak positive spatial autocorrelation (0.0668).\nLag 4 - not statistically significant.\nLag 5 - highly statistically significant (***), negative spatial autocorrelation (-0.153).\nLag 6 - statistically significant (**), negative spatial autocorrelation (-0.1187).\n\nRegions that are closer together have stronger positive autocorrelation with similar GDPPC values. But as the lag increases, regions have stronger negative autocorrelation with dissimilar GDPPC values.\n\n# Compute 6-lag spatial correlogram of GDPPC with Geary's C global spatial autocorrelation\nGC_corr &lt;- sp.correlogram(wm_q, \n                          hunan$GDPPC, \n                          order=6, \n                          method=\"C\", \n                          style=\"W\")\n# Plot results\nplot(GC_corr)\n\n\n\n\n\n\n\n\n\n# Check analysis results\nprint(GC_corr)\n\nSpatial correlogram for hunan$GDPPC \nmethod: Geary's C\n        estimate expectation  variance standard deviate Pr(I) two sided    \n1 (88) 0.6907223   1.0000000 0.0073364          -3.6108       0.0003052 ***\n2 (88) 0.7630197   1.0000000 0.0049126          -3.3811       0.0007220 ***\n3 (88) 0.9397299   1.0000000 0.0049005          -0.8610       0.3892612    \n4 (88) 1.0098462   1.0000000 0.0039631           0.1564       0.8757128    \n5 (88) 1.2008204   1.0000000 0.0035568           3.3673       0.0007592 ***\n6 (88) 1.0773386   1.0000000 0.0058042           1.0151       0.3100407    \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1"
  },
  {
    "objectID": "Hands-On_Ex/Hands-On_Ex_05/Hands-On_Ex05.html#local-indicators-of-spatial-association-lisa",
    "href": "Hands-On_Ex/Hands-On_Ex_05/Hands-On_Ex05.html#local-indicators-of-spatial-association-lisa",
    "title": "Hands-On Exercise 05",
    "section": "10.1 Local Indicators of Spatial Association (LISA)",
    "text": "10.1 Local Indicators of Spatial Association (LISA)\n\n# Compute local Moran's I\nfips &lt;- order(hunan$County)\nlocalMI &lt;- localmoran(hunan$GDPPC, rswm_q)\nhead(localMI)\n\n            Ii          E.Ii       Var.Ii        Z.Ii Pr(z != E(Ii))\n1 -0.001468468 -2.815006e-05 4.723841e-04 -0.06626904      0.9471636\n2  0.025878173 -6.061953e-04 1.016664e-02  0.26266425      0.7928094\n3 -0.011987646 -5.366648e-03 1.133362e-01 -0.01966705      0.9843090\n4  0.001022468 -2.404783e-07 5.105969e-06  0.45259801      0.6508382\n5  0.014814881 -6.829362e-05 1.449949e-03  0.39085814      0.6959021\n6 -0.038793829 -3.860263e-04 6.475559e-03 -0.47728835      0.6331568\n\n\n\n# Content of local Moran matrix\nprintCoefmat(data.frame(\n  localMI[fips,], \n  row.names=hunan$County[fips]),\n  check.names=FALSE)\n\n                       Ii        E.Ii      Var.Ii        Z.Ii Pr.z....E.Ii..\nAnhua         -2.2493e-02 -5.0048e-03  5.8235e-02 -7.2467e-02         0.9422\nAnren         -3.9932e-01 -7.0111e-03  7.0348e-02 -1.4791e+00         0.1391\nAnxiang       -1.4685e-03 -2.8150e-05  4.7238e-04 -6.6269e-02         0.9472\nBaojing        3.4737e-01 -5.0089e-03  8.3636e-02  1.2185e+00         0.2230\nChaling        2.0559e-02 -9.6812e-04  2.7711e-02  1.2932e-01         0.8971\nChangning     -2.9868e-05 -9.0010e-09  1.5105e-07 -7.6828e-02         0.9388\nChangsha       4.9022e+00 -2.1348e-01  2.3194e+00  3.3590e+00         0.0008\nChengbu        7.3725e-01 -1.0534e-02  2.2132e-01  1.5895e+00         0.1119\nChenxi         1.4544e-01 -2.8156e-03  4.7116e-02  6.8299e-01         0.4946\nCili           7.3176e-02 -1.6747e-03  4.7902e-02  3.4200e-01         0.7324\nDao            2.1420e-01 -2.0824e-03  4.4123e-02  1.0297e+00         0.3032\nDongan         1.5210e-01 -6.3485e-04  1.3471e-02  1.3159e+00         0.1882\nDongkou        5.2918e-01 -6.4461e-03  1.0748e-01  1.6338e+00         0.1023\nFenghuang      1.8013e-01 -6.2832e-03  1.3257e-01  5.1198e-01         0.6087\nGuidong       -5.9160e-01 -1.3086e-02  3.7003e-01 -9.5104e-01         0.3416\nGuiyang        1.8240e-01 -3.6908e-03  3.2610e-02  1.0305e+00         0.3028\nGuzhang        2.8466e-01 -8.5054e-03  1.4152e-01  7.7931e-01         0.4358\nHanshou        2.5878e-02 -6.0620e-04  1.0167e-02  2.6266e-01         0.7928\nHengdong       9.9964e-03 -4.9063e-04  6.7742e-03  1.2742e-01         0.8986\nHengnan        2.8064e-02 -3.2160e-04  3.7597e-03  4.6294e-01         0.6434\nHengshan      -5.8201e-03 -3.0437e-05  5.1076e-04 -2.5618e-01         0.7978\nHengyang       6.2997e-02 -1.3046e-03  2.1865e-02  4.3486e-01         0.6637\nHongjiang      1.8790e-01 -2.3019e-03  3.1725e-02  1.0678e+00         0.2856\nHuarong       -1.5389e-02 -1.8667e-03  8.1030e-02 -4.7503e-02         0.9621\nHuayuan        8.3772e-02 -8.5569e-04  2.4495e-02  5.4072e-01         0.5887\nHuitong        2.5997e-01 -5.2447e-03  1.1077e-01  7.9685e-01         0.4255\nJiahe         -1.2431e-01 -3.0550e-03  5.1111e-02 -5.3633e-01         0.5917\nJianghua       2.8651e-01 -3.8280e-03  8.0968e-02  1.0204e+00         0.3076\nJiangyong      2.4337e-01 -2.7082e-03  1.1746e-01  7.1800e-01         0.4728\nJingzhou       1.8270e-01 -8.5106e-04  2.4363e-02  1.1759e+00         0.2396\nJinshi        -1.1988e-02 -5.3666e-03  1.1334e-01 -1.9667e-02         0.9843\nJishou        -2.8680e-01 -2.6305e-03  4.4028e-02 -1.3543e+00         0.1756\nLanshan        6.3334e-02 -9.6365e-04  2.0441e-02  4.4972e-01         0.6529\nLeiyang        1.1581e-02 -1.4948e-04  2.5082e-03  2.3422e-01         0.8148\nLengshuijiang -1.7903e+00 -8.2129e-02  2.1598e+00 -1.1623e+00         0.2451\nLi             1.0225e-03 -2.4048e-07  5.1060e-06  4.5260e-01         0.6508\nLianyuan      -1.4672e-01 -1.8983e-03  1.9145e-02 -1.0467e+00         0.2952\nLiling         1.3774e+00 -1.5097e-02  4.2601e-01  2.1335e+00         0.0329\nLinli          1.4815e-02 -6.8294e-05  1.4499e-03  3.9086e-01         0.6959\nLinwu         -2.4621e-03 -9.0703e-06  1.9258e-04 -1.7676e-01         0.8597\nLinxiang       6.5904e-02 -2.9028e-03  2.5470e-01  1.3634e-01         0.8916\nLiuyang        3.3688e+00 -7.7502e-02  1.5180e+00  2.7972e+00         0.0052\nLonghui        8.0801e-01 -1.1377e-02  1.5538e-01  2.0787e+00         0.0376\nLongshan       7.5663e-01 -1.1100e-02  3.1449e-01  1.3690e+00         0.1710\nLuxi           1.8177e-01 -2.4855e-03  3.4249e-02  9.9561e-01         0.3194\nMayang         2.1852e-01 -5.8773e-03  9.8049e-02  7.1663e-01         0.4736\nMiluo          1.8704e+00 -1.6927e-02  2.7925e-01  3.5715e+00         0.0004\nNan           -9.5789e-03 -4.9497e-04  6.8341e-03 -1.0988e-01         0.9125\nNingxiang      1.5607e+00 -7.3878e-02  8.0012e-01  1.8274e+00         0.0676\nNingyuan       2.0910e-01 -7.0884e-03  8.2306e-02  7.5356e-01         0.4511\nPingjiang     -9.8964e-01 -2.6457e-03  5.6027e-02 -4.1698e+00         0.0000\nQidong         1.1806e-01 -2.1207e-03  2.4747e-02  7.6396e-01         0.4449\nQiyang         6.1966e-02 -7.3374e-04  8.5743e-03  6.7712e-01         0.4983\nRucheng       -3.6992e-01 -8.8999e-03  2.5272e-01 -7.1814e-01         0.4727\nSangzhi        2.5053e-01 -4.9470e-03  6.8000e-02  9.7972e-01         0.3272\nShaodong      -3.2659e-02 -3.6592e-05  5.0546e-04 -1.4510e+00         0.1468\nShaoshan       2.1223e+00 -5.0227e-02  1.3668e+00  1.8583e+00         0.0631\nShaoyang       5.9499e-01 -1.1253e-02  1.3012e-01  1.6807e+00         0.0928\nShimen        -3.8794e-02 -3.8603e-04  6.4756e-03 -4.7729e-01         0.6332\nShuangfeng     9.2835e-03 -2.2867e-03  3.1516e-02  6.5174e-02         0.9480\nShuangpai      8.0591e-02 -3.1366e-04  8.9838e-03  8.5358e-01         0.3933\nSuining        3.7585e-01 -3.5933e-03  4.1870e-02  1.8544e+00         0.0637\nTaojiang      -2.5394e-01 -1.2395e-03  1.4477e-02 -2.1002e+00         0.0357\nTaoyuan        1.4729e-02 -1.2039e-04  8.5103e-04  5.0903e-01         0.6107\nTongdao        4.6482e-01 -6.9870e-03  1.9879e-01  1.0582e+00         0.2900\nWangcheng      4.4220e+00 -1.1067e-01  1.3596e+00  3.8873e+00         0.0001\nWugang         7.1003e-01 -7.8144e-03  1.0710e-01  2.1935e+00         0.0283\nXiangtan       2.4530e-01 -3.6457e-04  3.2319e-03  4.3213e+00         0.0000\nXiangxiang     2.6271e-01 -1.2703e-03  2.1290e-02  1.8092e+00         0.0704\nXiangyin       5.4525e-01 -4.7442e-03  7.9236e-02  1.9539e+00         0.0507\nXinhua         1.1810e-01 -6.2649e-03  8.6001e-02  4.2409e-01         0.6715\nXinhuang       1.5725e-01 -4.1820e-03  3.6648e-01  2.6667e-01         0.7897\nXinning        6.8928e-01 -9.6674e-03  2.0328e-01  1.5502e+00         0.1211\nXinshao        5.7578e-02 -8.5932e-03  1.1769e-01  1.9289e-01         0.8470\nXintian       -7.4050e-03 -5.1493e-03  1.0877e-01 -6.8395e-03         0.9945\nXupu           3.2406e-01 -5.7468e-03  5.7735e-02  1.3726e+00         0.1699\nYanling       -6.9021e-02 -5.9211e-04  9.9306e-03 -6.8667e-01         0.4923\nYizhang       -2.6844e-01 -2.2463e-03  4.7588e-02 -1.2202e+00         0.2224\nYongshun       6.3064e-01 -1.1350e-02  1.8830e-01  1.4795e+00         0.1390\nYongxing       4.3411e-01 -9.0735e-03  1.5088e-01  1.1409e+00         0.2539\nYou            7.8750e-02 -7.2728e-03  1.2116e-01  2.4714e-01         0.8048\nYuanjiang      2.0004e-04 -1.7760e-04  2.9798e-03  6.9181e-03         0.9945\nYuanling       8.7298e-03 -2.2981e-06  2.3221e-05  1.8121e+00         0.0700\nYueyang        4.1189e-02 -1.9768e-04  2.3113e-03  8.6085e-01         0.3893\nZhijiang       1.0476e-01 -7.8123e-04  1.3100e-02  9.2214e-01         0.3565\nZhongfang     -2.2685e-01 -2.1455e-03  3.5927e-02 -1.1855e+00         0.2358\nZhuzhou        3.2864e-01 -5.2432e-04  7.2391e-03  3.8688e+00         0.0001\nZixing        -7.6849e-01 -8.8210e-02  9.4057e-01 -7.0144e-01         0.4830\n\n\n\n# Append local Moran's I dataframe to hunan SpatialPolygonDataFrame\nhunan.localMI &lt;- cbind(hunan,localMI) %&gt;%\n  rename(Pr.Ii = Pr.z....E.Ii..)\n\n\n# Plot local Moran's I values\ntm_shape(hunan.localMI) +\n  tm_fill(col = \"Ii\", \n          style = \"pretty\",\n          palette = \"RdBu\",\n          title = \"local moran statistics\") +\n  tm_borders(alpha = 0.5)\n\nVariable(s) \"Ii\" contains positive and negative values, so midpoint is set to 0. Set midpoint = NA to show the full spectrum of the color palette.\n\n\n\n\n\n\n\n\n\n\n# Plot local Moran's P values\ntm_shape(hunan.localMI) +\n  tm_fill(col = \"Pr.Ii\", \n          breaks=c(-Inf, 0.001, 0.01, 0.05, 0.1, Inf),\n          palette=\"-Blues\", \n          title = \"local Moran's I p-values\") +\n  tm_borders(alpha = 0.5)\n\n\n\n\n\n\n\n\n\n# Plot both local Moran's I values and p-values map side by side\nlocalMI.map &lt;- tm_shape(hunan.localMI) +\n  tm_fill(col = \"Ii\", \n          style = \"pretty\", \n          title = \"local moran statistics\") +\n  tm_borders(alpha = 0.5) +\n  tm_layout(legend.text.size = 0.5, \n            legend.title.size = 0.8) \n\npvalue.map &lt;- tm_shape(hunan.localMI) +\n  tm_fill(col = \"Pr.Ii\", \n          breaks=c(-Inf, 0.001, 0.01, 0.05, 0.1, Inf),\n          palette=\"-Blues\", \n          title = \"local Moran's I p-values\") +\n  tm_borders(alpha = 0.5) +\n  tm_layout(legend.text.size = 0.5, \n            legend.title.size = 0.8) \n\ntmap_arrange(localMI.map, pvalue.map, asp=1, ncol=2)\n\nVariable(s) \"Ii\" contains positive and negative values, so midpoint is set to 0. Set midpoint = NA to show the full spectrum of the color palette."
  },
  {
    "objectID": "Hands-On_Ex/Hands-On_Ex_05/Hands-On_Ex05.html#visualize-lisa-cluster-map",
    "href": "Hands-On_Ex/Hands-On_Ex_05/Hands-On_Ex05.html#visualize-lisa-cluster-map",
    "title": "Hands-On Exercise 05",
    "section": "10.2 Visualize LISA Cluster Map",
    "text": "10.2 Visualize LISA Cluster Map\n\n10.2.1 Plot Moran scatterplot\n\n# Plot Moran scatterplot with mornan.plot() of spdep\nnci &lt;- moran.plot(hunan$GDPPC, rswm_q,\n                  labels=as.character(hunan$County), \n                  xlab=\"GDPPC 2012\", \n                  ylab=\"Spatially Lag GDPPC 2012\")\n\n\n\n\n\n\n\n\n\n\n10.2.2 Plot Moran scatterplot (standardised variable)\n\n# Scale variable\nhunan$Z.GDPPC &lt;- scale(hunan$GDPPC) %&gt;% \n  as.vector \n\n# Plot Moran scatterplot with standardised variable\nnci2 &lt;- moran.plot(hunan$Z.GDPPC, rswm_q,\n                   labels=as.character(hunan$County),\n                   xlab=\"z-GDPPC 2012\", \n                   ylab=\"Spatially Lag z-GDPPC 2012\")\n\n\n\n\n\n\n\n\n\n\n10.2.3 Plot LISA map\n\n# Initialise quadrant  \nquadrant &lt;- vector(mode=\"numeric\",length=nrow(localMI))\n\n# Derive spatially lagged variable (GDPPC) and center spatially lagged variable around its mean\nhunan$lag_GDPPC &lt;- lag.listw(rswm_q, hunan$GDPPC)\nDV &lt;- hunan$lag_GDPPC - mean(hunan$lag_GDPPC)\n\n# Center local Moran's around it mean\nLM_I &lt;- localMI[,1] - mean(localMI[,1])    \n\n# Set statistical significance level for local Moran\nsignif &lt;- 0.05\n\n# Define low-low (1), low-high (2), high-low (3) and high-high (4) categories\nquadrant[DV &lt;0 & LM_I&gt;0] &lt;- 1\nquadrant[DV &gt;0 & LM_I&lt;0] &lt;- 2\nquadrant[DV &lt;0 & LM_I&lt;0] &lt;- 3  \nquadrant[DV &gt;0 & LM_I&gt;0] &lt;- 4      \n\n# Place non-significant Moran in category 0\nquadrant[localMI[,5]&gt;signif] &lt;- 0\n\n\n# Plot LISA map\nhunan.localMI$quadrant &lt;- quadrant\ncolors &lt;- c(\"#ffffff\", \"#2c7bb6\", \"#abd9e9\", \"#fdae61\", \"#d7191c\")\nclusters &lt;- c(\"insignificant\", \"low-low\", \"low-high\", \"high-low\", \"high-high\")\n\ntm_shape(hunan.localMI) +\n  tm_fill(col = \"quadrant\", \n          style = \"cat\", \n          palette = colors[c(sort(unique(quadrant)))+1], \n          labels = clusters[c(sort(unique(quadrant)))+1],\n          popup.vars = c(\"\")) +\n  tm_view(set.zoom.limits = c(11,17)) +\n  tm_borders(alpha=0.5)\n\n\n\n\n\n\n\n\n\n# Plot both local Moran's I values and p-values map side by side\ngdppc &lt;- qtm(hunan, \"GDPPC\") +\n  tm_layout(legend.text.size = 0.5, \n            legend.title.size = 0.8) \n\nhunan.localMI$quadrant &lt;- quadrant\ncolors &lt;- c(\"#ffffff\", \"#2c7bb6\", \"#abd9e9\", \"#fdae61\", \"#d7191c\")\nclusters &lt;- c(\"insignificant\", \"low-low\", \"low-high\", \"high-low\", \"high-high\")\n\nLISAmap &lt;- tm_shape(hunan.localMI) +\n  tm_fill(col = \"quadrant\", \n          style = \"cat\", \n          palette = colors[c(sort(unique(quadrant)))+1], \n          labels = clusters[c(sort(unique(quadrant)))+1],\n          popup.vars = c(\"\")) +\n  tm_view(set.zoom.limits = c(11,17)) +\n  tm_borders(alpha=0.5) +\n  tm_layout(legend.text.size = 0.5, \n            legend.title.size = 0.8) \n\ntmap_arrange(gdppc, LISAmap, \n             asp=1, ncol=2)\n\n\n\n\n\n\n\n\nCertain regions show significant clustering in both high-high and low-low patterns"
  },
  {
    "objectID": "Hands-On_Ex/Hands-On_Ex_05/Hands-On_Ex05.html#hot-and-cold-spot-area-analysis",
    "href": "Hands-On_Ex/Hands-On_Ex_05/Hands-On_Ex05.html#hot-and-cold-spot-area-analysis",
    "title": "Hands-On Exercise 05",
    "section": "10.3 Hot and Cold Spot Area Analysis",
    "text": "10.3 Hot and Cold Spot Area Analysis\nGetis and Ord’s G-Statistics consists of the following steps\n\n10.3.1 Deriving spatial weight matrix\n\n10.3.1.1 Derive distance-based weight matrix\n\n# Get longitude from 1st value in centroid\nlongitude &lt;- map_dbl(hunan$geometry, ~st_centroid(.x)[[1]])\n\n# Get latitude from 2nd value in centroid\nlatitude &lt;- map_dbl(hunan$geometry, ~st_centroid(.x)[[2]])\n\n# Combine longitude and latitude\ncoords &lt;- cbind(longitude, latitude)\n\n# Determine cut-off distance\nk1 &lt;- knn2nb(knearneigh(coords))\nk1dists &lt;- unlist(nbdists(k1, coords, longlat = TRUE))\nsummary(k1dists)\n\n   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. \n  24.79   32.57   38.01   39.07   44.52   61.79 \n\n\n\n# Compute distance weight matrix with dnearneigh()\nwm_d62 &lt;- dnearneigh(coords, 0, 62, longlat = TRUE)\nwm_d62\n\nNeighbour list object:\nNumber of regions: 88 \nNumber of nonzero links: 324 \nPercentage nonzero weights: 4.183884 \nAverage number of links: 3.681818 \n\n\n\n# Convert nb object into spatial weights object\nwm62_lw &lt;- nb2listw(wm_d62, style = 'B')\nsummary(wm62_lw)\n\nCharacteristics of weights list object:\nNeighbour list object:\nNumber of regions: 88 \nNumber of nonzero links: 324 \nPercentage nonzero weights: 4.183884 \nAverage number of links: 3.681818 \nLink number distribution:\n\n 1  2  3  4  5  6 \n 6 15 14 26 20  7 \n6 least connected regions:\n6 15 30 32 56 65 with 1 link\n7 most connected regions:\n21 28 35 45 50 52 82 with 6 links\n\nWeights style: B \nWeights constants summary:\n   n   nn  S0  S1   S2\nB 88 7744 324 648 5440\n\n\n\n\n10.3.1.2 Compute adaptive distance weight matrix\n\n# Use k-nearest neighbours to control number of neighbours\nknn &lt;- knn2nb(knearneigh(coords, k=8))\nknn\n\nNeighbour list object:\nNumber of regions: 88 \nNumber of nonzero links: 704 \nPercentage nonzero weights: 9.090909 \nAverage number of links: 8 \nNon-symmetric neighbours list\n\n\n\n# Convert nb object into spatial weights object\nknn_lw &lt;- nb2listw(knn, style = 'B')\nsummary(knn_lw)\n\nCharacteristics of weights list object:\nNeighbour list object:\nNumber of regions: 88 \nNumber of nonzero links: 704 \nPercentage nonzero weights: 9.090909 \nAverage number of links: 8 \nNon-symmetric neighbours list\nLink number distribution:\n\n 8 \n88 \n88 least connected regions:\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 with 8 links\n88 most connected regions:\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 with 8 links\n\nWeights style: B \nWeights constants summary:\n   n   nn  S0   S1    S2\nB 88 7744 704 1300 23014\n\n\n\n\n\n10.3.2 Compute Gi Statistics\n\n10.3.2.1 Gi Statistics using fixed distance\n\n# Calculate Gi statistics with localG\nfips &lt;- order(hunan$County)\ngi.fixed &lt;- localG(hunan$GDPPC, wm62_lw)\ngi.fixed\n\n [1]  0.436075843 -0.265505650 -0.073033665  0.413017033  0.273070579\n [6] -0.377510776  2.863898821  2.794350420  5.216125401  0.228236603\n[11]  0.951035346 -0.536334231  0.176761556  1.195564020 -0.033020610\n[16]  1.378081093 -0.585756761 -0.419680565  0.258805141  0.012056111\n[21] -0.145716531 -0.027158687 -0.318615290 -0.748946051 -0.961700582\n[26] -0.796851342 -1.033949773 -0.460979158 -0.885240161 -0.266671512\n[31] -0.886168613 -0.855476971 -0.922143185 -1.162328599  0.735582222\n[36] -0.003358489 -0.967459309 -1.259299080 -1.452256513 -1.540671121\n[41] -1.395011407 -1.681505286 -1.314110709 -0.767944457 -0.192889342\n[46]  2.720804542  1.809191360 -1.218469473 -0.511984469 -0.834546363\n[51] -0.908179070 -1.541081516 -1.192199867 -1.075080164 -1.631075961\n[56] -0.743472246  0.418842387  0.832943753 -0.710289083 -0.449718820\n[61] -0.493238743 -1.083386776  0.042979051  0.008596093  0.136337469\n[66]  2.203411744  2.690329952  4.453703219 -0.340842743 -0.129318589\n[71]  0.737806634 -1.246912658  0.666667559  1.088613505 -0.985792573\n[76]  1.233609606 -0.487196415  1.626174042 -1.060416797  0.425361422\n[81] -0.837897118 -0.314565243  0.371456331  4.424392623 -0.109566928\n[86]  1.364597995 -1.029658605 -0.718000620\nattr(,\"internals\")\n               Gi      E(Gi)        V(Gi)        Z(Gi) Pr(z != E(Gi))\n [1,] 0.064192949 0.05747126 2.375922e-04  0.436075843   6.627817e-01\n [2,] 0.042300020 0.04597701 1.917951e-04 -0.265505650   7.906200e-01\n [3,] 0.044961480 0.04597701 1.933486e-04 -0.073033665   9.417793e-01\n [4,] 0.039475779 0.03448276 1.461473e-04  0.413017033   6.795941e-01\n [5,] 0.049767939 0.04597701 1.927263e-04  0.273070579   7.847990e-01\n [6,] 0.008825335 0.01149425 4.998177e-05 -0.377510776   7.057941e-01\n [7,] 0.050807266 0.02298851 9.435398e-05  2.863898821   4.184617e-03\n [8,] 0.083966739 0.04597701 1.848292e-04  2.794350420   5.200409e-03\n [9,] 0.115751554 0.04597701 1.789361e-04  5.216125401   1.827045e-07\n[10,] 0.049115587 0.04597701 1.891013e-04  0.228236603   8.194623e-01\n[11,] 0.045819180 0.03448276 1.420884e-04  0.951035346   3.415864e-01\n[12,] 0.049183846 0.05747126 2.387633e-04 -0.536334231   5.917276e-01\n[13,] 0.048429181 0.04597701 1.924532e-04  0.176761556   8.596957e-01\n[14,] 0.034733752 0.02298851 9.651140e-05  1.195564020   2.318667e-01\n[15,] 0.011262043 0.01149425 4.945294e-05 -0.033020610   9.736582e-01\n[16,] 0.065131196 0.04597701 1.931870e-04  1.378081093   1.681783e-01\n[17,] 0.027587075 0.03448276 1.385862e-04 -0.585756761   5.580390e-01\n[18,] 0.029409313 0.03448276 1.461397e-04 -0.419680565   6.747188e-01\n[19,] 0.061466754 0.05747126 2.383385e-04  0.258805141   7.957856e-01\n[20,] 0.057656917 0.05747126 2.371303e-04  0.012056111   9.903808e-01\n[21,] 0.066518379 0.06896552 2.820326e-04 -0.145716531   8.841452e-01\n[22,] 0.045599896 0.04597701 1.928108e-04 -0.027158687   9.783332e-01\n[23,] 0.030646753 0.03448276 1.449523e-04 -0.318615290   7.500183e-01\n[24,] 0.035635552 0.04597701 1.906613e-04 -0.748946051   4.538897e-01\n[25,] 0.032606647 0.04597701 1.932888e-04 -0.961700582   3.362000e-01\n[26,] 0.035001352 0.04597701 1.897172e-04 -0.796851342   4.255374e-01\n[27,] 0.012746354 0.02298851 9.812587e-05 -1.033949773   3.011596e-01\n[28,] 0.061287917 0.06896552 2.773884e-04 -0.460979158   6.448136e-01\n[29,] 0.014277403 0.02298851 9.683314e-05 -0.885240161   3.760271e-01\n[30,] 0.009622875 0.01149425 4.924586e-05 -0.266671512   7.897221e-01\n[31,] 0.014258398 0.02298851 9.705244e-05 -0.886168613   3.755267e-01\n[32,] 0.005453443 0.01149425 4.986245e-05 -0.855476971   3.922871e-01\n[33,] 0.043283712 0.05747126 2.367109e-04 -0.922143185   3.564539e-01\n[34,] 0.020763514 0.03448276 1.393165e-04 -1.162328599   2.451020e-01\n[35,] 0.081261843 0.06896552 2.794398e-04  0.735582222   4.619850e-01\n[36,] 0.057419907 0.05747126 2.338437e-04 -0.003358489   9.973203e-01\n[37,] 0.013497133 0.02298851 9.624821e-05 -0.967459309   3.333145e-01\n[38,] 0.019289310 0.03448276 1.455643e-04 -1.259299080   2.079223e-01\n[39,] 0.025996272 0.04597701 1.892938e-04 -1.452256513   1.464303e-01\n[40,] 0.016092694 0.03448276 1.424776e-04 -1.540671121   1.233968e-01\n[41,] 0.035952614 0.05747126 2.379439e-04 -1.395011407   1.630124e-01\n[42,] 0.031690963 0.05747126 2.350604e-04 -1.681505286   9.266481e-02\n[43,] 0.018750079 0.03448276 1.433314e-04 -1.314110709   1.888090e-01\n[44,] 0.015449080 0.02298851 9.638666e-05 -0.767944457   4.425202e-01\n[45,] 0.065760689 0.06896552 2.760533e-04 -0.192889342   8.470456e-01\n[46,] 0.098966900 0.05747126 2.326002e-04  2.720804542   6.512325e-03\n[47,] 0.085415780 0.05747126 2.385746e-04  1.809191360   7.042128e-02\n[48,] 0.038816536 0.05747126 2.343951e-04 -1.218469473   2.230456e-01\n[49,] 0.038931873 0.04597701 1.893501e-04 -0.511984469   6.086619e-01\n[50,] 0.055098610 0.06896552 2.760948e-04 -0.834546363   4.039732e-01\n[51,] 0.033405005 0.04597701 1.916312e-04 -0.908179070   3.637836e-01\n[52,] 0.043040784 0.06896552 2.829941e-04 -1.541081516   1.232969e-01\n[53,] 0.011297699 0.02298851 9.615920e-05 -1.192199867   2.331829e-01\n[54,] 0.040968457 0.05747126 2.356318e-04 -1.075080164   2.823388e-01\n[55,] 0.023629663 0.04597701 1.877170e-04 -1.631075961   1.028743e-01\n[56,] 0.006281129 0.01149425 4.916619e-05 -0.743472246   4.571958e-01\n[57,] 0.063918654 0.05747126 2.369553e-04  0.418842387   6.753313e-01\n[58,] 0.070325003 0.05747126 2.381374e-04  0.832943753   4.048765e-01\n[59,] 0.025947288 0.03448276 1.444058e-04 -0.710289083   4.775249e-01\n[60,] 0.039752578 0.04597701 1.915656e-04 -0.449718820   6.529132e-01\n[61,] 0.049934283 0.05747126 2.334965e-04 -0.493238743   6.218439e-01\n[62,] 0.030964195 0.04597701 1.920248e-04 -1.083386776   2.786368e-01\n[63,] 0.058129184 0.05747126 2.343319e-04  0.042979051   9.657182e-01\n[64,] 0.046096514 0.04597701 1.932637e-04  0.008596093   9.931414e-01\n[65,] 0.012459080 0.01149425 5.008051e-05  0.136337469   8.915545e-01\n[66,] 0.091447733 0.05747126 2.377744e-04  2.203411744   2.756574e-02\n[67,] 0.049575872 0.02298851 9.766513e-05  2.690329952   7.138140e-03\n[68,] 0.107907212 0.04597701 1.933581e-04  4.453703219   8.440175e-06\n[69,] 0.019616151 0.02298851 9.789454e-05 -0.340842743   7.332220e-01\n[70,] 0.032923393 0.03448276 1.454032e-04 -0.129318589   8.971056e-01\n[71,] 0.030317663 0.02298851 9.867859e-05  0.737806634   4.606320e-01\n[72,] 0.019437582 0.03448276 1.455870e-04 -1.246912658   2.124295e-01\n[73,] 0.055245460 0.04597701 1.932838e-04  0.666667559   5.049845e-01\n[74,] 0.074278054 0.05747126 2.383538e-04  1.088613505   2.763244e-01\n[75,] 0.013269580 0.02298851 9.719982e-05 -0.985792573   3.242349e-01\n[76,] 0.049407829 0.03448276 1.463785e-04  1.233609606   2.173484e-01\n[77,] 0.028605749 0.03448276 1.455139e-04 -0.487196415   6.261191e-01\n[78,] 0.039087662 0.02298851 9.801040e-05  1.626174042   1.039126e-01\n[79,] 0.031447120 0.04597701 1.877464e-04 -1.060416797   2.889550e-01\n[80,] 0.064005294 0.05747126 2.359641e-04  0.425361422   6.705732e-01\n[81,] 0.044606529 0.05747126 2.357330e-04 -0.837897118   4.020885e-01\n[82,] 0.063700493 0.06896552 2.801427e-04 -0.314565243   7.530918e-01\n[83,] 0.051142205 0.04597701 1.933560e-04  0.371456331   7.102977e-01\n[84,] 0.102121112 0.04597701 1.610278e-04  4.424392623   9.671399e-06\n[85,] 0.021901462 0.02298851 9.843172e-05 -0.109566928   9.127528e-01\n[86,] 0.064931813 0.04597701 1.929430e-04  1.364597995   1.723794e-01\n[87,] 0.031747344 0.04597701 1.909867e-04 -1.029658605   3.031703e-01\n[88,] 0.015893319 0.02298851 9.765131e-05 -0.718000620   4.727569e-01\nattr(,\"cluster\")\n [1] Low  Low  High High High High High High High Low  Low  High Low  Low  Low \n[16] High High High High Low  High High Low  Low  High Low  Low  Low  Low  Low \n[31] Low  Low  Low  High Low  Low  Low  Low  Low  Low  High Low  Low  Low  Low \n[46] High High Low  Low  Low  Low  High Low  Low  Low  Low  Low  High Low  Low \n[61] Low  Low  Low  High High High Low  High Low  Low  High Low  High High Low \n[76] High Low  Low  Low  Low  Low  Low  High High Low  High Low  Low \nLevels: Low High\nattr(,\"gstari\")\n[1] FALSE\nattr(,\"call\")\nlocalG(x = hunan$GDPPC, listw = wm62_lw)\nattr(,\"class\")\n[1] \"localG\"\n\n\n\n# Join Gi values to corresponding hunan sf dataframe\nhunan.gi.fixed &lt;- cbind(hunan, as.matrix(gi.fixed)) %&gt;%\n  rename(gstat_fixed = as.matrix.gi.fixed.)\n\n\n\n10.3.2.2 Gi Statistics using adaptive distance\n\n# Calculate Gi statistics with localG\nfips &lt;- order(hunan$County)\ngi.adaptive &lt;- localG(hunan$GDPPC, knn_lw)\n\n# Join Gi values to corresponding hunan sf dataframe\nhunan.gi.adaptive &lt;- cbind(hunan, as.matrix(gi.adaptive)) %&gt;%\n  rename(gstat_adaptive = as.matrix.gi.adaptive.)\n\n\n\n\n10.3.3 Mapping Gi Statistiscs\n\n10.3.3.1 Mapping Gi values with fixed distance weights\n\n# Plot Gi values with fixed distance weight matrix \ngdppc &lt;- qtm(hunan, \"GDPPC\") +\n  tm_layout(legend.text.size = 0.5, \n            legend.title.size = 0.8) \n\nGimap &lt;-tm_shape(hunan.gi.fixed) +\n  tm_fill(col = \"gstat_fixed\", \n          style = \"pretty\",\n          palette=\"-RdBu\",\n          title = \"local Gi\") +\n  tm_borders(alpha = 0.5) +\n  tm_layout(legend.text.size = 0.5, \n            legend.title.size = 0.8) \n\ntmap_arrange(gdppc, Gimap, asp=1, ncol=2)\n\nVariable(s) \"gstat_fixed\" contains positive and negative values, so midpoint is set to 0. Set midpoint = NA to show the full spectrum of the color palette.\n\n\n\n\n\n\n\n\n\nThere are hotspots (red with high positive Gi values), and coldspots (blue with negative Gi values). This shows how high GDPPC regions are clustered together, and low GDPPC regions are likewise clustered together. Low GDPPC regsions are more clustered in multiple regions as compared to the high GDPPC regions.\n\n\n10.3.3.2 Mapping Gi values with adaptive distance weights\n\n# Plot Gi values with fixed distance weight matrix \ngdppc&lt;- qtm(hunan, \"GDPPC\") +\n  tm_layout(legend.text.size = 0.5, \n            legend.title.size = 0.8) \n\nGimap &lt;- tm_shape(hunan.gi.adaptive) + \n  tm_fill(col = \"gstat_adaptive\", \n          style = \"pretty\", \n          palette=\"-RdBu\", \n          title = \"local Gi\") + \n  tm_borders(alpha = 0.5) +\n  tm_layout(legend.text.size = 0.5, \n            legend.title.size = 0.8) \n\ntmap_arrange(gdppc, \n             Gimap, \n             asp=1, \n             ncol=2) \n\nVariable(s) \"gstat_adaptive\" contains positive and negative values, so midpoint is set to 0. Set midpoint = NA to show the full spectrum of the color palette.\n\n\n\n\n\n\n\n\n\nThere are hotspots (red with high positive Gi values), and coldspots (blue with negative Gi values). This shows how high GDPPC regions are clustered together, and low GDPPC regions are likewise clustered together. With adaptive distance however, the high and low GDPPC regions are clustered more strongly together, with only 1 cluster of low GDPPC region."
  },
  {
    "objectID": "Hands-On_Ex/Hands-On_Ex_06/Hands-On_Ex06.html#setting-up",
    "href": "Hands-On_Ex/Hands-On_Ex_06/Hands-On_Ex06.html#setting-up",
    "title": "Hands-On Exercise 06",
    "section": "12.1 Setting Up",
    "text": "12.1 Setting Up\n\n12.1.1 Loading the R packages\n\npacman::p_load(spdep, tmap, sf, ClustGeo, \n               ggpubr, cluster, factoextra, NbClust,\n               heatmaply, corrplot, psych, tidyverse, GGally)\n\nWarning: unable to access index for repository http://www.stats.ox.ac.uk/pub/RWin/bin/windows/contrib/4.4:\n  cannot open URL 'http://www.stats.ox.ac.uk/pub/RWin/bin/windows/contrib/4.4/PACKAGES'\n\n\npackage 'ClustGeo' successfully unpacked and MD5 sums checked\n\nThe downloaded binary packages are in\n    C:\\Users\\Henry\\AppData\\Local\\Temp\\Rtmp6pT5D5\\downloaded_packages\n\n\n\nClustGeo installed\n\n\nalso installing the dependencies 'corrplot', 'ggsci', 'polynom', 'rstatix'\n\n\nWarning: unable to access index for repository http://www.stats.ox.ac.uk/pub/RWin/bin/windows/contrib/4.4:\n  cannot open URL 'http://www.stats.ox.ac.uk/pub/RWin/bin/windows/contrib/4.4/PACKAGES'\n\n\npackage 'corrplot' successfully unpacked and MD5 sums checked\npackage 'ggsci' successfully unpacked and MD5 sums checked\npackage 'polynom' successfully unpacked and MD5 sums checked\npackage 'rstatix' successfully unpacked and MD5 sums checked\npackage 'ggpubr' successfully unpacked and MD5 sums checked\n\nThe downloaded binary packages are in\n    C:\\Users\\Henry\\AppData\\Local\\Temp\\Rtmp6pT5D5\\downloaded_packages\n\n\n\nggpubr installed\n\n\nalso installing the dependencies 'estimability', 'viridis', 'ellipse', 'emmeans', 'flashClust', 'leaps', 'scatterplot3d', 'dendextend', 'FactoMineR'\n\n\nWarning: unable to access index for repository http://www.stats.ox.ac.uk/pub/RWin/bin/windows/contrib/4.4:\n  cannot open URL 'http://www.stats.ox.ac.uk/pub/RWin/bin/windows/contrib/4.4/PACKAGES'\n\n\npackage 'estimability' successfully unpacked and MD5 sums checked\npackage 'viridis' successfully unpacked and MD5 sums checked\npackage 'ellipse' successfully unpacked and MD5 sums checked\npackage 'emmeans' successfully unpacked and MD5 sums checked\npackage 'flashClust' successfully unpacked and MD5 sums checked\npackage 'leaps' successfully unpacked and MD5 sums checked\npackage 'scatterplot3d' successfully unpacked and MD5 sums checked\npackage 'dendextend' successfully unpacked and MD5 sums checked\npackage 'FactoMineR' successfully unpacked and MD5 sums checked\npackage 'factoextra' successfully unpacked and MD5 sums checked\n\nThe downloaded binary packages are in\n    C:\\Users\\Henry\\AppData\\Local\\Temp\\Rtmp6pT5D5\\downloaded_packages\n\n\n\nfactoextra installed\n\n\nWarning: unable to access index for repository http://www.stats.ox.ac.uk/pub/RWin/bin/windows/contrib/4.4:\n  cannot open URL 'http://www.stats.ox.ac.uk/pub/RWin/bin/windows/contrib/4.4/PACKAGES'\n\n\npackage 'NbClust' successfully unpacked and MD5 sums checked\n\nThe downloaded binary packages are in\n    C:\\Users\\Henry\\AppData\\Local\\Temp\\Rtmp6pT5D5\\downloaded_packages\n\n\n\nNbClust installed\n\n\nalso installing the dependencies 'iterators', 'permute', 'ca', 'foreach', 'gclus', 'qap', 'registry', 'TSP', 'vegan', 'seriation', 'webshot', 'egg'\n\n\nWarning: unable to access index for repository http://www.stats.ox.ac.uk/pub/RWin/bin/windows/contrib/4.4:\n  cannot open URL 'http://www.stats.ox.ac.uk/pub/RWin/bin/windows/contrib/4.4/PACKAGES'\n\n\npackage 'iterators' successfully unpacked and MD5 sums checked\npackage 'permute' successfully unpacked and MD5 sums checked\npackage 'ca' successfully unpacked and MD5 sums checked\npackage 'foreach' successfully unpacked and MD5 sums checked\npackage 'gclus' successfully unpacked and MD5 sums checked\npackage 'qap' successfully unpacked and MD5 sums checked\npackage 'registry' successfully unpacked and MD5 sums checked\npackage 'TSP' successfully unpacked and MD5 sums checked\npackage 'vegan' successfully unpacked and MD5 sums checked\npackage 'seriation' successfully unpacked and MD5 sums checked\npackage 'webshot' successfully unpacked and MD5 sums checked\npackage 'egg' successfully unpacked and MD5 sums checked\npackage 'heatmaply' successfully unpacked and MD5 sums checked\n\nThe downloaded binary packages are in\n    C:\\Users\\Henry\\AppData\\Local\\Temp\\Rtmp6pT5D5\\downloaded_packages\n\n\n\nheatmaply installed\n\n\nalso installing the dependencies 'mnormt', 'GPArotation'\n\n\nWarning: unable to access index for repository http://www.stats.ox.ac.uk/pub/RWin/bin/windows/contrib/4.4:\n  cannot open URL 'http://www.stats.ox.ac.uk/pub/RWin/bin/windows/contrib/4.4/PACKAGES'\n\n\npackage 'mnormt' successfully unpacked and MD5 sums checked\npackage 'GPArotation' successfully unpacked and MD5 sums checked\npackage 'psych' successfully unpacked and MD5 sums checked\n\nThe downloaded binary packages are in\n    C:\\Users\\Henry\\AppData\\Local\\Temp\\Rtmp6pT5D5\\downloaded_packages\n\n\n\npsych installed\n\n\nalso installing the dependencies 'cards', 'labelled', 'broom.helpers', 'ggstats'\n\n\nWarning: unable to access index for repository http://www.stats.ox.ac.uk/pub/RWin/bin/windows/contrib/4.4:\n  cannot open URL 'http://www.stats.ox.ac.uk/pub/RWin/bin/windows/contrib/4.4/PACKAGES'\n\n\npackage 'cards' successfully unpacked and MD5 sums checked\npackage 'labelled' successfully unpacked and MD5 sums checked\npackage 'broom.helpers' successfully unpacked and MD5 sums checked\npackage 'ggstats' successfully unpacked and MD5 sums checked\npackage 'GGally' successfully unpacked and MD5 sums checked\n\nThe downloaded binary packages are in\n    C:\\Users\\Henry\\AppData\\Local\\Temp\\Rtmp6pT5D5\\downloaded_packages\n\n\n\nGGally installed\n\n\n\n\n12.1.2 Importing spatial data\n\n\n12.1.3 Data Wrangling"
  },
  {
    "objectID": "Hands-On_Ex/Hands-On_Ex_06/Hands-On_Ex06.html#exploratory-data-analysis-eda",
    "href": "Hands-On_Ex/Hands-On_Ex_06/Hands-On_Ex06.html#exploratory-data-analysis-eda",
    "title": "Hands-On Exercise 06",
    "section": "12.2 Exploratory Data Analysis (EDA)",
    "text": "12.2 Exploratory Data Analysis (EDA)"
  },
  {
    "objectID": "Hands-On_Ex/Hands-On_Ex_06/Hands-On_Ex06.html#correlation-analysis",
    "href": "Hands-On_Ex/Hands-On_Ex_06/Hands-On_Ex06.html#correlation-analysis",
    "title": "Hands-On Exercise 06",
    "section": "12.3 Correlation Analysis",
    "text": "12.3 Correlation Analysis"
  },
  {
    "objectID": "Hands-On_Ex/Hands-On_Ex_06/Hands-On_Ex06.html#hierarchy-cluster-analysis",
    "href": "Hands-On_Ex/Hands-On_Ex_06/Hands-On_Ex06.html#hierarchy-cluster-analysis",
    "title": "Hands-On Exercise 06",
    "section": "12.4 Hierarchy Cluster Analysis",
    "text": "12.4 Hierarchy Cluster Analysis"
  },
  {
    "objectID": "Hands-On_Ex/Hands-On_Ex_06/Hands-On_Ex06.html#spatially-constrained-clustering-skater-approach",
    "href": "Hands-On_Ex/Hands-On_Ex_06/Hands-On_Ex06.html#spatially-constrained-clustering-skater-approach",
    "title": "Hands-On Exercise 06",
    "section": "12.5 Spatially Constrained Clustering (SKATER approach)",
    "text": "12.5 Spatially Constrained Clustering (SKATER approach)"
  },
  {
    "objectID": "Hands-On_Ex/Hands-On_Ex_06/Hands-On_Ex06.html#spatially-constrained-clustering-clustgeo-method",
    "href": "Hands-On_Ex/Hands-On_Ex_06/Hands-On_Ex06.html#spatially-constrained-clustering-clustgeo-method",
    "title": "Hands-On Exercise 06",
    "section": "12.6 Spatially Constrained Clustering (ClustGeo method)",
    "text": "12.6 Spatially Constrained Clustering (ClustGeo method)"
  },
  {
    "objectID": "Hands-On_Ex/Hands-On_Ex_06/Hands-On_Ex06.html#visual-interpretation-of-clusters",
    "href": "Hands-On_Ex/Hands-On_Ex_06/Hands-On_Ex06.html#visual-interpretation-of-clusters",
    "title": "Hands-On Exercise 06",
    "section": "12.7 Visual Interpretation of Clusters",
    "text": "12.7 Visual Interpretation of Clusters"
  },
  {
    "objectID": "Hands-On_Ex/Hands-On_Ex_05/Hands-On_Ex05.html#exploratory-visualization",
    "href": "Hands-On_Ex/Hands-On_Ex_05/Hands-On_Ex05.html#exploratory-visualization",
    "title": "Hands-On Exercise 05",
    "section": "9.2 Exploratory Visualization",
    "text": "9.2 Exploratory Visualization\n\n# Show GDPPC - equal interval and quantile classification\nequal &lt;- tm_shape(hunan) +\n  tm_fill(\"GDPPC\",\n          n = 5,\n          style = \"equal\") +\n  tm_borders(alpha = 0.5) +\n  tm_layout(main.title = \"Equal interval classification\", main.title.size = 1) + \n  tm_layout(legend.text.size = 0.5,  \n            legend.title.size = 0.8) \n\nquantile &lt;- tm_shape(hunan) +\n  tm_fill(\"GDPPC\",\n          n = 5,\n          style = \"quantile\") +\n  tm_borders(alpha = 0.5) +\n  tm_layout(main.title = \"Equal quantile classification\", main.title.size = 1) + \n  tm_layout(legend.text.size = 0.5,  \n            legend.title.size = 0.8) \n\ntmap_arrange(equal, \n             quantile, \n             asp=1, \n             ncol=2)"
  },
  {
    "objectID": "In-Class_Ex/In-Class_Ex_04/In-Class_Ex04.html#setting-up",
    "href": "In-Class_Ex/In-Class_Ex_04/In-Class_Ex04.html#setting-up",
    "title": "In Class Exercise 04",
    "section": "1.1 Setting Up",
    "text": "1.1 Setting Up\n\n1.1.1 Loading the R packages\n\npacman::p_load(sf, ggstatsplot, tmap, tidyverse, knitr, GWmodel)\n\n\n\n1.1.2 Importing spatial data\n\nHunan ShapefileHunan 2012\n\n\n\n# Load shapefile\nhunan &lt;- st_read(dsn = \"data/geospatial\", layer = \"Hunan\")\n\nReading layer `Hunan' from data source \n  `C:\\Users\\Henry\\Desktop\\SMU Masters\\2024-2025 T1\\Geospatial Analytics & Applications\\Project\\GeospatialWebsite\\In-Class_Ex\\In-Class_Ex_04\\data\\geospatial' \n  using driver `ESRI Shapefile'\nSimple feature collection with 88 features and 7 fields\nGeometry type: POLYGON\nDimension:     XY\nBounding box:  xmin: 108.7831 ymin: 24.6342 xmax: 114.2544 ymax: 30.12812\nGeodetic CRS:  WGS 84\n\n\n\n# Check crs\nst_crs(hunan)\n\nCoordinate Reference System:\n  User input: WGS 84 \n  wkt:\nGEOGCRS[\"WGS 84\",\n    DATUM[\"World Geodetic System 1984\",\n        ELLIPSOID[\"WGS 84\",6378137,298.257223563,\n            LENGTHUNIT[\"metre\",1]]],\n    PRIMEM[\"Greenwich\",0,\n        ANGLEUNIT[\"degree\",0.0174532925199433]],\n    CS[ellipsoidal,2],\n        AXIS[\"latitude\",north,\n            ORDER[1],\n            ANGLEUNIT[\"degree\",0.0174532925199433]],\n        AXIS[\"longitude\",east,\n            ORDER[2],\n            ANGLEUNIT[\"degree\",0.0174532925199433]],\n    ID[\"EPSG\",4326]]\n\n\n\n# Check crs\nglimpse(hunan)\n\nRows: 88\nColumns: 8\n$ NAME_2     &lt;chr&gt; \"Changde\", \"Changde\", \"Changde\", \"Changde\", \"Changde\", \"Cha…\n$ ID_3       &lt;int&gt; 21098, 21100, 21101, 21102, 21103, 21104, 21109, 21110, 211…\n$ NAME_3     &lt;chr&gt; \"Anxiang\", \"Hanshou\", \"Jinshi\", \"Li\", \"Linli\", \"Shimen\", \"L…\n$ ENGTYPE_3  &lt;chr&gt; \"County\", \"County\", \"County City\", \"County\", \"County\", \"Cou…\n$ Shape_Leng &lt;dbl&gt; 1.869074, 2.360691, 1.425620, 3.474325, 2.289506, 4.171918,…\n$ Shape_Area &lt;dbl&gt; 0.10056190, 0.19978745, 0.05302413, 0.18908121, 0.11450357,…\n$ County     &lt;chr&gt; \"Anxiang\", \"Hanshou\", \"Jinshi\", \"Li\", \"Linli\", \"Shimen\", \"L…\n$ geometry   &lt;POLYGON [°]&gt; POLYGON ((112.0625 29.75523..., POLYGON ((112.2288 …\n\n\n\n\n\n# Load csv file\nhunan2012 &lt;- read_csv(\"data/aspatial/Hunan_2012.csv\")\n\nRows: 88 Columns: 29\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr  (2): County, City\ndbl (27): avg_wage, deposite, FAI, Gov_Rev, Gov_Exp, GDP, GDPPC, GIO, Loan, ...\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\n\n\n# Check file\nglimpse(hunan2012)\n\nRows: 88\nColumns: 29\n$ County      &lt;chr&gt; \"Anhua\", \"Anren\", \"Anxiang\", \"Baojing\", \"Chaling\", \"Changn…\n$ City        &lt;chr&gt; \"Yiyang\", \"Chenzhou\", \"Changde\", \"Hunan West\", \"Zhuzhou\", …\n$ avg_wage    &lt;dbl&gt; 30544, 28058, 31935, 30843, 31251, 28518, 54540, 28597, 33…\n$ deposite    &lt;dbl&gt; 10967.0, 4598.9, 5517.2, 2250.0, 8241.4, 10860.0, 24332.0,…\n$ FAI         &lt;dbl&gt; 6831.7, 6386.1, 3541.0, 1005.4, 6508.4, 7920.0, 33624.0, 1…\n$ Gov_Rev     &lt;dbl&gt; 456.72, 220.57, 243.64, 192.59, 620.19, 769.86, 5350.00, 1…\n$ Gov_Exp     &lt;dbl&gt; 2703.0, 1454.7, 1779.5, 1379.1, 1947.0, 2631.6, 7885.5, 11…\n$ GDP         &lt;dbl&gt; 13225.0, 4941.2, 12482.0, 4087.9, 11585.0, 19886.0, 88009.…\n$ GDPPC       &lt;dbl&gt; 14567, 12761, 23667, 14563, 20078, 24418, 88656, 10132, 17…\n$ GIO         &lt;dbl&gt; 9276.90, 4189.20, 5108.90, 3623.50, 9157.70, 37392.00, 513…\n$ Loan        &lt;dbl&gt; 3954.90, 2555.30, 2806.90, 1253.70, 4287.40, 4242.80, 4053…\n$ NIPCR       &lt;dbl&gt; 3528.3, 3271.8, 7693.7, 4191.3, 3887.7, 9528.0, 17070.0, 3…\n$ Bed         &lt;dbl&gt; 2718, 970, 1931, 927, 1449, 3605, 3310, 582, 2170, 2179, 1…\n$ Emp         &lt;dbl&gt; 494.310, 290.820, 336.390, 195.170, 330.290, 548.610, 670.…\n$ EmpR        &lt;dbl&gt; 441.4, 255.4, 270.5, 145.6, 299.0, 415.1, 452.0, 127.6, 21…\n$ EmpRT       &lt;dbl&gt; 338.0, 99.4, 205.9, 116.4, 154.0, 273.7, 219.4, 94.4, 174.…\n$ Pri_Stu     &lt;dbl&gt; 54.175, 33.171, 19.584, 19.249, 33.906, 81.831, 59.151, 18…\n$ Sec_Stu     &lt;dbl&gt; 32.830, 17.505, 17.819, 11.831, 20.548, 44.485, 39.685, 7.…\n$ Household   &lt;dbl&gt; 290.4, 104.6, 148.1, 73.2, 148.7, 211.2, 300.3, 76.1, 139.…\n$ Household_R &lt;dbl&gt; 234.5, 121.9, 135.4, 69.9, 139.4, 211.7, 248.4, 59.6, 110.…\n$ NOIP        &lt;dbl&gt; 101, 34, 53, 18, 106, 115, 214, 17, 55, 70, 44, 84, 74, 17…\n$ Pop_R       &lt;dbl&gt; 670.3, 243.2, 346.0, 184.1, 301.6, 448.2, 475.1, 189.6, 31…\n$ RSCG        &lt;dbl&gt; 5760.60, 2386.40, 3957.90, 768.04, 4009.50, 5220.40, 22604…\n$ Pop_T       &lt;dbl&gt; 910.8, 388.7, 528.3, 281.3, 578.4, 816.3, 998.6, 256.7, 45…\n$ Agri        &lt;dbl&gt; 4942.253, 2357.764, 4524.410, 1118.561, 3793.550, 6430.782…\n$ Service     &lt;dbl&gt; 5414.5, 3814.1, 14100.0, 541.8, 5444.0, 13074.6, 17726.6, …\n$ Disp_Inc    &lt;dbl&gt; 12373, 16072, 16610, 13455, 20461, 20868, 183252, 12379, 1…\n$ RORP        &lt;dbl&gt; 0.7359464, 0.6256753, 0.6549309, 0.6544614, 0.5214385, 0.5…\n$ ROREmp      &lt;dbl&gt; 0.8929619, 0.8782065, 0.8041262, 0.7460163, 0.9052651, 0.7…\n\n\n\n\n\n\n\n1.1.3 Merging both datasets\nBoth datasets have the common field “County”\n\nhunan &lt;- left_join(hunan, hunan2012, by = \"County\") %&gt;%\n  # select(1:4, 7, 15)\n  select(`NAME_2`, `ID_3`, `NAME_3`,`County`, `GDPPC`, `GIO`, `Agri`, `Service`) # Using Column names for readability - Dont have to specify `geometry`\n# See result\nglimpse(hunan)\n\nRows: 88\nColumns: 9\n$ NAME_2   &lt;chr&gt; \"Changde\", \"Changde\", \"Changde\", \"Changde\", \"Changde\", \"Chang…\n$ ID_3     &lt;int&gt; 21098, 21100, 21101, 21102, 21103, 21104, 21109, 21110, 21111…\n$ NAME_3   &lt;chr&gt; \"Anxiang\", \"Hanshou\", \"Jinshi\", \"Li\", \"Linli\", \"Shimen\", \"Liu…\n$ County   &lt;chr&gt; \"Anxiang\", \"Hanshou\", \"Jinshi\", \"Li\", \"Linli\", \"Shimen\", \"Liu…\n$ GDPPC    &lt;dbl&gt; 23667, 20981, 34592, 24473, 25554, 27137, 63118, 62202, 70666…\n$ GIO      &lt;dbl&gt; 5108.9, 13491.0, 10935.0, 18402.0, 8214.0, 17795.0, 99254.0, …\n$ Agri     &lt;dbl&gt; 4524.410, 6545.350, 2562.460, 7562.340, 3583.910, 5266.510, 1…\n$ Service  &lt;dbl&gt; 14100.0, 17727.0, 7525.0, 53160.0, 7031.0, 6981.0, 26617.8, 1…\n$ geometry &lt;POLYGON [°]&gt; POLYGON ((112.0625 29.75523..., POLYGON ((112.2288 29…"
  },
  {
    "objectID": "In-Class_Ex/In-Class_Ex_04/In-Class_Ex04.html#geospatial-wrangling",
    "href": "In-Class_Ex/In-Class_Ex_04/In-Class_Ex04.html#geospatial-wrangling",
    "title": "In Class Exercise 04",
    "section": "1.2 Geospatial Wrangling",
    "text": "1.2 Geospatial Wrangling\n\n1.2.1 Mapping GDPPC\n\nbasemap &lt;- tm_shape(hunan) +\n  tm_polygons() +\n  tm_text(\"NAME_3\", size=0.5)\n\ngdppc &lt;- qtm(hunan, \"GDPPC\") + \n  tm_layout(legend.text.size = 0.6,    \n            legend.title.size = 0.8    \n            )\ntmap_arrange(basemap, gdppc, asp=1, ncol=2)\n\n\n\n\n\n\n\n\n\n\n1.2.1 Convert sf to SpatialPolygonDataFrame\n\nhunan_sp &lt;- hunan %&gt;%\n  as_Spatial()\n\nIn spatial dataframe, it is stored as a list. Geospatial data (geometry field) is stored in a separate list (polygons)"
  },
  {
    "objectID": "Take-Home_Ex/Take-Home_Ex_01/Take-Home_Ex01.html#first-order-spatial-point-pattern-analysis",
    "href": "Take-Home_Ex/Take-Home_Ex_01/Take-Home_Ex01.html#first-order-spatial-point-pattern-analysis",
    "title": "Take Home Exercise 01",
    "section": "3.1 First-Order Spatial Point Pattern Analysis",
    "text": "3.1 First-Order Spatial Point Pattern Analysis\nUnder this section, Kernel Density Estimation and Nearest Neighbour Distance will be explored as density-based and distance-based techniques respectively. This is bearing in mind their respective strengths.\n\n3.1.1 Density-Based: Kernel Density Estimation\nAdditional preparation is required to perform the analysis. These include:\n- Preparing the accident data in ppp object for spatstat\n- Checking the accident data for duplicates\n- Preparing the owin object\n\n\n# Set seed to ensure reproducibility of all subsequent analysis\nset.seed(42)\n\n# Convert accidents data to ppp format\nra_ppp &lt;- as.ppp(ra_sf)\n\nWarning in as.ppp.sf(ra_sf): only first attribute column is used for marks\n\n# Check accidents events for duplicates\nany(duplicated(ra_ppp))\n\n[1] FALSE\n\n\n\n# Create owin object\nth_bound_owin &lt;- as.owin(th_bound_sf)\n\n# Combine events object and owin object\nra_th_bound_ppp &lt;-  ra_ppp[th_bound_owin]\n\n# Rescale ppp from meter to kilometer\nra_th_bound_ppp_km &lt;- rescale.ppp(ra_th_bound_ppp, 1000, \"km\")\n\n\n\n3.1.1.1 Adaptive Kernel Density Estimation\nBased on the context of road accidents, adaptive kernel density estimation is more appropriate than fixed kernel density estimation as the accidents are more heterogeneous as observed from the EDA.\n\n# Perform adative bandwith KDE\nkde_ra_adp &lt;- adaptive.density(ra_th_bound_ppp_km, method=\"kernel\")\nplot(kde_ra_adp, \n     main = paste0(\"Adaptive KDE\"),\n     cex.axis = 0.8)\n\n\n\n\n\n\n\n\nThe intensities can be observed as small strips, which are notable roads (i.e. Kanchanaphisek Road) where sizable proportions of the accidents happen. This\nLets see if there are any differences when looking at individual provinces.\n\nBangkokNonthaburiPathum ThaniSamut PrakanSamut SakhonNakhon Pathom\n\n\n\n# Create Bangkok ppp object\nra_bk_ppp &lt;- ra_sf %&gt;%\n  filter(province_en == 'Bangkok') %&gt;%\n  as.ppp()\n\nWarning in as.ppp.sf(.): only first attribute column is used for marks\n\n# Create Bangkok owin object\nbk_owin &lt;- th_bound_sf %&gt;%\n  filter(ADM1_EN == 'Bangkok') %&gt;%\n  as.owin()\n\n# Combine events object and owin object\nra_bk_bound &lt;-  ra_bk_ppp[bk_owin]\n\n# Rescale ppp from meter to kilometer\nra_bk_bound_km &lt;- rescale.ppp(ra_bk_bound, 1000, \"km\")\n\n# Perform adaptive bandwidth KDE\nkde_ra_adp_bk &lt;- adaptive.density(ra_bk_bound_km, method=\"kernel\")\nplot(kde_ra_adp_bk, \n     main = paste0(\"Adaptive KDE: Bangkok\"),\n     cex.axis = 0.8)\n\n\n\n\n\n\n\n\n\n\n\n# Create Nonthaburi ppp object\nra_ntb_ppp &lt;- ra_sf %&gt;%\n  filter(province_en == 'Nonthaburi') %&gt;%\n  as.ppp()\n\nWarning in as.ppp.sf(.): only first attribute column is used for marks\n\n# Create Nonthaburi owin object\nntb_owin &lt;- th_bound_sf %&gt;%\n  filter(ADM1_EN == 'Nonthaburi') %&gt;%\n  as.owin()\n\n# Combine events object and owin object\nra_ntb_bound &lt;-  ra_ntb_ppp[ntb_owin]\n\n# Rescale ppp from meter to kilometer\nra_ntb_bound_km &lt;- rescale.ppp(ra_ntb_bound, 1000, \"km\")\n\n# Perform adaptive bandwidth KDE\nkde_ra_adp_ntb &lt;- adaptive.density(ra_ntb_bound_km, method=\"kernel\")\nplot(kde_ra_adp_ntb, \n     main = paste0(\"Adaptive KDE: Nonthaburi\"),\n     cex.axis = 0.8)\n\n\n\n\n\n\n\n\n\n\n\n# Create Pathum Thani ppp object\nra_pt_ppp &lt;- ra_sf %&gt;%\n  filter(province_en == 'Pathum Thani') %&gt;%\n  as.ppp()\n\nWarning in as.ppp.sf(.): only first attribute column is used for marks\n\n# Create Pathum Thani owin object\npt_owin &lt;- th_bound_sf %&gt;%\n  filter(ADM1_EN == 'Pathum Thani') %&gt;%\n  as.owin()\n\n# Combine events object and owin object\nra_pt_bound &lt;-  ra_pt_ppp[pt_owin]\n\n# Rescale ppp from meter to kilometer\nra_pt_bound_km &lt;- rescale.ppp(ra_pt_bound, 1000, \"km\")\n\n# Perform adaptive bandwidth KDE\nkde_ra_adp_pt &lt;- adaptive.density(ra_pt_bound_km, method=\"kernel\")\nplot(kde_ra_adp_pt, \n     main = paste0(\"Adaptive KDE: Pathum Thani\"),\n     cex.axis = 0.8)\n\n\n\n\n\n\n\n\n\n\n\n# Create Samut Prakan ppp object\nra_sp_ppp &lt;- ra_sf %&gt;%\n  filter(province_en == 'Samut Prakan') %&gt;%\n  as.ppp()\n\nWarning in as.ppp.sf(.): only first attribute column is used for marks\n\n# Create Samut Prakan owin object\nsp_owin &lt;- th_bound_sf %&gt;%\n  filter(ADM1_EN == 'Samut Prakan') %&gt;%\n  as.owin()\n\n# Combine events object and owin object\nra_sp_bound &lt;-  ra_sp_ppp[sp_owin]\n\n# Rescale ppp from meter to kilometer\nra_sp_bound_km &lt;- rescale.ppp(ra_sp_bound, 1000, \"km\")\n\n# Perform adaptive bandwidth KDE\nkde_ra_adp_sp &lt;- adaptive.density(ra_sp_bound_km, method=\"kernel\")\nplot(kde_ra_adp_sp, \n     main = paste0(\"Adaptive KDE: Samut Prakan\"),\n     cex.axis = 0.8)\n\n\n\n\n\n\n\n\n\n\n\n# Create Samut Sakhon ppp object\nra_ss_ppp &lt;- ra_sf %&gt;%\n  filter(province_en == 'Samut Sakhon') %&gt;%\n  as.ppp()\n\nWarning in as.ppp.sf(.): only first attribute column is used for marks\n\n# Create Samut Sakhon owin object\nss_owin &lt;- th_bound_sf %&gt;%\n  filter(ADM1_EN == 'Samut Sakhon') %&gt;%\n  as.owin()\n\n# Combine events object and owin object\nra_ss_bound &lt;-  ra_ss_ppp[ss_owin]\n\n# Rescale ppp from meter to kilometer\nra_ss_bound_km &lt;- rescale.ppp(ra_ss_bound, 1000, \"km\")\n\n# Perform adaptive bandwidth KDE\nkde_ra_adp_ss &lt;- adaptive.density(ra_ss_bound_km, method=\"kernel\")\nplot(kde_ra_adp_ss, \n     main = paste0(\"Adaptive KDE: Samut Sakhon\"),\n     cex.axis = 0.8)\n\n\n\n\n\n\n\n\n\n\n\n# Create Nakhon Pathom ppp object\nra_np_ppp &lt;- ra_sf %&gt;%\n  filter(province_en == 'Nakhon Pathom') %&gt;%\n  as.ppp()\n\nWarning in as.ppp.sf(.): only first attribute column is used for marks\n\n# Create Nakhon Pathom owin object\nnp_owin &lt;- th_bound_sf %&gt;%\n  filter(ADM1_EN == 'Nakhon Pathom') %&gt;%\n  as.owin()\n\n# Combine events object and owin object\nra_np_bound &lt;-  ra_np_ppp[np_owin]\n\n# Rescale ppp from meter to kilometer\nra_np_bound_km &lt;- rescale.ppp(ra_np_bound, 1000, \"km\")\n\n# Perform adaptive bandwidth KDE\nkde_ra_adp_np &lt;- adaptive.density(ra_np_bound_km, method=\"kernel\")\nplot(kde_ra_adp_np, \n     main = paste0(\"Adaptive KDE: Nakhon Pathom\"),\n     cex.axis = 0.8)\n\n\n\n\n\n\n\n\n\n\n\nConclusion:\n\n\n3.1.1.2 Fixed Kernel Density Estimation\nWhile fixed KDE is less applicable, it will be interesting to compare the output with adaptive KDE.\nbw.ppl() will be used as the automatic kernel method to determine the sigma as the pattern seems to consist mostly of tight clusters around major roads.\nGaussian will be the smoothing kernel of choice, as it is widely used and there are no negative events in the current context.\n\n# Get fixed bandwidth \nfixed_bw &lt;- bw.ppl(ra_th_bound_ppp_km)\n\n# Perform fixed kernel density estimation\nplot(density(ra_th_bound_ppp_km, sigma=fixed_bw, edge=TRUE, kernel=\"gaussian\"), \n     main = paste0(\"Fixed KDE: Bandwidth=\", round(fixed_bw, 4)),\n     cex.axis = 0.8)\n\n\n\n\n\n\n\n\nInterestingly,\n\n\n3.1.2 Distance-Based: Nearest Neighbour Index\nclarkevans.test() of spatstat will be used to perform the Clark-Evans test of aggregation.\nH0: Distribution of road accidents are randomly distributed H1: Distribution of road accidents are not randomly distributed\n\n# Perform Clark-Evans on study area \nclarkevans.test(ra_th_bound_ppp,\n                correction=\"none\",\n                clipregion=\"th_bound_owin\",\n                alternative=c(\"clustered\"),\n                nsim=99 # 100 simulation runs\n                )\n\n\n    Clark-Evans test\n    No edge correction\n    Z-test\n\ndata:  ra_th_bound_ppp\nR = 0.19109, p-value &lt; 2.2e-16\nalternative hypothesis: clustered (R &lt; 1)\n\n\nConclusion:\nNow lets do the same for each province\n\nBangkokNonthaburiPathum ThaniSamut PrakanSamut SakhonNakhon Pathom\n\n\n\n# Perform Clark-Evans on Bangkok\nclarkevans.test(ra_bk_bound,\n                correction=\"none\",\n                clipregion=\"bk_owin\",\n                alternative=c(\"clustered\"),\n                nsim=99 # 100 simulation runs\n                )\n\n\n    Clark-Evans test\n    No edge correction\n    Z-test\n\ndata:  ra_bk_bound\nR = 0.12115, p-value &lt; 2.2e-16\nalternative hypothesis: clustered (R &lt; 1)\n\n\n\n\n\n# Perform Clark-Evans on Nonthaburi\nclarkevans.test(ra_ntb_bound,\n                correction=\"none\",\n                clipregion=\"ntb_owin\",\n                alternative=c(\"clustered\"),\n                nsim=99 # 100 simulation runs\n                )\n\n\n    Clark-Evans test\n    No edge correction\n    Z-test\n\ndata:  ra_ntb_bound\nR = 0.38919, p-value &lt; 2.2e-16\nalternative hypothesis: clustered (R &lt; 1)\n\n\n\n\n\n# Perform Clark-Evans on Pathum Thani\nclarkevans.test(ra_pt_bound,\n                correction=\"none\",\n                clipregion=\"pt_owin\",\n                alternative=c(\"clustered\"),\n                nsim=99 # 100 simulation runs\n                )\n\n\n    Clark-Evans test\n    No edge correction\n    Z-test\n\ndata:  ra_pt_bound\nR = 0.24798, p-value &lt; 2.2e-16\nalternative hypothesis: clustered (R &lt; 1)\n\n\n\n\n\n# Perform Clark-Evans on Samut Prakan\nclarkevans.test(ra_sp_bound,\n                correction=\"none\",\n                clipregion=\"sp_owin\",\n                alternative=c(\"clustered\"),\n                nsim=99 # 100 simulation runs\n                )\n\n\n    Clark-Evans test\n    No edge correction\n    Z-test\n\ndata:  ra_sp_bound\nR = 0.14367, p-value &lt; 2.2e-16\nalternative hypothesis: clustered (R &lt; 1)\n\n\n\n\n\n# Perform Clark-Evans on Samut Sakhon\nclarkevans.test(ra_ss_bound,\n                correction=\"none\",\n                clipregion=\"ss_owin\",\n                alternative=c(\"clustered\"),\n                nsim=99 # 100 simulation runs\n                )\n\n\n    Clark-Evans test\n    No edge correction\n    Z-test\n\ndata:  ra_ss_bound\nR = 0.23989, p-value &lt; 2.2e-16\nalternative hypothesis: clustered (R &lt; 1)\n\n\n\n\n\n# Perform Clark-Evans on Nakhon Pathom\nclarkevans.test(ra_np_bound,\n                correction=\"none\",\n                clipregion=\"np_owin\",\n                alternative=c(\"clustered\"),\n                nsim=99 # 100 simulation runs\n                )\n\n\n    Clark-Evans test\n    No edge correction\n    Z-test\n\ndata:  ra_np_bound\nR = 0.28949, p-value &lt; 2.2e-16\nalternative hypothesis: clustered (R &lt; 1)\n\n\n\n\n\nConclusion:"
  },
  {
    "objectID": "Take-Home_Ex/Take-Home_Ex_01/Take-Home_Ex01.html#second-order-spatial-point-pattern-analysis",
    "href": "Take-Home_Ex/Take-Home_Ex_01/Take-Home_Ex01.html#second-order-spatial-point-pattern-analysis",
    "title": "Take Home Exercise 01",
    "section": "3.2 Second-Order Spatial Point Pattern Analysis",
    "text": "3.2 Second-Order Spatial Point Pattern Analysis\n\n3.2.1"
  },
  {
    "objectID": "Take-Home_Ex/Take-Home_Ex_01/Take-Home_Ex01.html#section-2",
    "href": "Take-Home_Ex/Take-Home_Ex_01/Take-Home_Ex01.html#section-2",
    "title": "Take Home Exercise 01",
    "section": "3.3",
    "text": "3.3"
  },
  {
    "objectID": "Take-Home_Ex/Take-Home_Ex_01/Take-Home_Ex01.html#microsoft-power-bi-visualization",
    "href": "Take-Home_Ex/Take-Home_Ex_01/Take-Home_Ex01.html#microsoft-power-bi-visualization",
    "title": "Take Home Exercise 01",
    "section": "2.2 Microsoft Power Bi Visualization",
    "text": "2.2 Microsoft Power Bi Visualization\n\n\n\n\nFrom the Power Bi visualization, several observations can be made.\n- Most of the accidents are presumably caused by speeding (~78%). This is consistent even across province, different temporal factors (i.e. day of week, season, time of day) and environmental factors (i.e. road description, weather condition).\n- Similarly, most accidents occur on straight roads (~85%). That is also observable through the map visualization as accidents occur on long stretches of road. This is also consistent across location, temporal and behavioral factors.\n- Interestingly, accidents involving rainy conditions have a spike during darker parts of the day (~19:00-00:00)\n- Accidents is fairly distributed across season and different days of the week.\n- While accidents tend to occur more during the early parts of the day (~7:00-11:00), the spikes are more visible when looking at the accidents across time, with large increases in certain dates (i.e. 50 accidents on 29th Dec 2019)"
  },
  {
    "objectID": "Take-Home_Ex/Take-Home_Ex_01/Take-Home_Ex01.html#setting-up-environtment-from-processed-datasets",
    "href": "Take-Home_Ex/Take-Home_Ex_01/Take-Home_Ex01.html#setting-up-environtment-from-processed-datasets",
    "title": "Take Home Exercise 01",
    "section": "2.1 Setting Up Environtment from Processed Datasets",
    "text": "2.1 Setting Up Environtment from Processed Datasets\nFirst, we clear the R console, then load in the processed datasets. This is a suitable starting point to bypass the long loading/processing time of the various large datasets.\n\n# Clear R console\nrm(list = ls(all.names = TRUE))\n\n# Set seed to ensure reproducibility of all subsequent analysis\nset.seed(42)\n\n\nAccidentsAdministrative BoundaryOpenstreet Map\n\n\n\n# Load data\nra_sf &lt;- read_rds('data/processed/th_acc.rds')\n\n# Check data\nglimpse(ra_sf)\n\nRows: 12,986\nColumns: 17\n$ acc_code                    &lt;dbl&gt; 571882, 600001, 605043, 629691, 571887, 59…\n$ incident_datetime           &lt;dttm&gt; 2019-01-01 02:25:00, 2019-01-01 03:00:00,…\n$ report_datetime             &lt;dttm&gt; 2019-01-02 17:32:00, 2019-01-05 10:33:00,…\n$ province_th                 &lt;chr&gt; \"นครปฐม\", \"นนทบุรี\", \"สมุทรปราการ\", \"กรุงเทพมห…\n$ province_en                 &lt;chr&gt; \"Nakhon Pathom\", \"Nonthaburi\", \"Samut Prak…\n$ agency                      &lt;chr&gt; \"department of rural roads\", \"department o…\n$ route                       &lt;chr&gt; \"แยกทางหลวงหมายเลข 4 (กม.ที่ 51+920) - บ้านวัด…\n$ vehicle_type                &lt;chr&gt; \"motorcycle\", \"private/passenger car\", \"pr…\n$ presumed_cause              &lt;chr&gt; \"speeding\", \"speeding\", \"running red light…\n$ accident_type               &lt;chr&gt; \"rollover/fallen on straight road\", \"rollo…\n$ number_of_vehicles_involved &lt;dbl&gt; 1, 1, 2, 1, 1, 1, 1, 1, 1, 1, 2, 2, 3, 2, …\n$ number_of_fatalities        &lt;dbl&gt; 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, …\n$ number_of_injuries          &lt;dbl&gt; 2, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, …\n$ weather_condition           &lt;chr&gt; \"clear\", \"clear\", \"clear\", \"clear\", \"clear…\n$ road_description            &lt;chr&gt; \"straight road\", \"straight road\", \"other\",…\n$ slope_description           &lt;chr&gt; \"no slope\", \"no slope\", \"other\", \"other\", …\n$ geometry                    &lt;POINT [m]&gt; POINT (627012.2 1533381), POINT (655…\n\n# Check crs\nst_crs(ra_sf)\n\nCoordinate Reference System:\n  User input: EPSG:32647 \n  wkt:\nPROJCRS[\"WGS 84 / UTM zone 47N\",\n    BASEGEOGCRS[\"WGS 84\",\n        ENSEMBLE[\"World Geodetic System 1984 ensemble\",\n            MEMBER[\"World Geodetic System 1984 (Transit)\"],\n            MEMBER[\"World Geodetic System 1984 (G730)\"],\n            MEMBER[\"World Geodetic System 1984 (G873)\"],\n            MEMBER[\"World Geodetic System 1984 (G1150)\"],\n            MEMBER[\"World Geodetic System 1984 (G1674)\"],\n            MEMBER[\"World Geodetic System 1984 (G1762)\"],\n            MEMBER[\"World Geodetic System 1984 (G2139)\"],\n            ELLIPSOID[\"WGS 84\",6378137,298.257223563,\n                LENGTHUNIT[\"metre\",1]],\n            ENSEMBLEACCURACY[2.0]],\n        PRIMEM[\"Greenwich\",0,\n            ANGLEUNIT[\"degree\",0.0174532925199433]],\n        ID[\"EPSG\",4326]],\n    CONVERSION[\"UTM zone 47N\",\n        METHOD[\"Transverse Mercator\",\n            ID[\"EPSG\",9807]],\n        PARAMETER[\"Latitude of natural origin\",0,\n            ANGLEUNIT[\"degree\",0.0174532925199433],\n            ID[\"EPSG\",8801]],\n        PARAMETER[\"Longitude of natural origin\",99,\n            ANGLEUNIT[\"degree\",0.0174532925199433],\n            ID[\"EPSG\",8802]],\n        PARAMETER[\"Scale factor at natural origin\",0.9996,\n            SCALEUNIT[\"unity\",1],\n            ID[\"EPSG\",8805]],\n        PARAMETER[\"False easting\",500000,\n            LENGTHUNIT[\"metre\",1],\n            ID[\"EPSG\",8806]],\n        PARAMETER[\"False northing\",0,\n            LENGTHUNIT[\"metre\",1],\n            ID[\"EPSG\",8807]]],\n    CS[Cartesian,2],\n        AXIS[\"(E)\",east,\n            ORDER[1],\n            LENGTHUNIT[\"metre\",1]],\n        AXIS[\"(N)\",north,\n            ORDER[2],\n            LENGTHUNIT[\"metre\",1]],\n    USAGE[\n        SCOPE[\"Navigation and medium accuracy spatial referencing.\"],\n        AREA[\"Between 96°E and 102°E, northern hemisphere between equator and 84°N, onshore and offshore. China. Indonesia. Laos. Malaysia - West Malaysia. Mongolia. Myanmar (Burma). Russian Federation. Thailand.\"],\n        BBOX[0,96,84,102]],\n    ID[\"EPSG\",32647]]\n\n\n\n\n\n# Load data\nth_bound_sf &lt;- read_rds('data/processed/th_bound_l3.rds')\n\n# Check data\nglimpse(th_bound_sf)\n\nRows: 477\nColumns: 23\n$ Shape_Leng &lt;dbl&gt; 0.04769920, 0.03355050, 0.01728931, 0.01904576, 0.01523190,…\n$ Shape_Area &lt;dbl&gt; 1.284175e-04, 6.068479e-05, 1.769761e-05, 1.920433e-05, 1.2…\n$ ADM3_EN    &lt;chr&gt; \"Phraborom Maharatchawang\", \"Wang Burapha Phirom\", \"Wat Rat…\n$ ADM3_TH    &lt;chr&gt; \"พระบรมมหาราชวัง\", \"วังบูรพาภิรมย์\", \"วัดราชบพิธ\", \"สำราญราษฎร์\", \"…\n$ ADM3_PCODE &lt;chr&gt; \"TH100101\", \"TH100102\", \"TH100103\", \"TH100104\", \"TH100105\",…\n$ ADM3_REF   &lt;chr&gt; NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA,…\n$ ADM3ALT1EN &lt;chr&gt; NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA,…\n$ ADM3ALT2EN &lt;chr&gt; NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA,…\n$ ADM3ALT1TH &lt;chr&gt; NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA,…\n$ ADM3ALT2TH &lt;chr&gt; NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA,…\n$ ADM2_EN    &lt;chr&gt; \"Phra Nakhon\", \"Phra Nakhon\", \"Phra Nakhon\", \"Phra Nakhon\",…\n$ ADM2_TH    &lt;chr&gt; \"พระนคร\", \"พระนคร\", \"พระนคร\", \"พระนคร\", \"พระนคร\", \"พระนคร\",…\n$ ADM2_PCODE &lt;chr&gt; \"TH1001\", \"TH1001\", \"TH1001\", \"TH1001\", \"TH1001\", \"TH1001\",…\n$ ADM1_EN    &lt;chr&gt; \"Bangkok\", \"Bangkok\", \"Bangkok\", \"Bangkok\", \"Bangkok\", \"Ban…\n$ ADM1_TH    &lt;chr&gt; \"กรุงเทพมหานคร\", \"กรุงเทพมหานคร\", \"กรุงเทพมหานคร\", \"กรุงเทพมหาน…\n$ ADM1_PCODE &lt;chr&gt; \"TH10\", \"TH10\", \"TH10\", \"TH10\", \"TH10\", \"TH10\", \"TH10\", \"TH…\n$ ADM0_EN    &lt;chr&gt; \"Thailand\", \"Thailand\", \"Thailand\", \"Thailand\", \"Thailand\",…\n$ ADM0_TH    &lt;chr&gt; \"ประเทศไทย\", \"ประเทศไทย\", \"ประเทศไทย\", \"ประเทศไทย\", \"ประเทศ…\n$ ADM0_PCODE &lt;chr&gt; \"TH\", \"TH\", \"TH\", \"TH\", \"TH\", \"TH\", \"TH\", \"TH\", \"TH\", \"TH\",…\n$ date       &lt;date&gt; 2019-02-18, 2019-02-18, 2019-02-18, 2019-02-18, 2019-02-18…\n$ validOn    &lt;date&gt; 2022-01-22, 2022-01-22, 2022-01-22, 2022-01-22, 2022-01-22…\n$ validTo    &lt;date&gt; -001-11-30, -001-11-30, -001-11-30, -001-11-30, -001-11-30…\n$ geometry   &lt;MULTIPOLYGON [m]&gt; MULTIPOLYGON (((661579 1521..., MULTIPOLYGON (…\n\n# Check crs\nst_crs(th_bound_sf)\n\nCoordinate Reference System:\n  User input: EPSG:32647 \n  wkt:\nPROJCRS[\"WGS 84 / UTM zone 47N\",\n    BASEGEOGCRS[\"WGS 84\",\n        ENSEMBLE[\"World Geodetic System 1984 ensemble\",\n            MEMBER[\"World Geodetic System 1984 (Transit)\"],\n            MEMBER[\"World Geodetic System 1984 (G730)\"],\n            MEMBER[\"World Geodetic System 1984 (G873)\"],\n            MEMBER[\"World Geodetic System 1984 (G1150)\"],\n            MEMBER[\"World Geodetic System 1984 (G1674)\"],\n            MEMBER[\"World Geodetic System 1984 (G1762)\"],\n            MEMBER[\"World Geodetic System 1984 (G2139)\"],\n            ELLIPSOID[\"WGS 84\",6378137,298.257223563,\n                LENGTHUNIT[\"metre\",1]],\n            ENSEMBLEACCURACY[2.0]],\n        PRIMEM[\"Greenwich\",0,\n            ANGLEUNIT[\"degree\",0.0174532925199433]],\n        ID[\"EPSG\",4326]],\n    CONVERSION[\"UTM zone 47N\",\n        METHOD[\"Transverse Mercator\",\n            ID[\"EPSG\",9807]],\n        PARAMETER[\"Latitude of natural origin\",0,\n            ANGLEUNIT[\"degree\",0.0174532925199433],\n            ID[\"EPSG\",8801]],\n        PARAMETER[\"Longitude of natural origin\",99,\n            ANGLEUNIT[\"degree\",0.0174532925199433],\n            ID[\"EPSG\",8802]],\n        PARAMETER[\"Scale factor at natural origin\",0.9996,\n            SCALEUNIT[\"unity\",1],\n            ID[\"EPSG\",8805]],\n        PARAMETER[\"False easting\",500000,\n            LENGTHUNIT[\"metre\",1],\n            ID[\"EPSG\",8806]],\n        PARAMETER[\"False northing\",0,\n            LENGTHUNIT[\"metre\",1],\n            ID[\"EPSG\",8807]]],\n    CS[Cartesian,2],\n        AXIS[\"(E)\",east,\n            ORDER[1],\n            LENGTHUNIT[\"metre\",1]],\n        AXIS[\"(N)\",north,\n            ORDER[2],\n            LENGTHUNIT[\"metre\",1]],\n    USAGE[\n        SCOPE[\"Navigation and medium accuracy spatial referencing.\"],\n        AREA[\"Between 96°E and 102°E, northern hemisphere between equator and 84°N, onshore and offshore. China. Indonesia. Laos. Malaysia - West Malaysia. Mongolia. Myanmar (Burma). Russian Federation. Thailand.\"],\n        BBOX[0,96,84,102]],\n    ID[\"EPSG\",32647]]\n\n\n\n\n\n# Load data\nth_osm_sf &lt;- read_rds('data/processed/th_osm.rds') %&gt;%\n  st_cast(\"LINESTRING\") # Cast as linestring as \n\nWarning in st_cast.sf(., \"LINESTRING\"): repeating attributes for all\nsub-geometries for which they may not be constant\n\n# Check data\nglimpse(th_osm_sf)\n\nRows: 36,472\nColumns: 15\n$ name       &lt;chr&gt; \"ถนนฉลองกรุง\", NA, \"ถนนฉลองกรุง\", \"ถนนเอราวัณ 1\", \"ถนนลำลูกกา\",…\n$ name_en    &lt;chr&gt; \"Chalong Krung Road\", NA, \"Chalong Krung Road\", \"Erawan 1 R…\n$ highway    &lt;chr&gt; \"secondary\", \"secondary_link\", \"secondary\", \"tertiary\", \"se…\n$ surface    &lt;chr&gt; \"paved\", NA, \"concrete\", NA, NA, NA, NA, NA, \"asphalt\", NA,…\n$ smoothness &lt;chr&gt; NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA,…\n$ width      &lt;chr&gt; NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA,…\n$ lanes      &lt;chr&gt; NA, NA, \"2\", NA, \"3\", \"3\", \"3\", \"3\", \"3\", NA, NA, NA, NA, N…\n$ oneway     &lt;chr&gt; \"yes\", \"yes\", \"yes\", NA, \"yes\", \"yes\", \"yes\", \"yes\", \"yes\",…\n$ bridge     &lt;chr&gt; NA, NA, \"yes\", NA, NA, NA, NA, NA, NA, NA, NA, \"yes\", NA, N…\n$ layer      &lt;chr&gt; NA, NA, \"1\", NA, NA, NA, NA, NA, NA, NA, NA, \"1\", NA, NA, N…\n$ source     &lt;chr&gt; NA, NA, \"Bing\", NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, \"Bi…\n$ name_th    &lt;chr&gt; \"ถนนฉลองกรุง\", NA, \"ถนนฉลองกรุง\", \"ถนนเอราวัณ 1\", \"ถนนลำลูกกา\",…\n$ osm_id     &lt;dbl&gt; 1125681229, 472283206, 116847248, 378672881, 1312138113, 13…\n$ osm_type   &lt;chr&gt; \"ways_line\", \"ways_line\", \"ways_line\", \"ways_line\", \"ways_l…\n$ geometry   &lt;LINESTRING [m]&gt; LINESTRING (693686.1 151979..., LINESTRING (6929…\n\n# Check crs\nst_crs(th_osm_sf)\n\nCoordinate Reference System:\n  User input: EPSG:32647 \n  wkt:\nPROJCRS[\"WGS 84 / UTM zone 47N\",\n    BASEGEOGCRS[\"WGS 84\",\n        ENSEMBLE[\"World Geodetic System 1984 ensemble\",\n            MEMBER[\"World Geodetic System 1984 (Transit)\"],\n            MEMBER[\"World Geodetic System 1984 (G730)\"],\n            MEMBER[\"World Geodetic System 1984 (G873)\"],\n            MEMBER[\"World Geodetic System 1984 (G1150)\"],\n            MEMBER[\"World Geodetic System 1984 (G1674)\"],\n            MEMBER[\"World Geodetic System 1984 (G1762)\"],\n            MEMBER[\"World Geodetic System 1984 (G2139)\"],\n            ELLIPSOID[\"WGS 84\",6378137,298.257223563,\n                LENGTHUNIT[\"metre\",1]],\n            ENSEMBLEACCURACY[2.0]],\n        PRIMEM[\"Greenwich\",0,\n            ANGLEUNIT[\"degree\",0.0174532925199433]],\n        ID[\"EPSG\",4326]],\n    CONVERSION[\"UTM zone 47N\",\n        METHOD[\"Transverse Mercator\",\n            ID[\"EPSG\",9807]],\n        PARAMETER[\"Latitude of natural origin\",0,\n            ANGLEUNIT[\"degree\",0.0174532925199433],\n            ID[\"EPSG\",8801]],\n        PARAMETER[\"Longitude of natural origin\",99,\n            ANGLEUNIT[\"degree\",0.0174532925199433],\n            ID[\"EPSG\",8802]],\n        PARAMETER[\"Scale factor at natural origin\",0.9996,\n            SCALEUNIT[\"unity\",1],\n            ID[\"EPSG\",8805]],\n        PARAMETER[\"False easting\",500000,\n            LENGTHUNIT[\"metre\",1],\n            ID[\"EPSG\",8806]],\n        PARAMETER[\"False northing\",0,\n            LENGTHUNIT[\"metre\",1],\n            ID[\"EPSG\",8807]]],\n    CS[Cartesian,2],\n        AXIS[\"(E)\",east,\n            ORDER[1],\n            LENGTHUNIT[\"metre\",1]],\n        AXIS[\"(N)\",north,\n            ORDER[2],\n            LENGTHUNIT[\"metre\",1]],\n    USAGE[\n        SCOPE[\"Navigation and medium accuracy spatial referencing.\"],\n        AREA[\"Between 96°E and 102°E, northern hemisphere between equator and 84°N, onshore and offshore. China. Indonesia. Laos. Malaysia - West Malaysia. Mongolia. Myanmar (Burma). Russian Federation. Thailand.\"],\n        BBOX[0,96,84,102]],\n    ID[\"EPSG\",32647]]"
  },
  {
    "objectID": "Take-Home_Ex/Take-Home_Ex_01/Take-Home_Ex01.html#network-kernel-density-estimation",
    "href": "Take-Home_Ex/Take-Home_Ex_01/Take-Home_Ex01.html#network-kernel-density-estimation",
    "title": "Take Home Exercise 01",
    "section": "3.1 Network Kernel Density Estimation",
    "text": "3.1 Network Kernel Density Estimation"
  },
  {
    "objectID": "Take-Home_Ex/Take-Home_Ex_01/Take-Home_Ex01.html#preparing-objects-required-for-performing-nkde",
    "href": "Take-Home_Ex/Take-Home_Ex_01/Take-Home_Ex01.html#preparing-objects-required-for-performing-nkde",
    "title": "Take Home Exercise 01",
    "section": "3.1.1 Preparing objects required for performing NKDE",
    "text": "3.1.1 Preparing objects required for performing NKDE\nBefore generating lixels with lixelize_lines() of spNetwork, we need to know what is the appropriate length of a lixel.\n\n# Check \nth_road_lengths &lt;- st_length(th_osm_sf)\nsummary(th_road_lengths)\n\n     Min.   1st Qu.    Median      Mean   3rd Qu.      Max. \n    0.133    30.298   113.356   397.255   406.497 30918.357 \n\n\n\n# Plot histogram of road lengths\nhist(th_road_lengths, breaks = 100, main = \"Distribution of Road Segment Lengths\",\n     xlab = \"Road Segment Length (meters)\")\n\n\n\n\n\n\n\n\nBased on the above, 200 meters will be selected as the lixel length, as it is more than most road segments (median 113 meters) and it is not too computationally intensive. The minimum lixel length in this case will be the default 1/10 of lixel length.\n\n# Create lixels\nth_lixels &lt;- lixelize_lines(th_osm_sf, 200)\n\n# Create samples\nth_samples &lt;- lines_center(th_lixels)"
  },
  {
    "objectID": "Take-Home_Ex/Take-Home_Ex_01/Take-Home_Ex01.html#bandwidth-selction-for-performing-nkde",
    "href": "Take-Home_Ex/Take-Home_Ex_01/Take-Home_Ex01.html#bandwidth-selction-for-performing-nkde",
    "title": "Take Home Exercise 01",
    "section": "3.1.2 Bandwidth selction for performing NKDE",
    "text": "3.1.2 Bandwidth selction for performing NKDE\nMain points of consideration for running a network KDE are:\n- Adaptive: False due to the computation load and also because the entire study area share a relatively similar network (urban throughout) with lesser accident variation across the network.\n- kernel: quartic as it provides a good balance between local and global estimation\n- method: simple as most accidents happen along the road rather than at intersections\nWith those in mind, bandwidth selection will be determined through bw_cv_likelihood_calc of spNetwork, using likelihood cross validation (aims to find a bandwidth that gives the most similar results when an event is removed). The bandwidth ranges from 50 to 425 based on the nearest neighbour analysis. 50 meters cover most distances between 2 accidents (median of 13 meters), and 1000 meters is a good coverage given the study area (~7700 square km).\n\n# Perform cross validation for bandwidth selection\nth_bws_selection_cv &lt;- bw_cv_likelihood_calc(\n  lines = th_osm_sf, \n  events = ra_sf,\n  w = rep(1, nrow(ra_sf)),\n  kernel_name = \"quartic\",\n  bws = seq(50,1000,50),\n  method = \"simple\", \n  digits = 1, \n  tol = 0.1,\n  grid_shape = c(5,5), \n  max_depth = 8,\n  agg = 5, \n  sparse = TRUE, # Slower but require less memory\n  verbose = TRUE)\n\nCV results are exported for ease of rendering.\n\n# # Export output object and read it in to minimize rendering time\n# write_rds(th_bws_selection_cv, 'data/output/th_bws_selection_cv.rds') # Uncomment when running the CV again\n\n# Read in output object\nth_bws_selection_cv &lt;- read_rds('data/output/th_bws_selection_cv.rds')\n\n\n# Visualize CV Scores\nplot(th_bws_selection_cv$bw, th_bws_selection_cv$cv_scores, \n     type = \"o\", col = \"blue\", xlab = \"Bandwidth (bw)\", ylab = \"CV Scores\",\n     main = \"CV Scores vs Bandwidth\", ylim = c(min(th_bws_selection_cv$cv_scores) - 50, max(th_bws_selection_cv$cv_scores) + 50),\n     pch = 19, lty = 1)\ntext(th_bws_selection_cv$bw, th_bws_selection_cv$cv_scores, \n     labels = round(th_bws_selection_cv$cv_scores, 0), pos = 3, cex = 0.8, col = \"black\")\ngrid()\n\n\n\n\n\n\n\n\nWith this in mind, 500 meters is selected as the bandwidth. Although the cross validation scores favor larger bandwidth, 500 is selected as a trade off between cv performance and potential overfitting."
  },
  {
    "objectID": "Take-Home_Ex/Take-Home_Ex_01/Take-Home_Ex01.html#performing-nkde",
    "href": "Take-Home_Ex/Take-Home_Ex_01/Take-Home_Ex01.html#performing-nkde",
    "title": "Take Home Exercise 01",
    "section": "3.1.3 Performing NKDE",
    "text": "3.1.3 Performing NKDE\n\nfuture::plan(future::multisession(workers=8))\n# Set global option for parallel-safe random number generation\noptions(future.seed = TRUE)\n\n# Perform multi-core NKDE\nth_densities &lt;- nkde.mc(th_osm_sf,\n                  events = ra_sf,\n                  w = rep(1, nrow(ra_sf)),\n                  samples = th_samples,\n                  kernel_name = \"quartic\",\n                  bw = 500,\n                  div= \"bw\",\n                  method = \"simple\",\n                  digits = 1,\n                  tol = 0.1,\n                  grid_shape = c(5,5),\n                  max_depth = 8,\n                  agg = 5,\n                  sparse = TRUE, # Slower but require less memory\n                  verbose = TRUE)\n\nResults are exported for ease of rendering.\n\n# # # Export output object and read it in to minimize rendering time\n# write_rds(th_densities, 'data/output/th_nkde_densities.rds') # Uncomment when running the NKDE again\n\n# Read in output object\nth_densities &lt;- read_rds('data/output/th_nkde_densities.rds')\n\n# Check density values\nsummary(th_densities)\n\n     Min.   1st Qu.    Median      Mean   3rd Qu.      Max. \n0.000e+00 0.000e+00 0.000e+00 2.268e-06 9.410e-08 3.836e-04 \n\n\nGiven the small values of the densities, scaling adjustments will be made to improve the readability after appending the results to the respective lixels and samples.\n\n# Append results to the sample and lixel\nth_samples$density &lt;- th_densities\nth_lixels$density &lt;- th_densities\n\n# Rescale by 1e6\nth_samples$density &lt;- th_samples$density*1000000\nth_lixels$density &lt;- th_lixels$density*1000000\n\nDue to the distribution of density having very small values, log transformation will be made onto the density to improve the contrast\n\n# Log transform the density values (small offset to avoid log(0))\nth_lixels$log_density &lt;- log(th_lixels$density + 0.000001)\n\n# Create overall TH boundary\nth_bound_all &lt;- th_bound_sf %&gt;%\n  st_union()\n\n# Visualize results\ntmap_mode('plot')\n\ntmap mode set to plotting\n\ntm_shape(th_lixels)+\n  tm_lines(col=\"log_density\", palette = 'YlOrRd', style = \"cont\", title.col = \"Log Density\") +\ntm_shape(th_bound_all) +\n  tm_borders() + \ntm_layout(\n    title = \"Network Kernel Density Estimation\", \n    title.size = 1.5,                            \n    legend.title.size = 1.2,                      \n    legend.text.size = 0.8,                       \n    title.position = c(\"center\", \"top\"),         \n    frame = TRUE                                  \n  )\n\n\n\n\n\n\n\n\nWhile the plot is largely filled with areas with low density, it can be seen that there are some patches of roads with higher density, signifying potential hotspots for accidents."
  },
  {
    "objectID": "Take-Home_Ex/Take-Home_Ex_01/Take-Home_Ex01.html#other-explorations",
    "href": "Take-Home_Ex/Take-Home_Ex_01/Take-Home_Ex01.html#other-explorations",
    "title": "Take Home Exercise 01",
    "section": "2.3 Other Explorations",
    "text": "2.3 Other Explorations\nLets try to find out the nearest neighbour distance of each accident. Knowing the distribution of these distances will be useful for determining the parameter values of subsequent analysis.\n\n# Simple EDA\ntable(th_osm_sf$highway)\n\n\n      motorway  motorway_link           path        primary   primary_link \n          1148           1539           3632           4513           1868 \n          road      secondary secondary_link       tertiary  tertiary_link \n             7           6207           1662           5427            388 \n         trunk     trunk_link   unclassified \n          1919            881           7281 \n\nra_ppp &lt;- as.ppp(ra_sf)\n\nWarning in as.ppp.sf(ra_sf): only first attribute column is used for marks\n\nnn_distances &lt;- nndist(ra_ppp)\n\nhist(nn_distances, breaks = 100, main = \"Nearest Neighbour Distance Distribution\",\n     xlab = \"Distance (meters)\")\n\n\n\n\n\n\n\nsummary(nn_distances)\n\n    Min.  1st Qu.   Median     Mean  3rd Qu.     Max. \n   0.001    1.244   13.015   73.437   46.600 7734.549 \n\n\nKnowing that each accident occur very close to one another (median of ~13 meters),\n\nra_sf$Time &lt;- as.POSIXct(ra_sf$incident_datetime, fomat = \"%Y/%m/%d\")\nstart &lt;- as.POSIXct(\"2019/01/01\", format = \"%Y/%m/%d\")\nra_sf$Time &lt;- difftime(ra_sf$Time, start, units = \"days\")\nra_sf$Time &lt;- as.numeric(ra_sf$Time)\nra_sf$Time_2019 &lt;- as.POSIXct(paste(\"2019\", format(ra_sf$incident_datetime, \"%m/%d\")), format = \"%Y %m/%d \")\nra_sf$Time_2019 &lt;- difftime(ra_sf$Time_2019, start, units = \"days\")\nra_sf$Time_2019 &lt;- as.numeric(ra_sf$Time_2019)\n\n\nyears &lt;- as.character(2019:2022)\nmonths &lt;- as.character(1:12)\nmonths &lt;- ifelse(nchar(months) == 1, paste0(\"0\", months), months)\n# Create a list of month start dates for each year\nmonths_starts_labs &lt;- outer(years, months, paste, sep = \"/\")\nmonths_starts_labs &lt;- as.vector(t(months_starts_labs))  # Flatten the matrix\n\n# Convert month start labels to POSIXct and then to numeric days\nmonths_starts_num &lt;- as.POSIXct(paste0(months_starts_labs, \"/01\"), format = \"%Y/%m/%d\")\nmonths_starts_num &lt;- difftime(months_starts_num, start, units = \"days\")\nmonths_starts_num &lt;- as.numeric(months_starts_num)\n\n# Create shorter month labels without the year\nmonths_starts_labs_short &lt;- gsub(\"^\\\\d{4}/\", \"\", months_starts_labs)\n\n# Plot the histogram using ggplot2\nggplot(ra_sf) + \n  geom_histogram(aes(x = Time), bins = 30, color = \"white\") + \n  scale_x_continuous(breaks = months_starts_num, labels = months_starts_labs_short) +\n  labs(x = \"Months\", y = \"Accidents\") +\n  theme(axis.text.x = element_text(angle = 45, hjust = 1))\n\n\n\n\n\n\n\n\n\nw &lt;- rep(1,nrow(ra_sf))\nsamples &lt;- seq(0, max(ra_sf$Time), 0.5)\n\ntime_kernel_values &lt;- data.frame(\n  bw_10 = tkde(ra_sf$Time, w = w, samples = samples, bw = 10, kernel_name = \"quartic\"),\n  bw_20 = tkde(ra_sf$Time, w = w, samples = samples, bw = 20, kernel_name = \"quartic\"),\n  bw_30 = tkde(ra_sf$Time, w = w, samples = samples, bw = 30, kernel_name = \"quartic\"),\n  bw_40 = tkde(ra_sf$Time, w = w, samples = samples, bw = 40, kernel_name = \"quartic\"),\n  bw_50 = tkde(ra_sf$Time, w = w, samples = samples, bw = 50, kernel_name = \"quartic\"),\n  bw_60 = tkde(ra_sf$Time, w = w, samples = samples, bw = 60, kernel_name = \"quartic\"),\n  time = samples\n)\n\ndf_time &lt;- reshape2::melt(time_kernel_values,id.vars = \"time\")\ndf_time$variable &lt;- as.factor(df_time$variable)\n\nggplot(data = df_time) + \n  geom_line(aes(x = time, y = value)) +\n  scale_x_continuous(breaks = months_starts_num, labels = months_starts_labs) +\n  facet_wrap(vars(variable), ncol=2, scales = \"free\") + \n  theme(axis.text = element_text(size = 5))\n\n\n\n\n\n\n\n\nWhile interesting patterns can be observed across different temporal bandwidths, variance is still very high. Let try to see the remove the year and view the temporal attribute as month of year instead.\n\nra_sf$start_of_year &lt;- as.POSIXct(paste0(format(ra_sf$incident_datetime, \"%Y\"), \"-01-01\"), format = \"%Y-%m-%d\")\nra_sf$days_since_start_of_year &lt;- as.numeric(difftime(ra_sf$incident_datetime, ra_sf$start_of_year, units = \"days\"))\n\nmonths &lt;- as.character(1:12)\nmonths &lt;- ifelse(nchar(months)==1, paste0(\"0\", months), months)\nmonths_starts_labs &lt;- paste(\"2019/\",months,\"/01\", sep = \"\")\nmonths_starts_num &lt;- as.POSIXct(months_starts_labs, format = \"%Y/%m/%d\")\nmonths_starts_num &lt;- difftime(months_starts_num, start, units = \"days\")\nmonths_starts_num &lt;- as.numeric(months_starts_num)\nmonths_starts_labs &lt;- gsub(\"2019/\", \"\", months_starts_labs, fixed = TRUE)\n\nggplot(ra_sf) + \n  geom_histogram(aes(x = Time_2019), bins = 30, color = \"white\") + \n  scale_x_continuous(breaks = months_starts_num, labels = months_starts_labs)\n\nWarning: Removed 8 rows containing non-finite outside the scale range\n(`stat_bin()`).\n\n\n\n\n\n\n\n\n\nNow that the we are only looking at months of year, it is clear that there are some months (~April-May and ~October-November) that have more accidents.\n\nw &lt;- rep(1,nrow(ra_sf))\nsamples &lt;- seq(0, max(ra_sf$days_since_start_of_year), 0.5)\n\ntime_kernel_values &lt;- data.frame(\n  bw_10 = tkde(ra_sf$days_since_start_of_year, w = w, samples = samples, bw = 10, kernel_name = \"quartic\"),\n  bw_20 = tkde(ra_sf$days_since_start_of_year, w = w, samples = samples, bw = 20, kernel_name = \"quartic\"),\n  bw_30 = tkde(ra_sf$days_since_start_of_year, w = w, samples = samples, bw = 30, kernel_name = \"quartic\"),\n  bw_40 = tkde(ra_sf$days_since_start_of_year, w = w, samples = samples, bw = 40, kernel_name = \"quartic\"),\n  bw_50 = tkde(ra_sf$days_since_start_of_year, w = w, samples = samples, bw = 50, kernel_name = \"quartic\"),\n  bw_60 = tkde(ra_sf$days_since_start_of_year, w = w, samples = samples, bw = 60, kernel_name = \"quartic\"),\n  time = samples\n)\n\ndf_time &lt;- reshape2::melt(time_kernel_values,id.vars = \"time\")\ndf_time$variable &lt;- as.factor(df_time$variable)\n\nggplot(data = df_time) + \n  geom_line(aes(x = time, y = value)) +\n  scale_x_continuous(breaks = months_starts_num, labels = months_starts_labs) +\n  facet_wrap(vars(variable), ncol=2, scales = \"free\") + \n  theme(axis.text = element_text(size = 5))\n\n\n\n\n\n\n\n\nFrom this, we can clearly see that there might be a seasonal bimodal trend captured with a temporal bandwidth of 30-40 days. The newly created temporal variable days_since_start_of_year will be used instead for subsequent temporal analysis.\n\n# Cartographic Quality of Bangkok Metropolitan Region\ntmap_style(\"classic\")\n\ntmap style set to \"classic\"\n\n\nother available styles are: \"white\", \"gray\", \"natural\", \"cobalt\", \"col_blind\", \"albatross\", \"beaver\", \"bw\", \"watercolor\" \n\ntm_shape(th_bound_sf)+\n  tm_polygons(col = \"ADM1_EN\", palette = \"Set3\", title = \"Provinces\", border.col = \"black\", border.alpha = 0.5) +\n  tm_layout(main.title = \"Accidents across Bangkok Metropolitan Region\",\n            main.title.position = \"center\",\n            main.title.size = 1.2,\n            legend.height = 0.45, \n            legend.width = 0.35,\n            frame = TRUE) +\n  tm_borders(alpha = 0.5) +\n  tm_compass(type=\"8star\", size = 2) +\n  tm_scale_bar(width = 0.15) +\n  tm_grid(lwd = 0.1, alpha = 0.2) +\n  tm_credits(\"Source: Subnational Administrative Boundaries from HDX \\n and Accident data from Kaggle\", \n             position = c(\"left\", \"bottom\")) +\ntm_shape(ra_sf) +\n  tm_dots()\n\nWarning: One tm layer group has duplicated layer types, which are omitted. To\ndraw multiple layers of the same type, use multiple layer groups (i.e. specify\ntm_shape prior to each of them).\n\n\n\n\n\n\n\n\n# Change back to default\ntmap_style(\"white\")\n\ntmap style set to \"white\"\n\n\nother available styles are: \"gray\", \"natural\", \"cobalt\", \"col_blind\", \"albatross\", \"beaver\", \"bw\", \"classic\", \"watercolor\" \n\n\nIt is important to note that given the context of the issue, it is not encouraged to perform any typical spatial point pattern analysis.\nFirst-order spatial point pattern analysis such as kernel density estimation and nearest neighbours (i.e. Clark-Evans test) may give an indication of whether the events are clustered, regular or randomly occur, possibly highlighting potential accident hotspots. On the other hand second-order spatial point pattern analysis may illustrate spatial dependencies indicating underlying hazard. Nevertheless, techniques under both analysis are likely to be misleading as it will be heavily biased.\nFrom the exploratory data analysis, it is clear that accidents are network constrained. This will induce misleading results as the above analysis techniques assume that events can occur throughout the study area. Therefore, density based analysis such as KDE will naturally cluster around roads, whereas second-order spatial point analysis such as the F-function will calculate the distribution of distances from random locations in the study area to the nearest point in the pattern (including locations impossible for road accident to occur).\nTherefore, network spatial point pattern analysis will be the fundamental analysis for this assi"
  },
  {
    "objectID": "Take-Home_Ex/Take-Home_Ex_01/Take-Home_Ex01.html#temporal-network-spatial-point-patterns-analysis",
    "href": "Take-Home_Ex/Take-Home_Ex_01/Take-Home_Ex01.html#temporal-network-spatial-point-patterns-analysis",
    "title": "Take Home Exercise 01",
    "section": "3.2 Temporal Network Spatial Point Patterns Analysis",
    "text": "3.2 Temporal Network Spatial Point Patterns Analysis\nAlthough network kernel density estimation is useful, it will be interesting to see how temporal effects play into the analysis.\n\n3.2.1 Bandwidth selction for performing TNKDE\nSimilar to NKDE, cross validation is also used to determine an appropriate bandwidth prior to performing TNKDE\n\n# Perform cross validation for bandwidth selection\ntnkde_cv_scores &lt;- bw_tnkde_cv_likelihood_calc(\n  bws_net = seq(200,2000,100),\n  bws_time = seq(10,100,10),\n  lines = th_osm_sf,\n  events = ra_sf,\n  time_field = \"days_since_start_of_year\",\n  w = rep(1, nrow(ra_sf)),\n  kernel_name = \"quartic\",\n  method = \"simple\",\n  diggle_correction = FALSE,\n  study_area = NULL,\n  max_depth = 10,\n  digits = 2,\n  tol = 0.1,\n  agg = 5,\n  sparse=TRUE,\n  grid_shape=c(5,5),\n  sub_sample=1,\n  verbose = TRUE,\n  check = TRUE)\n\nCV results are exported for ease of rendering.\n\n# # Export output object and read it in to minimize rendering time\n# write_rds(tnkde_cv_scores, 'data/output/tnkde_cv_scores.rds') # Uncomment when running the CV again\n\n# Read in output object\ntnkde_cv_scores &lt;- read_rds('data/output/tnkde_cv_scores.rds')\n\n\nknitr::kable(tnkde_cv_scores)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n10\n20\n30\n40\n50\n60\n70\n80\n90\n100\n\n\n\n\n200\n-488.8391\n-395.9844\n-340.6128\n-300.32529\n-272.37465\n-253.29978\n-237.41154\n-225.53148\n-216.71559\n-207.00785\n\n\n300\n-442.0746\n-344.0055\n-289.4478\n-252.64892\n-227.74359\n-209.93879\n-195.81919\n-185.44796\n-177.86708\n-169.13565\n\n\n400\n-408.2525\n-310.4303\n-257.2129\n-222.20055\n-198.65273\n-183.17807\n-170.50691\n-160.79403\n-153.64465\n-145.55686\n\n\n500\n-376.7500\n-281.8185\n-231.3860\n-200.35611\n-177.89627\n-163.07055\n-151.20934\n-142.08086\n-135.36448\n-128.07184\n\n\n600\n-351.0659\n-257.4746\n-211.3567\n-182.05483\n-161.29048\n-147.79331\n-136.83527\n-128.81571\n-122.37053\n-115.56274\n\n\n700\n-329.7402\n-239.5227\n-194.6599\n-167.74013\n-148.05241\n-135.25297\n-124.93592\n-117.81671\n-111.38114\n-104.99972\n\n\n800\n-310.2521\n-224.1953\n-182.2671\n-156.32081\n-137.90432\n-125.64685\n-116.01695\n-109.64280\n-103.37158\n-96.99915\n\n\n900\n-294.6411\n-210.7383\n-170.6255\n-146.01396\n-128.86754\n-116.98706\n-108.04640\n-102.09894\n-96.14742\n-90.30192\n\n\n1000\n-278.0828\n-197.9278\n-159.7744\n-136.54561\n-120.31005\n-109.17115\n-100.55522\n-94.71600\n-89.50149\n-83.76388\n\n\n1100\n-265.1032\n-187.0468\n-151.3857\n-129.43137\n-113.99407\n-103.85638\n-95.14410\n-89.15736\n-84.41659\n-79.20519\n\n\n1200\n-253.4037\n-178.0653\n-144.4721\n-123.31912\n-108.68239\n-99.12883\n-90.78507\n-84.69887\n-79.96060\n-75.11728\n\n\n1300\n-242.6488\n-169.3980\n-137.5605\n-117.21277\n-102.58253\n-93.14570\n-85.06518\n-79.24283\n-74.76904\n-70.03581\n\n\n1400\n-233.1655\n-161.5255\n-130.7123\n-111.78634\n-98.57508\n-89.40477\n-81.48844\n-75.98101\n-71.30248\n-66.93541\n\n\n1500\n-224.7279\n-154.2199\n-124.5803\n-106.87290\n-93.99033\n-85.34958\n-78.32448\n-73.08074\n-68.56236\n-64.14709\n\n\n1600\n-217.5111\n-148.2366\n-119.0356\n-102.12499\n-89.35560\n-81.03575\n-74.53567\n-69.55822\n-65.45832\n-61.35935\n\n\n1700\n-208.9319\n-142.1506\n-113.9053\n-97.94673\n-85.75761\n-77.44410\n-71.16006\n-66.49763\n-62.55803\n-58.67018\n\n\n1800\n-202.1349\n-136.4325\n-109.0920\n-93.72484\n-82.22093\n-74.38092\n-68.46565\n-63.96237\n-60.49371\n-56.86868\n\n\n1900\n-196.9746\n-132.8050\n-105.4827\n-89.96618\n-78.52163\n-70.73879\n-65.29434\n-61.05605\n-57.59202\n-54.38596\n\n\n2000\n-189.1396\n-127.6685\n-101.5596\n-86.31465\n-75.34629\n-67.87863\n-62.96138\n-59.04090\n-55.73670\n-52.58692\n\n\n\n\n\nWith this in mind, the bandwidth selected is 100 days and 1000 meters. While a larger bandwidth is favored by the cross validation, the concern is on the overfitting risks.\n\n\n3.2.2 Performing TNKDE\n\n# choosing sample in times (every 10 days)\nsample_time &lt;- seq(0, max(ra_sf$days_since_start_of_year), 10)\n\n\ntnkde_densities &lt;- tnkde(lines = th_osm_sf,\n                   events = ra_sf,\n                   time_field = \"days_since_start_of_year\",\n                   w = rep(1, nrow(ra_sf)), \n                   samples_loc = th_samples,\n                   samples_time = sample_time, \n                   kernel_name = \"quartic\",\n                   bw_net = 1000, bw_time = 100,\n                   method = \"simple\",\n                   div = \"bw\", max_depth = 8,\n                   digits = 2, tol = 0.1,\n                   agg = 5, \n                   grid_shape = c(5,5), \n                   verbose  = TRUE)\n\nResults are saved for ease of rendering\n\n# # Export output object and read it in to minimize rendering time\n# write_rds(tnkde_densities, 'data/output/tnkde_densities.rds') # Uncomment when running the TNKDE again\n\n# Read in output object\ntnkde_densities &lt;- read_rds('data/output/tnkde_densities.rds')\n\nFor ease of visualization, a gif will be created to illustrate how the intensity changes throughout the year.\n\n# Creating a color palette for all the densities\nall_densities &lt;- c(tnkde_densities)\ncolor_breaks &lt;- classIntervals(all_densities, n = 10, style = \"kmeans\")\n\n# Generating a map at each sample time\nall_maps &lt;- lapply(1:ncol(tnkde_densities), function(i){\n  time &lt;- sample_time[[i]]\n  date &lt;- as.Date(start) + time\n  \n  formatted_date &lt;- format(date, \"%m-%d\")  # Display only month and day\n  \n  th_samples$density &lt;- tnkde_densities[,i]\n  \n  map1 &lt;- tm_shape(th_samples) + \n    tm_dots(col = \"density\", size = 0.01,\n            breaks = color_breaks$brks, palette = viridis(10)) + \n    tm_layout(legend.show = FALSE, \n              main.title = as.character(formatted_date),  # Use formatted month-day date\n              main.title.size = 0.5)\n  return(map1)\n})\n\n\ntmap_animation(all_maps, filename = \"data/images/animated_map.gif\", \n               width = 1000, height = 1000, dpi = 300, delay = 50)\n\n\n# Visualize gif\nknitr::include_graphics(\"images/animated_map.gif\")\n\n\n\n\n\n\n\n\nA few observations can be made from the temporal network kernel density estimation gif:\n- Throughout the year, there are certain portions of the network that are consistently denser. These are notably straight roads (Rama II Road, Kanchanaphisek Road, etc), which may induce more drivers to speed resulting in accidents.\n- There are large variations in Pathum Thani’s road network over the year, suggesting potential behavioral tendencies for drivers within that region that led to accidents.\n- Individual hotspots that appear over the study area at different parts of the year highlights potential seasonal issues."
  },
  {
    "objectID": "Take-Home_Ex/Take-Home_Ex_01/Take-Home_Ex01.html#network-constrained-g--and-k-function-analysis",
    "href": "Take-Home_Ex/Take-Home_Ex_01/Take-Home_Ex01.html#network-constrained-g--and-k-function-analysis",
    "title": "Take Home Exercise 01",
    "section": "3.3 Network Constrained G- and K-Function Analysis",
    "text": "3.3 Network Constrained G- and K-Function Analysis\nParameters selected are made largely with the goal of reducing computational load.\nHo: The observed spatial point events are randomly distributed over the BMR network.\nH1: The observed spatial point events are not randomly distributed over the BMR network.\n\nkfun_accidents_th &lt;- kfunctions(th_osm_sf, \n                             ra_sf,\n                             start = 0, \n                             end = 500, \n                             step = 50, \n                             width = 50, \n                             nsim = 49, \n                             # resolution = 100,\n                             verbose = TRUE,\n                             agg = 200,\n                             conf_int = 0.05)\n\nResults are saved for ease of rendering\n\n# # Export output object and read it in to minimize rendering time\n# write_rds(kfun_accidents_th, 'data/output/th_kfun.rds') # Uncomment when running the Kfunction again\n\n# Read in output object\nkfun_accidents_th &lt;- read_rds('data/output/th_kfun.rds')\n\n\nkfun_accidents_th$plotk +\n  ggtitle(\"K-Function Plot of all accidents in BMR: 50 simulations\") +\n  theme(plot.title = element_text(hjust = 0.5, size = 16, face = \"bold\"))\n\n\n\n\n\n\n\n\n\nkfun_accidents_th$plotg +\n  ggtitle(\"G-Function Plot of all accidents in BMR: 50 simulations\") +\n  theme(plot.title = element_text(hjust = 0.5, size = 16, face = \"bold\"))\n\n\n\n\n\n\n\n\nFrom both plots, the observed values are consistently below the confidence envelope. Therefore we can reject the null hypothesis and conclude that accidents follow a regular pattern across all distances."
  },
  {
    "objectID": "Take-Home_Ex/Take-Home_Ex_01/Take-Home_Ex01.html#behavioral-factors",
    "href": "Take-Home_Ex/Take-Home_Ex_01/Take-Home_Ex01.html#behavioral-factors",
    "title": "Take Home Exercise 01",
    "section": "3.4 Behavioral Factors",
    "text": "3.4 Behavioral Factors\nLets see how behavioral factors can affect the occurrence of accidents. Complete spatial randomness test will be done separately for accidents that are presumably caused by speeding, and accidents caused by other reasons.\nHo: The observed spatial point events are randomly distributed over the BMR network.\nH1: The observed spatial point events are not randomly distributed over the BMR network.\n\nSpeedingNon Speeding\n\n\n\n# Prepare filtered accidents for Speeding\nra_sf_bh_spd &lt;- ra_sf %&gt;%\n  filter(presumed_cause == 'speeding')\n\n\nkfun_bh_spd &lt;- kfunctions(th_osm_sf, \n                          ra_sf_bh_spd,\n                          start = 0, \n                          end = 500, \n                          step = 50, \n                          width = 50, \n                          nsim = 49, \n                             # resolution = 100,\n                          verbose = TRUE,\n                          agg = 200,\n                          conf_int = 0.05)\n\nResults are saved for ease of rendering\n\n# # Export output object and read it in to minimize rendering time\n# write_rds(kfun_bh_spd, 'data/output/kfun_bh_spd.rds') # Uncomment when running the Kfunction again\n\n# Read in output object\nkfun_bh_spd &lt;- read_rds('data/output/kfun_bh_spd.rds')\n\n\nkfun_bh_spd$plotk +\n  ggtitle(\"K-Function Plot of speeding related accidents in BMR: 50 simulations\") +\n  theme(plot.title = element_text(hjust = 0.5, size = 14, face = \"bold\"))\n\n\n\n\n\n\n\n\n\nkfun_bh_spd$plotg +\n  ggtitle(\"G-Function Plot of speeding related accidents in BMR: 50 simulations\") +\n  theme(plot.title = element_text(hjust = 0.5, size = 14, face = \"bold\"))\n\n\n\n\n\n\n\n\n\n\n\n# Prepare filtered accidents for Speeding\nra_sf_bh_oth &lt;- ra_sf %&gt;%\n  filter(presumed_cause != 'speeding')\n\n\nkfun_bh_oth &lt;- kfunctions(th_osm_sf, \n                          ra_sf_bh_oth,\n                          start = 0, \n                          end = 500, \n                          step = 50, \n                          width = 50, \n                          nsim = 49, \n                             # resolution = 100,\n                          verbose = TRUE,\n                          agg = 200,\n                          conf_int = 0.05)\n\n\n# # Export output object and read it in to minimize rendering time\n# write_rds(kfun_bh_oth, 'data/output/kfun_bh_oth.rds') # Uncomment when running the Kfunction again\n\n# Read in output object\nkfun_bh_oth &lt;- read_rds('data/output/kfun_bh_oth.rds')\n\n\nkfun_bh_oth$plotk+\n  ggtitle(\"K-Function Plot of non-speeding related accidents in BMR: 50 simulations\") +\n  theme(plot.title = element_text(hjust = 0.5, size = 12, face = \"bold\"))\n\n\n\n\n\n\n\n\n\nkfun_bh_oth$plotg +\n  ggtitle(\"G-Function Plot of non-speeding related accidents in BMR: 50 simulations\") +\n  theme(plot.title = element_text(hjust = 0.5, size = 12, face = \"bold\"))\n\n\n\n\n\n\n\n\n\n\n\nFor accidents involving speeding, given that both G- and K- observed values are below the envelope. Again, we will then reject the null hypothesis and conclude that accidents related to speeding follow a regular pattern across all distances.\nHowever, for accidents involving non-speeding related reasons, although K-observed values are consistently below the envelope, the G-values are within the envelope at a particular distance (~300 meters). This suggests a globally regular pattern (K-function alternative hypothesis), with localized randomness at a particular distance."
  },
  {
    "objectID": "Take-Home_Ex/Take-Home_Ex_01/Take-Home_Ex01.html#environmental-factors",
    "href": "Take-Home_Ex/Take-Home_Ex_01/Take-Home_Ex01.html#environmental-factors",
    "title": "Take Home Exercise 01",
    "section": "3.5 Environmental Factors",
    "text": "3.5 Environmental Factors\n\n3.5.1 Road Type\n\nStraight RoadsOther Road Types\n\n\n\n# Prepare filtered accidents for straight roads\nra_sf_en_str &lt;- ra_sf %&gt;%\n  filter(road_description == 'straight road')\n\n\nkfun_en_str &lt;- kfunctions(th_osm_sf, \n                          ra_sf_en_str,\n                          start = 0, \n                          end = 500, \n                          step = 50, \n                          width = 50, \n                          nsim = 49, \n                             # resolution = 100,\n                          verbose = TRUE,\n                          agg = 200,\n                          conf_int = 0.05)\n\n\n# # Export output object and read it in to minimize rendering time\n# write_rds(kfun_en_str, 'data/output/kfun_en_str.rds') # Uncomment when running the Kfunction again\n\n# Read in output object\nkfun_en_str &lt;- read_rds('data/output/kfun_en_str.rds')\n\n\nkfun_en_str$plotk+\n  ggtitle(\"K-Function Plot of accidents on straight roads in BMR: 50 simulations\") +\n  theme(plot.title = element_text(hjust = 0.5, size = 12, face = \"bold\"))\n\n\n\n\n\n\n\n\n\nkfun_en_str$plotg+\n  ggtitle(\"G-Function Plot of accidents on straight roads in BMR: 50 simulations\") +\n  theme(plot.title = element_text(hjust = 0.5, size = 12, face = \"bold\"))\n\n\n\n\n\n\n\n\n\n\n\n# Prepare filtered accidents for other roads\nra_sf_en_oth &lt;- ra_sf %&gt;%\n  filter(road_description != 'straight road')\n\n\nkfun_en_oth &lt;- kfunctions(th_osm_sf, \n                          ra_sf_en_oth,\n                          start = 0, \n                          end = 500, \n                          step = 50, \n                          width = 50, \n                          nsim = 49, \n                             # resolution = 100,\n                          verbose = TRUE,\n                          agg = 200,\n                          conf_int = 0.05)\n\n\n# # Export output object and read it in to minimize rendering time\n# write_rds(kfun_en_oth, 'data/output/kfun_en_oth.rds') # Uncomment when running the Kfunction again\n\n# Read in output object\nkfun_en_oth &lt;- read_rds('data/output/kfun_en_oth.rds')\n\n\nkfun_en_oth$plotk+\n  ggtitle(\"K-Function Plot of accidents on other road types in BMR: 50 simulations\") +\n  theme(plot.title = element_text(hjust = 0.5, size = 12, face = \"bold\"))\n\n\n\n\n\n\n\n\n\nkfun_en_oth$plotg+\n  ggtitle(\"G-Function Plot of accidents on other road types in BMR: 50 simulations\") +\n  theme(plot.title = element_text(hjust = 0.5, size = 12, face = \"bold\"))\n\n\n\n\n\n\n\n\n\n\n\nFor accidents involving straight roads, given that both G- and K- observed values are below the envelope. Again, we will then reject the null hypothesis and conclude that accidents on straight roads follow a regular pattern across all distances.\nHowever, for accidents on other road types, although K-observed values are consistently below the envelope, the G-values are again within the envelope at a particular distance (~300-400 and 500 meters). This suggests a globally regular pattern (K-function alternative hypothesis), with localized randomness at a particular distance.\n\n\n3.5.2 Weather Condition\n\nClear WeatherOther Weather\n\n\n\n# Prepare filtered accidents for clear weather\nra_sf_wth_clr &lt;- ra_sf %&gt;%\n  filter(weather_condition == 'clear')\n\n\nkfun_wth_clr &lt;- kfunctions(th_osm_sf, \n                          ra_sf_wth_clr,\n                          start = 0, \n                          end = 500, \n                          step = 50, \n                          width = 50, \n                          nsim = 49, \n                             # resolution = 100,\n                          verbose = TRUE,\n                          agg = 200,\n                          conf_int = 0.05)\n\n\n# # Export output object and read it in to minimize rendering time\n# write_rds(kfun_wth_clr, 'data/output/kfun_wth_clr.rds') # Uncomment when running the Kfunction again\n\n# Read in output object\nkfun_wth_clr &lt;- read_rds('data/output/kfun_wth_clr.rds')\n\n\nkfun_wth_clr$plotk+\n  ggtitle(\"K-Function Plot of accidents during clear weather in BMR: 50 simulations\") +\n  theme(plot.title = element_text(hjust = 0.5, size = 12, face = \"bold\"))\n\n\n\n\n\n\n\n\n\nkfun_wth_clr$plotg+\n  ggtitle(\"G-Function Plot of accidents during clear weather in BMR: 50 simulations\") +\n  theme(plot.title = element_text(hjust = 0.5, size = 12, face = \"bold\"))\n\n\n\n\n\n\n\n\n\n\n\n# Prepare filtered accidents for clear weather\nra_sf_wth_oth &lt;- ra_sf %&gt;%\n  filter(weather_condition != 'clear')\n\n\nkfun_wth_oth &lt;- kfunctions(th_osm_sf, \n                          ra_sf_wth_oth,\n                          start = 0, \n                          end = 500, \n                          step = 50, \n                          width = 50, \n                          nsim = 49, \n                             # resolution = 100,\n                          verbose = TRUE,\n                          agg = 200,\n                          conf_int = 0.05)\n\n\n# # Export output object and read it in to minimize rendering time\n# write_rds(kfun_wth_oth, 'data/output/kfun_wth_oth.rds') # Uncomment when running the Kfunction again\n\n# Read in output object\nkfun_wth_oth &lt;- read_rds('data/output/kfun_wth_oth.rds')\n\n\nkfun_wth_oth$plotk+\n  ggtitle(\"K-Function Plot of accidents during other weather in BMR: 50 simulations\") +\n  theme(plot.title = element_text(hjust = 0.5, size = 12, face = \"bold\"))\n\n\n\n\n\n\n\n\n\nkfun_wth_oth$plotg+\n  ggtitle(\"G-Function Plot of accidents during other weather in BMR: 50 simulations\") +\n  theme(plot.title = element_text(hjust = 0.5, size = 12, face = \"bold\"))\n\n\n\n\n\n\n\n\n\n\n\nFor accidents during clear weather, given that both G- and K- observed values are below the envelope. Again, we will then reject the null hypothesis and conclude that accidents during clear weather follow a regular pattern across all distances.\nHowever, for accidents during other weather conditions, K-observed values are consistently below the envelope whereas the G-values are have a mix of behaviors. It exhibits regular patterns under 200 meters, random pattern from 200-350 meters and clustered pattern abve 350 meters."
  },
  {
    "objectID": "In-Class_Ex/In-Class_Ex_03/In-Class_Ex03.html#setting-up",
    "href": "In-Class_Ex/In-Class_Ex_03/In-Class_Ex03.html#setting-up",
    "title": "In Class Exercise 03",
    "section": "",
    "text": "pacman::p_load(sf, spNetwork, tmap, tidyverse)\n\n\n\n\n\n# Load network dataset\nnetwork &lt;- st_read(dsn=\"data\", layer=\"Punggol_St\") # Check that geometry is Linestring and not multilinestring\n\nReading layer `Punggol_St' from data source \n  `C:\\Users\\Henry\\Desktop\\SMU Masters\\2024-2025 T1\\Geospatial Analytics & Applications\\Project\\GeospatialWebsite\\In-Class_Ex\\In-Class_Ex_03\\data' \n  using driver `ESRI Shapefile'\nSimple feature collection with 2642 features and 2 fields\nGeometry type: LINESTRING\nDimension:     XY\nBounding box:  xmin: 34038.56 ymin: 40941.11 xmax: 38882.85 ymax: 44801.27\nProjected CRS: SVY21 / Singapore TM\n\n\n\n# Load childcare dataset\nchildcare &lt;- st_read(dsn=\"data\", layer=\"Punggol_CC\") %&gt;%\n  st_zm(drop = TRUE, what = \"ZM\") # Remove Z dimension\n\nReading layer `Punggol_CC' from data source \n  `C:\\Users\\Henry\\Desktop\\SMU Masters\\2024-2025 T1\\Geospatial Analytics & Applications\\Project\\GeospatialWebsite\\In-Class_Ex\\In-Class_Ex_03\\data' \n  using driver `ESRI Shapefile'\nSimple feature collection with 61 features and 1 field\nGeometry type: POINT\nDimension:     XYZ\nBounding box:  xmin: 34423.98 ymin: 41503.6 xmax: 37619.47 ymax: 44685.77\nz_range:       zmin: 0 zmax: 0\nProjected CRS: SVY21 / Singapore TM\n\n\n\nChildcareNetwork\n\n\n\n# See childcare features\nchildcare\n\nSimple feature collection with 61 features and 1 field\nGeometry type: POINT\nDimension:     XY\nBounding box:  xmin: 34423.98 ymin: 41503.6 xmax: 37619.47 ymax: 44685.77\nProjected CRS: SVY21 / Singapore TM\nFirst 10 features:\n      Name                  geometry\n1   kml_10 POINT (36173.81 42550.33)\n2   kml_99 POINT (36479.56 42405.21)\n3  kml_100 POINT (36618.72 41989.13)\n4  kml_101 POINT (36285.37 42261.42)\n5  kml_122  POINT (35414.54 42625.1)\n6  kml_161 POINT (36545.16 42580.09)\n7  kml_172 POINT (35289.44 44083.57)\n8  kml_188 POINT (36520.56 42844.74)\n9  kml_205  POINT (36924.01 41503.6)\n10 kml_222 POINT (37141.76 42326.36)\n\n\n\n# See childcare crs information\nst_crs(childcare)\n\nCoordinate Reference System:\n  User input: SVY21 / Singapore TM \n  wkt:\nPROJCRS[\"SVY21 / Singapore TM\",\n    BASEGEOGCRS[\"SVY21\",\n        DATUM[\"SVY21\",\n            ELLIPSOID[\"WGS 84\",6378137,298.257223563,\n                LENGTHUNIT[\"metre\",1]]],\n        PRIMEM[\"Greenwich\",0,\n            ANGLEUNIT[\"degree\",0.0174532925199433]],\n        ID[\"EPSG\",4757]],\n    CONVERSION[\"Singapore Transverse Mercator\",\n        METHOD[\"Transverse Mercator\",\n            ID[\"EPSG\",9807]],\n        PARAMETER[\"Latitude of natural origin\",1.36666666666667,\n            ANGLEUNIT[\"degree\",0.0174532925199433],\n            ID[\"EPSG\",8801]],\n        PARAMETER[\"Longitude of natural origin\",103.833333333333,\n            ANGLEUNIT[\"degree\",0.0174532925199433],\n            ID[\"EPSG\",8802]],\n        PARAMETER[\"Scale factor at natural origin\",1,\n            SCALEUNIT[\"unity\",1],\n            ID[\"EPSG\",8805]],\n        PARAMETER[\"False easting\",28001.642,\n            LENGTHUNIT[\"metre\",1],\n            ID[\"EPSG\",8806]],\n        PARAMETER[\"False northing\",38744.572,\n            LENGTHUNIT[\"metre\",1],\n            ID[\"EPSG\",8807]]],\n    CS[Cartesian,2],\n        AXIS[\"northing (N)\",north,\n            ORDER[1],\n            LENGTHUNIT[\"metre\",1]],\n        AXIS[\"easting (E)\",east,\n            ORDER[2],\n            LENGTHUNIT[\"metre\",1]],\n    USAGE[\n        SCOPE[\"Cadastre, engineering survey, topographic mapping.\"],\n        AREA[\"Singapore - onshore and offshore.\"],\n        BBOX[1.13,103.59,1.47,104.07]],\n    ID[\"EPSG\",3414]]\n\n\n\n\n\n# See network features\nnetwork\n\nSimple feature collection with 2642 features and 2 fields\nGeometry type: LINESTRING\nDimension:     XY\nBounding box:  xmin: 34038.56 ymin: 40941.11 xmax: 38882.85 ymax: 44801.27\nProjected CRS: SVY21 / Singapore TM\nFirst 10 features:\n     LINK_ID                   ST_NAME                       geometry\n1  116130894                PUNGGOL RD LINESTRING (36546.89 44574....\n2  116130897 PONGGOL TWENTY-FOURTH AVE LINESTRING (36546.89 44574....\n3  116130901   PONGGOL SEVENTEENTH AVE LINESTRING (36012.73 44154....\n4  116130902   PONGGOL SEVENTEENTH AVE LINESTRING (36062.81 44197....\n5  116130907           PUNGGOL CENTRAL LINESTRING (36131.85 42755....\n6  116130908                PUNGGOL RD LINESTRING (36112.93 42752....\n7  116130909           PUNGGOL CENTRAL LINESTRING (36127.4 42744.5...\n8  116130910               PUNGGOL FLD LINESTRING (35994.98 42428....\n9  116130911               PUNGGOL FLD LINESTRING (35984.97 42407....\n10 116130912            EDGEFIELD PLNS LINESTRING (36200.87 42219....\n\n\n\n# See network crs information\nst_crs(network)\n\nCoordinate Reference System:\n  User input: SVY21 / Singapore TM \n  wkt:\nPROJCRS[\"SVY21 / Singapore TM\",\n    BASEGEOGCRS[\"SVY21\",\n        DATUM[\"SVY21\",\n            ELLIPSOID[\"WGS 84\",6378137,298.257223563,\n                LENGTHUNIT[\"metre\",1]]],\n        PRIMEM[\"Greenwich\",0,\n            ANGLEUNIT[\"degree\",0.0174532925199433]],\n        ID[\"EPSG\",4757]],\n    CONVERSION[\"Singapore Transverse Mercator\",\n        METHOD[\"Transverse Mercator\",\n            ID[\"EPSG\",9807]],\n        PARAMETER[\"Latitude of natural origin\",1.36666666666667,\n            ANGLEUNIT[\"degree\",0.0174532925199433],\n            ID[\"EPSG\",8801]],\n        PARAMETER[\"Longitude of natural origin\",103.833333333333,\n            ANGLEUNIT[\"degree\",0.0174532925199433],\n            ID[\"EPSG\",8802]],\n        PARAMETER[\"Scale factor at natural origin\",1,\n            SCALEUNIT[\"unity\",1],\n            ID[\"EPSG\",8805]],\n        PARAMETER[\"False easting\",28001.642,\n            LENGTHUNIT[\"metre\",1],\n            ID[\"EPSG\",8806]],\n        PARAMETER[\"False northing\",38744.572,\n            LENGTHUNIT[\"metre\",1],\n            ID[\"EPSG\",8807]]],\n    CS[Cartesian,2],\n        AXIS[\"northing (N)\",north,\n            ORDER[1],\n            LENGTHUNIT[\"metre\",1]],\n        AXIS[\"easting (E)\",east,\n            ORDER[2],\n            LENGTHUNIT[\"metre\",1]],\n    USAGE[\n        SCOPE[\"Cadastre, engineering survey, topographic mapping.\"],\n        AREA[\"Singapore - onshore and offshore.\"],\n        BBOX[1.13,103.59,1.47,104.07]],\n    ID[\"EPSG\",3414]]"
  },
  {
    "objectID": "In-Class_Ex/In-Class_Ex_03/In-Class_Ex03.html#visualize-geospatial-data",
    "href": "In-Class_Ex/In-Class_Ex_03/In-Class_Ex03.html#visualize-geospatial-data",
    "title": "In Class Exercise 03",
    "section": "",
    "text": "# Visualize both geospatial data\nplot(st_geometry(network)) # Use st_geometry to plot only the network without corresponding attributes\nplot(childcare,add=T,col='red',pch = 19)\n\n\n\n\n\n\n\n\n\n# Interactive Visualization with tmap \ntmap_mode('view')\n\ntmap mode set to interactive viewing\n\ntm_shape(childcare) +\n  tm_dots() +\n  tm_shape(network) +\n  tm_lines()\n\n\n\n\n\n\n# Set tmap_mode back to plot\ntmap_mode('plot')\n\ntmap mode set to plotting"
  },
  {
    "objectID": "In-Class_Ex/In-Class_Ex_03/In-Class_Ex03.html#network-kde-nkde-analysis",
    "href": "In-Class_Ex/In-Class_Ex_03/In-Class_Ex03.html#network-kde-nkde-analysis",
    "title": "In Class Exercise 03",
    "section": "",
    "text": "# Cut spatiallines objects into lixels with specified minimal distance using lixelize_lines from spNetwork\nlixels &lt;- lixelize_lines(network, 700, mindist = 375)\n# Use nearest neighbour to gauge the appropriate distance - bottom ~25%-10%\n\n\n\n\n\n# create line centre points with lines_center from spNetwork\nsamples &lt;- lines_center(lixels) \n\ntmap_mode('view')\n\ntmap mode set to interactive viewing\n\ntm_shape(lixels) + \n  tm_lines() + \n  tm_shape(samples) + \n  tm_dots(size =0.01)\n\n\n\n\ntmap_mode(\"plot\")\n\ntmap mode set to plotting\n\n\n\n\n\n\n# # Remove Z-dimension from childcare (No longer required)\n# childcare_rmz &lt;- st_zm(childcare)\n\n# Perform NKDE\ndensities &lt;- nkde(network, \n                  events = childcare,\n                  w = rep(1, nrow(childcare)),\n                  samples = samples,\n                  kernel_name = \"quartic\", # Try to avoid gaussian if intensity is negative\n                  bw = 300, \n                  div= \"bw\", \n                  method = \"simple\", \n                  digits = 1, \n                  tol = 1,\n                  grid_shape = c(1,1), \n                  max_depth = 8,\n                  agg = 5, \n                  sparse = TRUE,\n                  verbose = FALSE)\n# Densities - represents intensity\n\n\n# Insert computed density values as density field\nsamples$density &lt;- densities\nlixels$density &lt;- densities\n\n# Recaling to enhance mapping\nsamples$density &lt;- samples$density*1000\nlixels$density &lt;- lixels$density*1000\n\n# Visualize interactive plot\ntmap_mode('view')\n\ntmap mode set to interactive viewing\n\ntm_shape(lixels)+\n  tm_lines(col=\"density\")+\ntm_shape(childcare)+\n  tm_dots()\n\n\n\n\ntmap_mode('plot')\n\ntmap mode set to plotting"
  },
  {
    "objectID": "In-Class_Ex/In-Class_Ex_03/In-Class_Ex03.html#network-constrainted-g--and-k--function-analysis",
    "href": "In-Class_Ex/In-Class_Ex_03/In-Class_Ex03.html#network-constrainted-g--and-k--function-analysis",
    "title": "In Class Exercise 03",
    "section": "",
    "text": "Ho: The observed spatial point events (i.e distribution of childcare centres) are uniformly distributed over a street network in Punggol Planning Area.\n\n# Perform complete spatial randomness test using kfunction from spNetwork\nkfun_childcare &lt;- kfunctions(network, \n                             childcare,\n                             start = 0, \n                             end = 1000, \n                             step = 50, \n                             width = 50, \n                             nsim = 50, # 51 simulations \n                             resolution = 50,\n                             verbose = FALSE, \n                             conf_int = 0.05)\n\n\n# Visualize k-function output\nkfun_childcare$plotk\n\n\n\n\n\n\n\n\nConclusion\n- There is non complete spatial randomness\n- In certain distances (~250-500), childcares are regularly spaced out\n- At higher distances (&gt;600), childcares are randomly spaced out"
  },
  {
    "objectID": "In-Class_Ex/In-Class_Ex_05/In-Class_Ex05.html#setting-up",
    "href": "In-Class_Ex/In-Class_Ex_05/In-Class_Ex05.html#setting-up",
    "title": "In Class Exercise 05",
    "section": "",
    "text": "pacman::p_load(sf, sfdep, tmap, tidyverse)\n\n\n\n\n\nHunan ShapefileHunan 2012\n\n\n\n# Load shapefile\nhunan &lt;- st_read(dsn = \"data/geospatial\", layer = \"Hunan\")\n\nReading layer `Hunan' from data source \n  `C:\\Users\\Henry\\Desktop\\SMU Masters\\2024-2025 T1\\Geospatial Analytics & Applications\\Project\\GeospatialWebsite\\In-Class_Ex\\In-Class_Ex_05\\data\\geospatial' \n  using driver `ESRI Shapefile'\nSimple feature collection with 88 features and 7 fields\nGeometry type: POLYGON\nDimension:     XY\nBounding box:  xmin: 108.7831 ymin: 24.6342 xmax: 114.2544 ymax: 30.12812\nGeodetic CRS:  WGS 84\n\n\n\n# Check crs\nst_crs(hunan)\n\nCoordinate Reference System:\n  User input: WGS 84 \n  wkt:\nGEOGCRS[\"WGS 84\",\n    DATUM[\"World Geodetic System 1984\",\n        ELLIPSOID[\"WGS 84\",6378137,298.257223563,\n            LENGTHUNIT[\"metre\",1]]],\n    PRIMEM[\"Greenwich\",0,\n        ANGLEUNIT[\"degree\",0.0174532925199433]],\n    CS[ellipsoidal,2],\n        AXIS[\"latitude\",north,\n            ORDER[1],\n            ANGLEUNIT[\"degree\",0.0174532925199433]],\n        AXIS[\"longitude\",east,\n            ORDER[2],\n            ANGLEUNIT[\"degree\",0.0174532925199433]],\n    ID[\"EPSG\",4326]]\n\n\n\n# Check crs\nglimpse(hunan)\n\nRows: 88\nColumns: 8\n$ NAME_2     &lt;chr&gt; \"Changde\", \"Changde\", \"Changde\", \"Changde\", \"Changde\", \"Cha…\n$ ID_3       &lt;int&gt; 21098, 21100, 21101, 21102, 21103, 21104, 21109, 21110, 211…\n$ NAME_3     &lt;chr&gt; \"Anxiang\", \"Hanshou\", \"Jinshi\", \"Li\", \"Linli\", \"Shimen\", \"L…\n$ ENGTYPE_3  &lt;chr&gt; \"County\", \"County\", \"County City\", \"County\", \"County\", \"Cou…\n$ Shape_Leng &lt;dbl&gt; 1.869074, 2.360691, 1.425620, 3.474325, 2.289506, 4.171918,…\n$ Shape_Area &lt;dbl&gt; 0.10056190, 0.19978745, 0.05302413, 0.18908121, 0.11450357,…\n$ County     &lt;chr&gt; \"Anxiang\", \"Hanshou\", \"Jinshi\", \"Li\", \"Linli\", \"Shimen\", \"L…\n$ geometry   &lt;POLYGON [°]&gt; POLYGON ((112.0625 29.75523..., POLYGON ((112.2288 …\n\n\n\n\n\n# Load csv file\nhunan2012 &lt;- read_csv(\"data/aspatial/Hunan_2012.csv\")\n\nRows: 88 Columns: 29\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr  (2): County, City\ndbl (27): avg_wage, deposite, FAI, Gov_Rev, Gov_Exp, GDP, GDPPC, GIO, Loan, ...\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\n\n\n# Check file\nglimpse(hunan2012)\n\nRows: 88\nColumns: 29\n$ County      &lt;chr&gt; \"Anhua\", \"Anren\", \"Anxiang\", \"Baojing\", \"Chaling\", \"Changn…\n$ City        &lt;chr&gt; \"Yiyang\", \"Chenzhou\", \"Changde\", \"Hunan West\", \"Zhuzhou\", …\n$ avg_wage    &lt;dbl&gt; 30544, 28058, 31935, 30843, 31251, 28518, 54540, 28597, 33…\n$ deposite    &lt;dbl&gt; 10967.0, 4598.9, 5517.2, 2250.0, 8241.4, 10860.0, 24332.0,…\n$ FAI         &lt;dbl&gt; 6831.7, 6386.1, 3541.0, 1005.4, 6508.4, 7920.0, 33624.0, 1…\n$ Gov_Rev     &lt;dbl&gt; 456.72, 220.57, 243.64, 192.59, 620.19, 769.86, 5350.00, 1…\n$ Gov_Exp     &lt;dbl&gt; 2703.0, 1454.7, 1779.5, 1379.1, 1947.0, 2631.6, 7885.5, 11…\n$ GDP         &lt;dbl&gt; 13225.0, 4941.2, 12482.0, 4087.9, 11585.0, 19886.0, 88009.…\n$ GDPPC       &lt;dbl&gt; 14567, 12761, 23667, 14563, 20078, 24418, 88656, 10132, 17…\n$ GIO         &lt;dbl&gt; 9276.90, 4189.20, 5108.90, 3623.50, 9157.70, 37392.00, 513…\n$ Loan        &lt;dbl&gt; 3954.90, 2555.30, 2806.90, 1253.70, 4287.40, 4242.80, 4053…\n$ NIPCR       &lt;dbl&gt; 3528.3, 3271.8, 7693.7, 4191.3, 3887.7, 9528.0, 17070.0, 3…\n$ Bed         &lt;dbl&gt; 2718, 970, 1931, 927, 1449, 3605, 3310, 582, 2170, 2179, 1…\n$ Emp         &lt;dbl&gt; 494.310, 290.820, 336.390, 195.170, 330.290, 548.610, 670.…\n$ EmpR        &lt;dbl&gt; 441.4, 255.4, 270.5, 145.6, 299.0, 415.1, 452.0, 127.6, 21…\n$ EmpRT       &lt;dbl&gt; 338.0, 99.4, 205.9, 116.4, 154.0, 273.7, 219.4, 94.4, 174.…\n$ Pri_Stu     &lt;dbl&gt; 54.175, 33.171, 19.584, 19.249, 33.906, 81.831, 59.151, 18…\n$ Sec_Stu     &lt;dbl&gt; 32.830, 17.505, 17.819, 11.831, 20.548, 44.485, 39.685, 7.…\n$ Household   &lt;dbl&gt; 290.4, 104.6, 148.1, 73.2, 148.7, 211.2, 300.3, 76.1, 139.…\n$ Household_R &lt;dbl&gt; 234.5, 121.9, 135.4, 69.9, 139.4, 211.7, 248.4, 59.6, 110.…\n$ NOIP        &lt;dbl&gt; 101, 34, 53, 18, 106, 115, 214, 17, 55, 70, 44, 84, 74, 17…\n$ Pop_R       &lt;dbl&gt; 670.3, 243.2, 346.0, 184.1, 301.6, 448.2, 475.1, 189.6, 31…\n$ RSCG        &lt;dbl&gt; 5760.60, 2386.40, 3957.90, 768.04, 4009.50, 5220.40, 22604…\n$ Pop_T       &lt;dbl&gt; 910.8, 388.7, 528.3, 281.3, 578.4, 816.3, 998.6, 256.7, 45…\n$ Agri        &lt;dbl&gt; 4942.253, 2357.764, 4524.410, 1118.561, 3793.550, 6430.782…\n$ Service     &lt;dbl&gt; 5414.5, 3814.1, 14100.0, 541.8, 5444.0, 13074.6, 17726.6, …\n$ Disp_Inc    &lt;dbl&gt; 12373, 16072, 16610, 13455, 20461, 20868, 183252, 12379, 1…\n$ RORP        &lt;dbl&gt; 0.7359464, 0.6256753, 0.6549309, 0.6544614, 0.5214385, 0.5…\n$ ROREmp      &lt;dbl&gt; 0.8929619, 0.8782065, 0.8041262, 0.7460163, 0.9052651, 0.7…\n\n\n\n\n\n\n\n\nBoth datasets have the common field “County”\n\n# Merge both datasets\nhunan_GDPPC &lt;- left_join(hunan, hunan2012, by = \"County\") %&gt;%\n  # select(1:4, 7, 15)\n  select(`NAME_2`, `ID_3`, `NAME_3`, `ENGTYPE_3`, `County`, `GDPPC`, `geometry`) # Using Column names for readability\n# See result\nglimpse(hunan_GDPPC)\n\nRows: 88\nColumns: 7\n$ NAME_2    &lt;chr&gt; \"Changde\", \"Changde\", \"Changde\", \"Changde\", \"Changde\", \"Chan…\n$ ID_3      &lt;int&gt; 21098, 21100, 21101, 21102, 21103, 21104, 21109, 21110, 2111…\n$ NAME_3    &lt;chr&gt; \"Anxiang\", \"Hanshou\", \"Jinshi\", \"Li\", \"Linli\", \"Shimen\", \"Li…\n$ ENGTYPE_3 &lt;chr&gt; \"County\", \"County\", \"County City\", \"County\", \"County\", \"Coun…\n$ County    &lt;chr&gt; \"Anxiang\", \"Hanshou\", \"Jinshi\", \"Li\", \"Linli\", \"Shimen\", \"Li…\n$ GDPPC     &lt;dbl&gt; 23667, 20981, 34592, 24473, 25554, 27137, 63118, 62202, 7066…\n$ geometry  &lt;POLYGON [°]&gt; POLYGON ((112.0625 29.75523..., POLYGON ((112.2288 2…\n\n\n\n# Visualize GDPPC\ntmap_mode(\"plot\")\n\ntmap mode set to plotting\n\ntm_shape(hunan_GDPPC) +\n  tm_fill(\"GDPPC\", \n          style = \"quantile\", \n          palette = \"Blues\",\n          title = \"GDPPC\") +\n  tm_layout(main.title = \"Distribution of GDP per capita by county, Hunan Province\",\n            main.title.position = \"center\",\n            main.title.size = 0.8,\n            legend.height = 0.45, \n            legend.width = 0.35,\n            frame = TRUE) +\n  tm_borders(alpha = 0.5) +\n  tm_compass(type=\"8star\", size = 2) +\n  tm_scale_bar() +\n  tm_grid(alpha =0.2)"
  },
  {
    "objectID": "In-Class_Ex/In-Class_Ex_05/In-Class_Ex05.html#derive-queens-contiguity-weigths",
    "href": "In-Class_Ex/In-Class_Ex_05/In-Class_Ex05.html#derive-queens-contiguity-weigths",
    "title": "In Class Exercise 05",
    "section": "Derive Queen’s contiguity weigths",
    "text": "Derive Queen’s contiguity weigths\n\nwm_q &lt;- hunan_GDPPC %&gt;%\n  mutate(nb = st_contiguity(geometry),       # Neighbour list object\n         wt = st_weights(nb, style = \"W\"),   \n         .before = 1)\n\n\n# Dont do this in practise (no significant value)\nmoranI &lt;- global_moran(wm_q$GDPPC,\n                       wm_q$nb,\n                       wm_q$wt)\n\nmoranI\n\n$I\n[1] 0.30075\n\n$K\n[1] 7.640659\n\n\n\n# This has a test.\nglobal_moran_test(wm_q$GDPPC,\n                  wm_q$nb,\n                  wm_q$wt)\n\n\n    Moran I test under randomisation\n\ndata:  x  \nweights: listw    \n\nMoran I statistic standard deviate = 4.7351, p-value = 1.095e-06\nalternative hypothesis: greater\nsample estimates:\nMoran I statistic       Expectation          Variance \n      0.300749970      -0.011494253       0.004348351 \n\n\n\n# Ensure reproducibility\nset.seed(42)\n\n# Permutation test\nglobal_moran_perm(wm_q$GDPPC,\n                  wm_q$nb,\n                  wm_q$wt,\n                  nsim = 99)\n\n\n    Monte-Carlo simulation of Moran I\n\ndata:  x \nweights: listw  \nnumber of simulations + 1: 100 \n\nstatistic = 0.30075, observed rank = 100, p-value &lt; 2.2e-16\nalternative hypothesis: two.sided"
  },
  {
    "objectID": "In-Class_Ex/In-Class_Ex_05/In-Class_Ex05.html#local-morans-i",
    "href": "In-Class_Ex/In-Class_Ex_05/In-Class_Ex05.html#local-morans-i",
    "title": "In Class Exercise 05",
    "section": "Local Moran’s I",
    "text": "Local Moran’s I\n\nlisa &lt;- wm_q %&gt;%\n  mutate(local_moran = local_moran(GDPPC, nb, wt, nsim = 99),\n    .before = 1) %&gt;%\n  unnest(local_moran)\n\n# eii - expected \n# var_ii - variance\n# z_ii - z score\n# p_ii - p value\n# p_ii_sim - p value from simulation\n# p_folded_sim - k fold validation\n\n\n# mean - if data follows normal distribution\n# median - if data is skewed\n\n\nVisualize local Moran’s I\n\ntmap_mode(\"plot\")\n\ntmap mode set to plotting\n\ntm_shape(lisa) +\n  tm_fill(\"ii\") +\n  tm_borders(alpha = 0.5) +\n  tm_view(set.zoom.limits = c(6, 8)) + \n  tm_layout(\n    main.title = \"local Moran's I of GDPPC\",\n    main.title.size = 0.8\n    )\n\nVariable(s) \"ii\" contains positive and negative values, so midpoint is set to 0. Set midpoint = NA to show the full spectrum of the color palette.\n\n\n\n\n\n\n\n\n\n\n\nVisualize p-value of local Moran’s I\n\ntmap_mode(\"plot\")\n\ntmap mode set to plotting\n\ntm_shape(lisa) +\n  tm_fill(\"p_ii_sim\") +\n  tm_borders(alpha = 0.5) +\n  tm_layout(\n    main.title = \"p-value of local Moran's I\",\n    main.title.size = 0.8\n    )\n\n\n\n\n\n\n\n\n\n\nVisualize them together\n\ntmap_mode(\"plot\")\n\ntmap mode set to plotting\n\nmap1 &lt;- tm_shape(lisa) +\n  tm_fill(\"ii\") +\n  tm_borders(alpha = 0.5) +\n  tm_view(set.zoom.limits = c(6, 8)) + \n  tm_layout(\n    main.title = \"local Moran's I of GDPPC\",\n    main.title.size = 0.8\n    )\n\nmap2 &lt;- tm_shape(lisa) +\n  tm_fill(\"p_ii_sim\") +\n  tm_borders(alpha = 0.5) +\n  tm_layout(\n    main.title = \"p-value of local Moran's I\",\n    main.title.size = 0.8\n    )\n\ntmap_arrange(map1, map2, ncol = 2)\n\nVariable(s) \"ii\" contains positive and negative values, so midpoint is set to 0. Set midpoint = NA to show the full spectrum of the color palette."
  },
  {
    "objectID": "In-Class_Ex/In-Class_Ex_05/In-Class_Ex05.html#lisa-map",
    "href": "In-Class_Ex/In-Class_Ex_05/In-Class_Ex05.html#lisa-map",
    "title": "In Class Exercise 05",
    "section": "LISA Map",
    "text": "LISA Map\n\n# Fiilter out those that are less than 0.05\nlisa_sig &lt;- lisa %&gt;%\n  filter(p_ii &lt; 0.05)\ntmap_mode(\"plot\")\n\ntmap mode set to plotting\n\n# Visualize lisa\ntm_shape(lisa) + \n  tm_polygons() +\n  tm_borders(alpha = 0.5) + \ntm_shape(lisa_sig) + \n  tm_fill(\"mean\") + \n  tm_borders(alpha = 0.4)\n\nWarning: One tm layer group has duplicated layer types, which are omitted. To\ndraw multiple layers of the same type, use multiple layer groups (i.e. specify\ntm_shape prior to each of them)."
  },
  {
    "objectID": "In-Class_Ex/In-Class_Ex_05/In-Class_Ex05.html#compute-local-gi-statistics",
    "href": "In-Class_Ex/In-Class_Ex_05/In-Class_Ex05.html#compute-local-gi-statistics",
    "title": "In Class Exercise 05",
    "section": "Compute local Gi* Statistics",
    "text": "Compute local Gi* Statistics\n\nwm_idw &lt;- hunan_GDPPC %&gt;%\n  mutate(nb = include_self(\n    st_contiguity(geometry)),\n    wts = st_inverse_distance(nb, geometry,\n                                   scale = 1,\n                                   alpha = 1),\n         .before = 1)\n\n! Polygon provided. Using point on surface.\n\n\nWarning: There was 1 warning in `stopifnot()`.\nℹ In argument: `wts = st_inverse_distance(nb, geometry, scale = 1, alpha = 1)`.\nCaused by warning in `st_point_on_surface.sfc()`:\n! st_point_on_surface may not give correct results for longitude/latitude data\n\n\n\n# Compute local Gi\nHCSA &lt;- wm_idw %&gt;%\n  mutate(local_Gi = local_gstar_perm(GDPPC, nb, wts, nsim = 99),\n         .before = 1) %&gt;%\n  unnest(local_Gi)\n\nHCSA\n\nSimple feature collection with 88 features and 18 fields\nGeometry type: POLYGON\nDimension:     XY\nBounding box:  xmin: 108.7831 ymin: 24.6342 xmax: 114.2544 ymax: 30.12812\nGeodetic CRS:  WGS 84\n# A tibble: 88 × 19\n    gi_star cluster     e_gi  var_gi std_dev p_value p_sim p_folded_sim skewness\n      &lt;dbl&gt; &lt;fct&gt;      &lt;dbl&gt;   &lt;dbl&gt;   &lt;dbl&gt;   &lt;dbl&gt; &lt;dbl&gt;        &lt;dbl&gt;    &lt;dbl&gt;\n 1  0.261   Low     0.00126  1.30e-7  0.276  7.83e-1  0.54         0.27    1.44 \n 2 -0.276   Low     0.00106  9.36e-8 -0.374  7.09e-1  0.86         0.43    0.671\n 3  0.00573 High    0.00150  2.22e-7  0.0653 9.48e-1  0.82         0.41    0.812\n 4  0.528   High    0.00156  2.98e-7  0.317  7.51e-1  0.62         0.31    1.08 \n 5  0.466   High    0.00138  2.10e-7  0.424  6.71e-1  0.5          0.25    1.46 \n 6 -0.445   High    0.000934 6.08e-8 -0.402  6.88e-1  0.88         0.44    0.657\n 7  2.99    High    0.000753 5.97e-8  2.36   1.80e-2  0.06         0.03    0.752\n 8  2.04    High    0.00151  1.19e-7  2.10   3.57e-2  0.12         0.06    0.773\n 9  4.42    High    0.00125  8.45e-8  5.17   2.33e-7  0.02         0.01    0.632\n10  1.21    Low     0.00183  1.33e-7  1.22   2.22e-1  0.24         0.12    0.734\n# ℹ 78 more rows\n# ℹ 10 more variables: kurtosis &lt;dbl&gt;, nb &lt;nb&gt;, wts &lt;list&gt;, NAME_2 &lt;chr&gt;,\n#   ID_3 &lt;int&gt;, NAME_3 &lt;chr&gt;, ENGTYPE_3 &lt;chr&gt;, County &lt;chr&gt;, GDPPC &lt;dbl&gt;,\n#   geometry &lt;POLYGON [°]&gt;\n\n\n\nVisualize gi*\n\n# Visualize gi*\ntmap_mode(\"plot\")\n\ntmap mode set to plotting\n\ntm_shape(HCSA) +\n  tm_fill(\"gi_star\") +\n  tm_borders(alpha = 0.5) +\n  tm_view(set.zoom.limits = c(6, 8))\n\nVariable(s) \"gi_star\" contains positive and negative values, so midpoint is set to 0. Set midpoint = NA to show the full spectrum of the color palette.\n\n\n\n\n\n\n\n\n\n\n# Visualize p value\ntmap_mode(\"plot\")\n\ntmap mode set to plotting\n\ntm_shape(HCSA) +\n  tm_fill(\"p_sim\") +\n  tm_borders(alpha = 0.5) +\n  tm_view(set.zoom.limits = c(6, 8))\n\n\n\n\n\n\n\n\n\n# Visualize both plots side by side\ntmap_mode(\"plot\")\n\ntmap mode set to plotting\n\nmap1 &lt;- tm_shape(HCSA) +\n  tm_fill(\"gi_star\") + \n  tm_borders(alpha = 0.5) +\n  tm_view(set.zoom.limits = c(6,8)) +\n  tm_layout(main.title = \"Gi* of GDPPC\",\n            main.title.size = 0.8)\n\nmap2 &lt;- tm_shape(HCSA) +\n  tm_fill(\"p_value\",\n          breaks = c(0, 0.001, 0.01, 0.05, 1),\n              labels = c(\"0.001\", \"0.01\", \"0.05\", \"Not sig\")) + \n  tm_borders(alpha = 0.5) +\n  tm_layout(main.title = \"p-value of Gi*\",\n            main.title.size = 0.8)\n\ntmap_arrange(map1, map2, ncol = 2)\n\nVariable(s) \"gi_star\" contains positive and negative values, so midpoint is set to 0. Set midpoint = NA to show the full spectrum of the color palette.\n\n\n\n\n\n\n\n\n\n\n# Visualize hot and cold spot areas\nHCSA_sig &lt;- HCSA %&gt;%\n  filter(p_sim &lt; 0.05)\ntmap_mode(\"plot\")\n\ntmap mode set to plotting\n\ntm_shape(HCSA) +\n  tm_polygons() + \n  tm_borders(alpha = 0.5) +\ntm_shape(HCSA_sig) +\n  tm_fill(\"cluster\") +\n  tm_borders(alpha = 0.4)\n\nWarning: One tm layer group has duplicated layer types, which are omitted. To\ndraw multiple layers of the same type, use multiple layer groups (i.e. specify\ntm_shape prior to each of them)."
  },
  {
    "objectID": "In-Class_Ex/In-Class_Ex_05/In-Class_Ex05.html#derive-queens-contiguity-weights",
    "href": "In-Class_Ex/In-Class_Ex_05/In-Class_Ex05.html#derive-queens-contiguity-weights",
    "title": "In Class Exercise 05",
    "section": "Derive Queen’s contiguity weights",
    "text": "Derive Queen’s contiguity weights\n\n# Compute weights\nwm_q &lt;- hunan_GDPPC %&gt;%\n  mutate(nb = st_contiguity(geometry),       # Neighbour list object\n         wt = st_weights(nb, style = \"W\"),   \n         .before = 1)\n\n# Check contiguity weights\nwm_q\n\nSimple feature collection with 88 features and 8 fields\nGeometry type: POLYGON\nDimension:     XY\nBounding box:  xmin: 108.7831 ymin: 24.6342 xmax: 114.2544 ymax: 30.12812\nGeodetic CRS:  WGS 84\nFirst 10 features:\n                               nb\n1                 2, 3, 4, 57, 85\n2               1, 57, 58, 78, 85\n3                     1, 4, 5, 85\n4                      1, 3, 5, 6\n5                     3, 4, 6, 85\n6                4, 5, 69, 75, 85\n7                  67, 71, 74, 84\n8       9, 46, 47, 56, 78, 80, 86\n9           8, 66, 68, 78, 84, 86\n10 16, 17, 19, 20, 22, 70, 72, 73\n                                                                            wt\n1                                                      0.2, 0.2, 0.2, 0.2, 0.2\n2                                                      0.2, 0.2, 0.2, 0.2, 0.2\n3                                                       0.25, 0.25, 0.25, 0.25\n4                                                       0.25, 0.25, 0.25, 0.25\n5                                                       0.25, 0.25, 0.25, 0.25\n6                                                      0.2, 0.2, 0.2, 0.2, 0.2\n7                                                       0.25, 0.25, 0.25, 0.25\n8  0.1428571, 0.1428571, 0.1428571, 0.1428571, 0.1428571, 0.1428571, 0.1428571\n9             0.1666667, 0.1666667, 0.1666667, 0.1666667, 0.1666667, 0.1666667\n10                      0.125, 0.125, 0.125, 0.125, 0.125, 0.125, 0.125, 0.125\n     NAME_2  ID_3    NAME_3   ENGTYPE_3    County GDPPC\n1   Changde 21098   Anxiang      County   Anxiang 23667\n2   Changde 21100   Hanshou      County   Hanshou 20981\n3   Changde 21101    Jinshi County City    Jinshi 34592\n4   Changde 21102        Li      County        Li 24473\n5   Changde 21103     Linli      County     Linli 25554\n6   Changde 21104    Shimen      County    Shimen 27137\n7  Changsha 21109   Liuyang County City   Liuyang 63118\n8  Changsha 21110 Ningxiang      County Ningxiang 62202\n9  Changsha 21111 Wangcheng      County Wangcheng 70666\n10 Chenzhou 21112     Anren      County     Anren 12761\n                         geometry\n1  POLYGON ((112.0625 29.75523...\n2  POLYGON ((112.2288 29.11684...\n3  POLYGON ((111.8927 29.6013,...\n4  POLYGON ((111.3731 29.94649...\n5  POLYGON ((111.6324 29.76288...\n6  POLYGON ((110.8825 30.11675...\n7  POLYGON ((113.9905 28.5682,...\n8  POLYGON ((112.7181 28.38299...\n9  POLYGON ((112.7914 28.52688...\n10 POLYGON ((113.1757 26.82734...\n\n\n\n# Dont do this in practise (no significant value output)\nmoranI &lt;- global_moran(wm_q$GDPPC,\n                       wm_q$nb,\n                       wm_q$wt)\n\nmoranI\n\n$I\n[1] 0.30075\n\n$K\n[1] 7.640659\n\n\n\n# This has a test.\nglobal_moran_test(wm_q$GDPPC,\n                  wm_q$nb,\n                  wm_q$wt)\n\n\n    Moran I test under randomisation\n\ndata:  x  \nweights: listw    \n\nMoran I statistic standard deviate = 4.7351, p-value = 1.095e-06\nalternative hypothesis: greater\nsample estimates:\nMoran I statistic       Expectation          Variance \n      0.300749970      -0.011494253       0.004348351 \n\n\n\n# Ensure reproducibility\nset.seed(42)\n\n# Permutation test\nglobal_moran_perm(wm_q$GDPPC,\n                  wm_q$nb,\n                  wm_q$wt,\n                  nsim = 99)\n\n\n    Monte-Carlo simulation of Moran I\n\ndata:  x \nweights: listw  \nnumber of simulations + 1: 100 \n\nstatistic = 0.30075, observed rank = 100, p-value &lt; 2.2e-16\nalternative hypothesis: two.sided"
  },
  {
    "objectID": "Take-Home_Ex/Take-Home_Ex_02/Take-Home_Ex02.html",
    "href": "Take-Home_Ex/Take-Home_Ex_02/Take-Home_Ex02.html",
    "title": "Take Home Exercise 02",
    "section": "",
    "text": "Tourism has been a key driver of Thailand’s gross domestic product (GDP), accounting for up to 20% of it. The COVID-19 pandemic caused the tourism revenue (from domestic and international tourism) to crash to US$24 billion in 2020, from US$90 billion in 2019."
  },
  {
    "objectID": "Take-Home_Ex/Take-Home_Ex_02/Take-Home_Ex02.html#loading-r-packages",
    "href": "Take-Home_Ex/Take-Home_Ex_02/Take-Home_Ex02.html#loading-r-packages",
    "title": "Take Home Exercise 02",
    "section": "1.1 Loading R Packages",
    "text": "1.1 Loading R Packages\nI will be using the following R packages:\n-sf package to perform geospatial wrangling tasks \n- sfdep package to perform spatial autocorrelation analysis and emerging hotspot analysis \n- tidyverse package for reading csv files, dataframe processing tasks \n- ggplot2 and ggpubr package for plotting statistical graphics \n- DT, crosstalk and htmltools, package for visualizing results in a table format \n- Kendall package for performing and visualizing Mann-Kendall Test \n- tmap package for plotting tasks \n\n\npacman::p_load(tidyverse, sfdep, sf, ggplot2, ggpubr, tmap, DT, crosstalk, htmltools, Kendall)"
  },
  {
    "objectID": "Take-Home_Ex/Take-Home_Ex_02/Take-Home_Ex02.html#loading-datasets",
    "href": "Take-Home_Ex/Take-Home_Ex_02/Take-Home_Ex02.html#loading-datasets",
    "title": "Take Home Exercise 02",
    "section": "1.2 Loading Datasets",
    "text": "1.2 Loading Datasets\nThe aim here is to load the datasets and do the necessary geospatial data wrangling before proceeding to the subsequent steps.\n\n1.2.1 Thailand Subnational Adminstrative Boundaries\nst_read from the sf package is used to load the subnational boundaries.\n\n# Load Thailand Province from HDX\nth_bound_l1 &lt;- st_read(dsn = \"data/tha_adm_rtsd_itos_20210121_shp/\", layer = \"tha_admbnda_adm1_rtsd_20220121\") %&gt;%\n  st_transform(crs = 32647) \n\nReading layer `tha_admbnda_adm1_rtsd_20220121' from data source \n  `C:\\Users\\Henry\\Desktop\\SMU Masters\\2024-2025 T1\\Geospatial Analytics & Applications\\Project\\GeospatialWebsite\\Take-Home_Ex\\Take-Home_Ex_02\\data\\tha_adm_rtsd_itos_20210121_shp' \n  using driver `ESRI Shapefile'\nSimple feature collection with 77 features and 16 fields\nGeometry type: MULTIPOLYGON\nDimension:     XY\nBounding box:  xmin: 97.34336 ymin: 5.613038 xmax: 105.637 ymax: 20.46507\nGeodetic CRS:  WGS 84\n\n# Check output\nglimpse(th_bound_l1)\n\nRows: 77\nColumns: 17\n$ Shape_Leng &lt;dbl&gt; 2.417227, 1.695100, 1.251111, 1.884945, 3.041716, 1.739908,…\n$ Shape_Area &lt;dbl&gt; 0.13133873, 0.07926199, 0.05323766, 0.12698345, 0.21393797,…\n$ ADM1_EN    &lt;chr&gt; \"Bangkok\", \"Samut Prakan\", \"Nonthaburi\", \"Pathum Thani\", \"P…\n$ ADM1_TH    &lt;chr&gt; \"กรุงเทพมหานคร\", \"สมุทรปราการ\", \"นนทบุรี\", \"ปทุมธานี\", \"พระนครศรีอ…\n$ ADM1_PCODE &lt;chr&gt; \"TH10\", \"TH11\", \"TH12\", \"TH13\", \"TH14\", \"TH15\", \"TH16\", \"TH…\n$ ADM1_REF   &lt;chr&gt; NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA,…\n$ ADM1ALT1EN &lt;chr&gt; NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA,…\n$ ADM1ALT2EN &lt;chr&gt; NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA,…\n$ ADM1ALT1TH &lt;chr&gt; NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA,…\n$ ADM1ALT2TH &lt;chr&gt; NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA,…\n$ ADM0_EN    &lt;chr&gt; \"Thailand\", \"Thailand\", \"Thailand\", \"Thailand\", \"Thailand\",…\n$ ADM0_TH    &lt;chr&gt; \"ประเทศไทย\", \"ประเทศไทย\", \"ประเทศไทย\", \"ประเทศไทย\", \"ประเทศ…\n$ ADM0_PCODE &lt;chr&gt; \"TH\", \"TH\", \"TH\", \"TH\", \"TH\", \"TH\", \"TH\", \"TH\", \"TH\", \"TH\",…\n$ date       &lt;date&gt; 2019-02-18, 2019-02-18, 2019-02-18, 2019-02-18, 2019-02-18…\n$ validOn    &lt;date&gt; 2022-01-22, 2022-01-22, 2022-01-22, 2022-01-22, 2022-01-22…\n$ validTo    &lt;date&gt; -001-11-30, -001-11-30, -001-11-30, -001-11-30, -001-11-30…\n$ geometry   &lt;MULTIPOLYGON [m]&gt; MULTIPOLYGON (((674339.8 15..., MULTIPOLYGON (…\n\n\n\n\n1.2.2 Thailand Tourism Data\nread_csv from readr package within tidyverse is used to load the aspatial data as a tibble.\n\ntbl_tourism &lt;- read_csv('data/archive/thailand_domestic_tourism_2019_2023_ver2.csv')\n\nRows: 30800 Columns: 7\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr  (5): province_thai, province_eng, region_thai, region_eng, variable\ndbl  (1): value\ndate (1): date\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\nglimpse(tbl_tourism)\n\nRows: 30,800\nColumns: 7\n$ date          &lt;date&gt; 2019-01-01, 2019-01-01, 2019-01-01, 2019-01-01, 2019-01…\n$ province_thai &lt;chr&gt; \"กรุงเทพมหานคร\", \"ลพบุรี\", \"พระนครศรีอยุธยา\", \"สระบุรี\", \"ชัยนาท…\n$ province_eng  &lt;chr&gt; \"Bangkok\", \"Lopburi\", \"Phra Nakhon Si Ayutthaya\", \"Sarab…\n$ region_thai   &lt;chr&gt; \"ภาคกลาง\", \"ภาคกลาง\", \"ภาคกลาง\", \"ภาคกลาง\", \"ภาคกลาง\", \"…\n$ region_eng    &lt;chr&gt; \"central\", \"central\", \"central\", \"central\", \"central\", \"…\n$ variable      &lt;chr&gt; \"ratio_tourist_stay\", \"ratio_tourist_stay\", \"ratio_touri…\n$ value         &lt;dbl&gt; 93.37, 61.32, 73.37, 67.33, 79.31, 71.70, 64.65, 71.21, …\n\n\nBefore joining the 2 datasets, we need to check if there are any non-matching values in either joining columns.\n\n# Find values in Th bound that are not in Tourism Data\nonly_in_th_bound_l1 &lt;- anti_join(th_bound_l1, tbl_tourism, by = c(\"ADM1_EN\" = \"province_eng\")) %&gt;% pull(ADM1_EN)\n\n# Find values in Tourism Data that are not in Th Bound\nonly_in_tbl_tourism &lt;- anti_join(tbl_tourism, th_bound_l1, by = c(\"province_eng\" = \"ADM1_EN\")) %&gt;% pull(province_eng)\n\n# See all values\nunmatched_values &lt;- union(only_in_th_bound_l1, only_in_tbl_tourism)\nprint(unmatched_values)\n\n [1] \"Lop Buri\"         \"Chai Nat\"         \"Chon Buri\"        \"Prachin Buri\"    \n [5] \"Buri Ram\"         \"Si Sa Ket\"        \"Nong Bua Lam Phu\" \"Phangnga\"        \n [9] \"Lopburi\"          \"Chainat\"          \"Chonburi\"         \"Prachinburi\"     \n[13] \"Phang Nga\"        \"Buriram\"          \"Sisaket\"          \"Nong Bua Lamphu\" \n\n\nSince we found the discrepancies, minor re-coding is required to ensure that values are aligned. The KPIs are also pivoted from long to wide to facilitate future analysis.\n\n# Data processing\ntbl_tourism_wide &lt;- tbl_tourism %&gt;%\n  mutate(province_eng = recode(province_eng,\n                       \"Lopburi\" = \"Lop Buri\",\n                       \"Chainat\" = \"Chai Nat\",\n                       \"Chonburi\" = \"Chon Buri\",\n                       \"Prachinburi\" = \"Prachin Buri\",\n                       \"Phang Nga\" = \"Phangnga\",\n                       \"Buriram\" = \"Buri Ram\",\n                       \"Sisaket\" = \"Si Sa Ket\",\n                       \"Nong Bua Lamphu\" = \"Nong Bua Lam Phu\"\n                       ),\n         province_eng = trimws(province_eng)\n         ) %&gt;%\n  pivot_wider(., names_from = \"variable\", values_from = \"value\")\n\n# Check output\nsummary(tbl_tourism_wide)\n\n      date            province_thai      province_eng       region_thai       \n Min.   :2019-01-01   Length:3850        Length:3850        Length:3850       \n 1st Qu.:2020-01-01   Class :character   Class :character   Class :character  \n Median :2021-01-16   Mode  :character   Mode  :character   Mode  :character  \n Mean   :2021-01-15                                                           \n 3rd Qu.:2022-02-01                                                           \n Max.   :2023-02-01                                                           \n  region_eng        ratio_tourist_stay no_tourist_stay   no_tourist_all   \n Length:3850        Min.   : 0.00      Min.   :      0   Min.   :      0  \n Class :character   1st Qu.:20.18      1st Qu.:  16271   1st Qu.:  39092  \n Mode  :character   Median :41.81      Median :  44579   Median :  92122  \n                    Mean   :38.93      Mean   : 105161   Mean   : 206328  \n                    3rd Qu.:56.20      3rd Qu.:  90902   3rd Qu.: 203646  \n                    Max.   :95.86      Max.   :3335728   Max.   :6131044  \n no_tourist_thai   no_tourist_foreign   revenue_all         revenue_thai      \n Min.   :      0   Min.   :      0.0   Min.   :0.000e+00   Min.   :0.000e+00  \n 1st Qu.:  37169   1st Qu.:     49.2   1st Qu.:6.332e+07   1st Qu.:5.925e+07  \n Median :  88782   Median :    553.0   Median :1.955e+08   Median :1.773e+08  \n Mean   : 173962   Mean   :  32366.1   Mean   :1.344e+09   Mean   :6.636e+08  \n 3rd Qu.: 184256   3rd Qu.:   5189.5   3rd Qu.:5.060e+08   3rd Qu.:4.600e+08  \n Max.   :4087756   Max.   :2473725.0   Max.   :1.103e+11   Max.   :4.506e+10  \n revenue_foreign     \n Min.   :-4.250e+03  \n 1st Qu.: 1.100e+05  \n Median : 1.540e+06  \n Mean   : 6.802e+08  \n 3rd Qu.: 1.742e+07  \n Max.   : 8.503e+10  \n\n\nThere are some weird values in revenue_foreign (negative), more investigation is required. Furthermore, it was picked up for some rows no_tourist_stay is greater than no_tourist_all, which should not be possible.\n\ntbl_tourism_wide %&gt;%\n  filter(revenue_foreign &lt; 0 | no_tourist_stay &gt; no_tourist_all)\n\n# A tibble: 8 × 13\n  date       province_thai province_eng  region_thai region_eng\n  &lt;date&gt;     &lt;chr&gt;         &lt;chr&gt;         &lt;chr&gt;       &lt;chr&gt;     \n1 2020-03-01 ตราด          Trat          ภาคตะวันออก  east      \n2 2020-05-01 เชียงใหม่       Chiang Mai    ภาคเหนือ     north     \n3 2020-06-01 ชลบุรี          Chon Buri     ภาคตะวันออก  east      \n4 2021-07-01 นครปฐม        Nakhon Pathom ภาคกลาง     central   \n5 2020-08-01 ยะลา          Yala          ภาคใต้       south     \n6 2021-08-01 นครปฐม        Nakhon Pathom ภาคกลาง     central   \n7 2021-08-01 จันทบุรี         Chanthaburi   ภาคตะวันออก  east      \n8 2020-12-01 สมุทรสาคร      Samut Sakhon  ภาคกลาง     central   \n# ℹ 8 more variables: ratio_tourist_stay &lt;dbl&gt;, no_tourist_stay &lt;dbl&gt;,\n#   no_tourist_all &lt;dbl&gt;, no_tourist_thai &lt;dbl&gt;, no_tourist_foreign &lt;dbl&gt;,\n#   revenue_all &lt;dbl&gt;, revenue_thai &lt;dbl&gt;, revenue_foreign &lt;dbl&gt;\n\n\nSince this anomaly only pertains to a few rows of data, I’ll assume data entry error and re-code those revenue_foreign anomalies to 0 and cap the no_tourist_stay to no_tourist_all.\n\ntbl_tourism_wide &lt;- tbl_tourism_wide %&gt;%\n  mutate(revenue_foreign = if_else(revenue_foreign &lt; 0, 0, revenue_foreign),\n         no_tourist_stay = if_else(no_tourist_stay &gt; no_tourist_all, no_tourist_all, no_tourist_stay))\n\n# Check output\nsummary(tbl_tourism_wide)\n\n      date            province_thai      province_eng       region_thai       \n Min.   :2019-01-01   Length:3850        Length:3850        Length:3850       \n 1st Qu.:2020-01-01   Class :character   Class :character   Class :character  \n Median :2021-01-16   Mode  :character   Mode  :character   Mode  :character  \n Mean   :2021-01-15                                                           \n 3rd Qu.:2022-02-01                                                           \n Max.   :2023-02-01                                                           \n  region_eng        ratio_tourist_stay no_tourist_stay   no_tourist_all   \n Length:3850        Min.   : 0.00      Min.   :      0   Min.   :      0  \n Class :character   1st Qu.:20.18      1st Qu.:  16259   1st Qu.:  39092  \n Mode  :character   Median :41.81      Median :  44579   Median :  92122  \n                    Mean   :38.93      Mean   : 105134   Mean   : 206328  \n                    3rd Qu.:56.20      3rd Qu.:  90902   3rd Qu.: 203646  \n                    Max.   :95.86      Max.   :3335728   Max.   :6131044  \n no_tourist_thai   no_tourist_foreign   revenue_all         revenue_thai      \n Min.   :      0   Min.   :      0.0   Min.   :0.000e+00   Min.   :0.000e+00  \n 1st Qu.:  37169   1st Qu.:     49.2   1st Qu.:6.332e+07   1st Qu.:5.925e+07  \n Median :  88782   Median :    553.0   Median :1.955e+08   Median :1.773e+08  \n Mean   : 173962   Mean   :  32366.1   Mean   :1.344e+09   Mean   :6.636e+08  \n 3rd Qu.: 184256   3rd Qu.:   5189.5   3rd Qu.:5.060e+08   3rd Qu.:4.600e+08  \n Max.   :4087756   Max.   :2473725.0   Max.   :1.103e+11   Max.   :4.506e+10  \n revenue_foreign    \n Min.   :0.000e+00  \n 1st Qu.:1.100e+05  \n Median :1.540e+06  \n Mean   :6.802e+08  \n 3rd Qu.:1.742e+07  \n Max.   :8.503e+10  \n\n\nTo facilitate spatial autocorrelation across space and space and time, I need the tourism data in different formats. While doing so, additional KPIs will also be calculated. Rationale for those will be further explained while exploring the data.\n\nOverallBy YearBy Year & Month\n\n\n\n# Summarize across all years\ntbl_tourism_sum_all &lt;- tbl_tourism_wide %&gt;%\n  group_by(province_eng, province_thai, region_thai, region_eng) %&gt;%\n  summarize(\n    ratio_tourist_stay = mean(ratio_tourist_stay, na.rm = TRUE),\n    no_tourist_stay = sum(no_tourist_stay, na.rm = TRUE),\n    no_tourist_all = sum(no_tourist_all, na.rm = TRUE),\n    no_tourist_thai = sum(no_tourist_thai, na.rm = TRUE),\n    no_tourist_foreign = sum(no_tourist_foreign, na.rm = TRUE),\n    revenue_all = sum(revenue_all, na.rm = TRUE),\n    revenue_thai = sum(revenue_thai, na.rm = TRUE),\n    revenue_foreign = sum(revenue_foreign, na.rm = TRUE)\n  ) %&gt;%\n  ungroup()\n\n`summarise()` has grouped output by 'province_eng', 'province_thai',\n'region_thai'. You can override using the `.groups` argument.\n\n\n\n# Compute additional KPIs\ntbl_tourism_sum_all &lt;- tbl_tourism_sum_all %&gt;%\n  mutate(tourist_thai_prop = ifelse(no_tourist_all == 0, 0, no_tourist_thai/no_tourist_all),\n         tourist_foreign_prop = ifelse(no_tourist_all == 0, 0, no_tourist_foreign/no_tourist_all),\n         revenue_thai_prop = ifelse(revenue_all == 0, 0, revenue_thai/revenue_all),\n         revenue_foreign_prop = ifelse(revenue_all == 0, 0, revenue_foreign/revenue_all),\n         revenue_tourist_all = ifelse(no_tourist_all == 0, 0, revenue_all/no_tourist_all),\n         revenue_tourist_thai = ifelse(no_tourist_thai == 0, 0, revenue_thai/no_tourist_thai),\n         revenue_tourist_foreign = ifelse(no_tourist_foreign == 0, 0, revenue_foreign/no_tourist_foreign),\n         revenue_tourist_stay = ifelse(no_tourist_stay == 0, 0, revenue_all/no_tourist_stay),\n         tourist_stay_all = ifelse(no_tourist_all == 0, 0, no_tourist_stay/no_tourist_all))\n\n# Check output\nsummary(tbl_tourism_sum_all)\n\n province_eng       province_thai      region_thai         region_eng       \n Length:77          Length:77          Length:77          Length:77         \n Class :character   Class :character   Class :character   Class :character  \n Mode  :character   Mode  :character   Mode  :character   Mode  :character  \n                                                                            \n                                                                            \n                                                                            \n ratio_tourist_stay no_tourist_stay    no_tourist_all      no_tourist_thai    \n Min.   :28.25      Min.   :  259406   Min.   :   772281   Min.   :   750474  \n 1st Qu.:35.02      1st Qu.: 1240268   1st Qu.:  3155560   1st Qu.:  2943753  \n Median :38.76      Median : 2520445   Median :  5474592   Median :  4583102  \n Mean   :38.93      Mean   : 5256719   Mean   : 10316425   Mean   :  8698118  \n 3rd Qu.:42.78      3rd Qu.: 4580731   3rd Qu.: 10819668   3rd Qu.:  9615273  \n Max.   :52.22      Max.   :75436842   Max.   :151352500   Max.   :106899866  \n no_tourist_foreign  revenue_all         revenue_thai       revenue_foreign    \n Min.   :    3771   Min.   :8.961e+08   Min.   :8.918e+08   Min.   :4.300e+06  \n 1st Qu.:   37764   1st Qu.:5.416e+09   1st Qu.:4.860e+09   1st Qu.:7.466e+07  \n Median :  127404   Median :1.330e+10   Median :1.179e+10   Median :3.856e+08  \n Mean   : 1618306   Mean   :6.719e+10   Mean   :3.318e+10   Mean   :3.401e+10  \n 3rd Qu.:  653537   3rd Qu.:2.306e+10   3rd Qu.:2.188e+10   3rd Qu.:2.242e+09  \n Max.   :44452634   Max.   :1.847e+12   Max.   :7.407e+11   Max.   :1.106e+12  \n tourist_thai_prop tourist_foreign_prop revenue_thai_prop revenue_foreign_prop\n Min.   :0.3543    Min.   :0.002864     Min.   :0.1194    Min.   :0.003415    \n 1st Qu.:0.9320    1st Qu.:0.011023     1st Qu.:0.8835    1st Qu.:0.013795    \n Median :0.9789    Median :0.021105     Median :0.9648    Median :0.035169    \n Mean   :0.9158    Mean   :0.084222     Mean   :0.8766    Mean   :0.123400    \n 3rd Qu.:0.9890    3rd Qu.:0.068013     3rd Qu.:0.9862    3rd Qu.:0.116452    \n Max.   :0.9971    Max.   :0.645727     Max.   :0.9966    Max.   :0.880606    \n revenue_tourist_all revenue_tourist_thai revenue_tourist_foreign\n Min.   :  907.7     Min.   :  906.8      Min.   : 1068          \n 1st Qu.: 1500.3     1st Qu.: 1499.0      1st Qu.: 2092          \n Median : 1990.7     Median : 1969.7      Median : 2876          \n Mean   : 3454.3     Mean   : 2805.1      Mean   : 5212          \n 3rd Qu.: 3325.0     3rd Qu.: 3085.8      3rd Qu.: 4743          \n Max.   :30610.0     Max.   :13343.8      Max.   :41744          \n revenue_tourist_stay tourist_stay_all\n Min.   : 2394        Min.   :0.0885  \n 1st Qu.: 3843        1st Qu.:0.3102  \n Median : 4672        Median :0.4984  \n Mean   : 6765        Mean   :0.4983  \n 3rd Qu.: 7129        3rd Qu.:0.6360  \n Max.   :34955        Max.   :0.9044  \n\n\n\n\n\n# Summarize across all years\ntbl_tourism_sum_year &lt;- tbl_tourism_wide %&gt;%\n  mutate(year = year(date)) %&gt;%\n  group_by(year, province_eng, province_thai, region_thai, region_eng) %&gt;%\n  summarize(\n    ratio_tourist_stay = mean(ratio_tourist_stay, na.rm = TRUE),\n    no_tourist_stay = sum(no_tourist_stay, na.rm = TRUE),\n    no_tourist_all = sum(no_tourist_all, na.rm = TRUE),\n    no_tourist_thai = sum(no_tourist_thai, na.rm = TRUE),\n    no_tourist_foreign = sum(no_tourist_foreign, na.rm = TRUE),\n    revenue_all = sum(revenue_all, na.rm = TRUE),\n    revenue_thai = sum(revenue_thai, na.rm = TRUE),\n    revenue_foreign = sum(revenue_foreign, na.rm = TRUE)\n  ) %&gt;%\n  ungroup()\n\n`summarise()` has grouped output by 'year', 'province_eng', 'province_thai',\n'region_thai'. You can override using the `.groups` argument.\n\n\n\n# Compute additional KPIs\ntbl_tourism_sum_year &lt;- tbl_tourism_sum_year %&gt;%\n  mutate(tourist_thai_prop = ifelse(no_tourist_all == 0, 0, no_tourist_thai/no_tourist_all),\n         tourist_foreign_prop = ifelse(no_tourist_all == 0, 0, no_tourist_foreign/no_tourist_all),\n         revenue_thai_prop = ifelse(revenue_all == 0, 0, revenue_thai/revenue_all),\n         revenue_foreign_prop = ifelse(revenue_all == 0, 0, revenue_foreign/revenue_all),\n         revenue_tourist_all = ifelse(no_tourist_all == 0, 0, revenue_all/no_tourist_all),\n         revenue_tourist_thai = ifelse(no_tourist_thai == 0, 0, revenue_thai/no_tourist_thai),\n         revenue_tourist_foreign = ifelse(no_tourist_foreign == 0, 0, revenue_foreign/no_tourist_foreign),\n         revenue_tourist_stay = ifelse(no_tourist_stay == 0, 0, revenue_all/no_tourist_stay),\n         tourist_stay_all = ifelse(no_tourist_all == 0, 0, no_tourist_stay/no_tourist_all))\n\n# Check output\nsummary(tbl_tourism_sum_year)\n\n      year      province_eng       province_thai      region_thai       \n Min.   :2019   Length:385         Length:385         Length:385        \n 1st Qu.:2020   Class :character   Class :character   Class :character  \n Median :2021   Mode  :character   Mode  :character   Mode  :character  \n Mean   :2021                                                           \n 3rd Qu.:2022                                                           \n Max.   :2023                                                           \n  region_eng        ratio_tourist_stay no_tourist_stay    no_tourist_all    \n Length:385         Min.   : 5.452     Min.   :   13523   Min.   :   45008  \n Class :character   1st Qu.:25.977     1st Qu.:  176772   1st Qu.:  425219  \n Mode  :character   Median :42.385     Median :  400926   Median :  889499  \n                    Mean   :42.228     Mean   : 1051344   Mean   : 2063285  \n                    3rd Qu.:57.638     3rd Qu.:  933078   3rd Qu.: 2072363  \n                    Max.   :92.170     Max.   :36407624   Max.   :66966562  \n no_tourist_thai    no_tourist_foreign  revenue_all         revenue_thai      \n Min.   :   44180   Min.   :       0   Min.   :4.204e+07   Min.   :4.165e+07  \n 1st Qu.:  387805   1st Qu.:    2221   1st Qu.:7.809e+08   1st Qu.:7.160e+08  \n Median :  852972   Median :   11860   Median :1.873e+09   Median :1.746e+09  \n Mean   : 1739624   Mean   :  323661   Mean   :1.344e+10   Mean   :6.636e+09  \n 3rd Qu.: 1799767   3rd Qu.:   79008   3rd Qu.:5.134e+09   3rd Qu.:4.647e+09  \n Max.   :42073847   Max.   :24892715   Max.   :1.068e+12   Max.   :3.846e+11  \n revenue_foreign     tourist_thai_prop tourist_foreign_prop revenue_thai_prop\n Min.   :0.000e+00   Min.   :0.2104    Min.   :0.000000     Min.   :0.05123  \n 1st Qu.:4.880e+06   1st Qu.:0.9468    1st Qu.:0.004155     1st Qu.:0.92557  \n Median :3.119e+07   Median :0.9875    Median :0.012525     Median :0.98198  \n Mean   :6.802e+09   Mean   :0.9315    Mean   :0.068537     Mean   :0.90492  \n 3rd Qu.:2.702e+08   3rd Qu.:0.9958    3rd Qu.:0.053158     3rd Qu.:0.99451  \n Max.   :6.832e+11   Max.   :1.0000    Max.   :0.789559     Max.   :1.00000  \n revenue_foreign_prop revenue_tourist_all revenue_tourist_thai\n Min.   :0.000000     Min.   :  695.6     Min.   :  695.2     \n 1st Qu.:0.005495     1st Qu.: 1394.0     1st Qu.: 1382.6     \n Median :0.018025     Median : 1983.6     Median : 1937.6     \n Mean   :0.095078     Mean   : 3207.1     Mean   : 2690.1     \n 3rd Qu.:0.074430     3rd Qu.: 3185.7     3rd Qu.: 3113.0     \n Max.   :0.948773     Max.   :36131.4     Max.   :15683.4     \n revenue_tourist_foreign revenue_tourist_stay tourist_stay_all \n Min.   :    0           Min.   : 2030        Min.   :0.05899  \n 1st Qu.: 1931           1st Qu.: 3557        1st Qu.:0.33405  \n Median : 2657           Median : 4743        Median :0.48410  \n Mean   : 4603           Mean   : 6427        Mean   :0.49282  \n 3rd Qu.: 4373           3rd Qu.: 7059        3rd Qu.:0.61740  \n Max.   :58147           Max.   :44768        Max.   :0.95484  \n\n\n\n\n\n# No additional processing required\n# Compute additional KPIs\ntbl_tourism_wide &lt;- tbl_tourism_wide %&gt;%\n  mutate(tourist_thai_prop = ifelse(no_tourist_all == 0, 0, no_tourist_thai/no_tourist_all),\n         tourist_foreign_prop = ifelse(no_tourist_all == 0, 0, no_tourist_foreign/no_tourist_all),\n         revenue_thai_prop = ifelse(revenue_all == 0, 0, revenue_thai/revenue_all),\n         revenue_foreign_prop = ifelse(revenue_all == 0, 0, revenue_foreign/revenue_all),\n         revenue_tourist_all = ifelse(no_tourist_all == 0, 0, revenue_all/no_tourist_all),\n         revenue_tourist_thai = ifelse(no_tourist_thai == 0, 0, revenue_thai/no_tourist_thai),\n         revenue_tourist_foreign = ifelse(no_tourist_foreign == 0, 0, revenue_foreign/no_tourist_foreign),\n         revenue_tourist_stay = ifelse(no_tourist_stay == 0, 0, revenue_all/no_tourist_stay),\n         tourist_stay_all = ifelse(no_tourist_all == 0, 0, no_tourist_stay/no_tourist_all))\n\n# Check output\nsummary(tbl_tourism_wide)\n\n      date            province_thai      province_eng       region_thai       \n Min.   :2019-01-01   Length:3850        Length:3850        Length:3850       \n 1st Qu.:2020-01-01   Class :character   Class :character   Class :character  \n Median :2021-01-16   Mode  :character   Mode  :character   Mode  :character  \n Mean   :2021-01-15                                                           \n 3rd Qu.:2022-02-01                                                           \n Max.   :2023-02-01                                                           \n  region_eng        ratio_tourist_stay no_tourist_stay   no_tourist_all   \n Length:3850        Min.   : 0.00      Min.   :      0   Min.   :      0  \n Class :character   1st Qu.:20.18      1st Qu.:  16259   1st Qu.:  39092  \n Mode  :character   Median :41.81      Median :  44579   Median :  92122  \n                    Mean   :38.93      Mean   : 105134   Mean   : 206328  \n                    3rd Qu.:56.20      3rd Qu.:  90902   3rd Qu.: 203646  \n                    Max.   :95.86      Max.   :3335728   Max.   :6131044  \n no_tourist_thai   no_tourist_foreign   revenue_all         revenue_thai      \n Min.   :      0   Min.   :      0.0   Min.   :0.000e+00   Min.   :0.000e+00  \n 1st Qu.:  37169   1st Qu.:     49.2   1st Qu.:6.332e+07   1st Qu.:5.925e+07  \n Median :  88782   Median :    553.0   Median :1.955e+08   Median :1.773e+08  \n Mean   : 173962   Mean   :  32366.1   Mean   :1.344e+09   Mean   :6.636e+08  \n 3rd Qu.: 184256   3rd Qu.:   5189.5   3rd Qu.:5.060e+08   3rd Qu.:4.600e+08  \n Max.   :4087756   Max.   :2473725.0   Max.   :1.103e+11   Max.   :4.506e+10  \n revenue_foreign     tourist_thai_prop tourist_foreign_prop revenue_thai_prop\n Min.   :0.000e+00   Min.   :0.0000    Min.   :0.0000000    Min.   :0.0000   \n 1st Qu.:1.100e+05   1st Qu.:0.9627    1st Qu.:0.0008535    1st Qu.:0.9511   \n Median :1.540e+06   Median :0.9932    Median :0.0066240    Median :0.9911   \n Mean   :6.802e+08   Mean   :0.9297    Mean   :0.0637772    Mean   :0.9090   \n 3rd Qu.:1.742e+07   3rd Qu.:0.9990    3rd Qu.:0.0346323    3rd Qu.:0.9988   \n Max.   :8.503e+10   Max.   :1.0000    Max.   :1.0000000    Max.   :1.0016   \n revenue_foreign_prop revenue_tourist_all revenue_tourist_thai\n Min.   :0.000000     Min.   :     0      Min.   :    0       \n 1st Qu.:0.001126     1st Qu.:  1366      1st Qu.: 1345       \n Median :0.008700     Median :  1932      Median : 1880       \n Mean   :0.084802     Mean   :  3513      Mean   : 2614       \n 3rd Qu.:0.045997     3rd Qu.:  3199      3rd Qu.: 3082       \n Max.   :1.000000     Max.   :300000      Max.   :17325       \n revenue_tourist_foreign revenue_tourist_stay tourist_stay_all\n Min.   :    0           Min.   :     0       Min.   :0.0000  \n 1st Qu.: 1294           1st Qu.:  3187       1st Qu.:0.3543  \n Median : 2372           Median :  4448       Median :0.5128  \n Mean   : 4504           Mean   :  6428       Mean   :0.5270  \n 3rd Qu.: 4137           3rd Qu.:  6754       3rd Qu.:0.6981  \n Max.   :65000           Max.   :300000       Max.   :1.0000  \n\n\n\n# Save processed tbl_tourism_wide\nwrite_rds(tbl_tourism_wide, 'data/processed/tbl_tourism_wide.rds')\n\n\n\n\n\n\n1.2.3 Merge Tourism data\nFinally, I can merge the tourism dataset to the spatial dataset using left_join from dplyr. These are sorted to facilitate filtering later.\n\n# Join with tourism data all\nth_bound_tour_all &lt;- left_join(th_bound_l1, tbl_tourism_sum_all, by = c(\"ADM1_EN\" = \"province_eng\")) %&gt;%\n  arrange(ADM1_EN)\n\n# Join with tourism data by year\nth_bound_tour_year &lt;- left_join(th_bound_l1, tbl_tourism_sum_year, by = c(\"ADM1_EN\" = \"province_eng\")) %&gt;%\n  arrange(year, ADM1_EN)\n\n\n# Join with tourism data by year and month\nth_bound_tour_year_month &lt;- left_join(th_bound_l1, tbl_tourism_wide, by = c(\"ADM1_EN\" = \"province_eng\")) %&gt;%\n  arrange(date.y, ADM1_EN)\n\nA good practise is to save these processed datasets for easy retrieval.\n\n# Export to processed sub-folder as RDS\nwrite_rds(th_bound_tour_all, 'data/processed/th_bound_tour_all.rds')\n\nwrite_rds(th_bound_tour_year, 'data/processed/th_bound_tour_year.rds')\n\nwrite_rds(th_bound_tour_year_month, 'data/processed/th_bound_tour_year_month.rds')\n\nAfter clearing the r environment, I’ll load in the various datasets.\n\n# Clear R console\nrm(list = ls(all.names = TRUE))\n\n# Load various processed dataset\nth_bound_tour_all &lt;- read_rds('data/processed/th_bound_tour_all.rds')\nth_bound_tour_year &lt;- read_rds('data/processed/th_bound_tour_year.rds')\nth_bound_tour_year_month &lt;- read_rds('data/processed/th_bound_tour_year_month.rds')"
  },
  {
    "objectID": "In-Class_Ex/In-Class_Ex_06/In-Class_Ex06.html#setting-up",
    "href": "In-Class_Ex/In-Class_Ex_06/In-Class_Ex06.html#setting-up",
    "title": "In Class Exercise 06",
    "section": "",
    "text": "pacman::p_load(sf, sfdep, tmap, plotly, tidyverse)\n\n\n\n\n\n# Import geospatial hunan data\nhunan &lt;- st_read(dsn = \"data/geospatial\", layer = \"Hunan\")\n\nReading layer `Hunan' from data source \n  `C:\\Users\\Henry\\Desktop\\SMU Masters\\2024-2025 T1\\Geospatial Analytics & Applications\\Project\\GeospatialWebsite\\In-Class_Ex\\In-Class_Ex_06\\data\\geospatial' \n  using driver `ESRI Shapefile'\nSimple feature collection with 88 features and 7 fields\nGeometry type: POLYGON\nDimension:     XY\nBounding box:  xmin: 108.7831 ymin: 24.6342 xmax: 114.2544 ymax: 30.12812\nGeodetic CRS:  WGS 84\n\n\n\n\n\n\n# Import GDPPC data\nGDPPC &lt;- read_csv(\"data/aspatial/Hunan_GDPPC.csv\")\n\nRows: 1496 Columns: 3\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr (1): County\ndbl (2): Year, GDPPC\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message."
  },
  {
    "objectID": "In-Class_Ex/In-Class_Ex_06/In-Class_Ex06.html#step-1-building-space-time-cube",
    "href": "In-Class_Ex/In-Class_Ex_06/In-Class_Ex06.html#step-1-building-space-time-cube",
    "title": "In Class Exercise 06",
    "section": "Step 1 Building Space-time Cube",
    "text": "Step 1 Building Space-time Cube\n\n# Build space-time cube\nGDPPC_st &lt;- spacetime(GDPPC, hunan, \n                      .loc_col = \"County\", # Space indicator \n                      .time_col = \"Year\")  # Time indicator (needs to be in discrete integer)\n\n# Check space-time cube object\nis_spacetime_cube(GDPPC_st)\n\n[1] TRUE\n\n\nSpace-time cube resembles tidyverse table on the surface but contains rules for lookup etc within."
  },
  {
    "objectID": "In-Class_Ex/In-Class_Ex_06/In-Class_Ex06.html#step-2-calculate-getis-ord-local-gi-statistic",
    "href": "In-Class_Ex/In-Class_Ex_06/In-Class_Ex06.html#step-2-calculate-getis-ord-local-gi-statistic",
    "title": "In Class Exercise 06",
    "section": "Step 2 Calculate Getis-Ord local Gi* statistic",
    "text": "Step 2 Calculate Getis-Ord local Gi* statistic\n\nDerive Spatial weights\nIdentify neighbours and derive inverse distance weights. (For Gi* cannot use proximity weights)\n\nGDPPC_nb &lt;- GDPPC_st %&gt;%\n  activate(\"geometry\") %&gt;%  # Need this to activate geometry context\n  mutate(nb = include_self(st_contiguity(geometry)),  # Nearest neighbour count\n         wt = st_inverse_distance(nb, geometry, scale = 1,  # Inverse distance weight based on nearest neighbour\n                                  alpha = 1), # Alpha used to control distance decay\n         .before = 1) %&gt;%\n  set_nbs(\"nb\") %&gt;%\n  set_wts(\"wt\")\n\n! Polygon provided. Using point on surface.\n\n\nWarning: There was 1 warning in `stopifnot()`.\nℹ In argument: `wt = st_inverse_distance(nb, geometry, scale = 1, alpha = 1)`.\nCaused by warning in `st_point_on_surface.sfc()`:\n! st_point_on_surface may not give correct results for longitude/latitude data\n\n\n\n\nCompute Gi*\n\ngi_stars &lt;- GDPPC_nb %&gt;% \n  group_by(Year) %&gt;% \n  mutate(gi_star = local_gstar_perm(GDPPC, nb, wt)) %&gt;% \n  tidyr::unnest(gi_star)"
  },
  {
    "objectID": "In-Class_Ex/In-Class_Ex_06/In-Class_Ex06.html#step-3-mann-kendall-test",
    "href": "In-Class_Ex/In-Class_Ex_06/In-Class_Ex06.html#step-3-mann-kendall-test",
    "title": "In Class Exercise 06",
    "section": "Step 3 Mann-Kendall Test",
    "text": "Step 3 Mann-Kendall Test\nH0: No monotonic trend H1: Monotonic trend is present\nIf p-value &lt; alpha value, reject null-hypothesis.\n\n# Perform Mann-Kendall Test\ncbg &lt;- gi_stars %&gt;% \n  ungroup() %&gt;% \n  filter(County == \"Changsha\") |&gt;  # \"|&gt; R base piping\"\n  select(County, Year, gi_star)\n\n# Visualize results\nggplot(data = cbg, \n       aes(x = Year, \n           y = gi_star)) +\n  geom_line() +\n  theme_light()\n\n\n\n\n\n\n\n\n\n# Visualize using interactive plot\np &lt;- ggplot(data = cbg, \n       aes(x = Year, \n           y = gi_star)) +\n  geom_line() +\n  theme_light()\n\nggplotly(p)\n\n\n\n\n\n\nPrint Test Report\n\ncbg %&gt;%\n  summarise(mk = list(unclass(Kendall::MannKendall(gi_star)))) %&gt;% \n  tidyr::unnest_wider(mk)\n\n# A tibble: 1 × 5\n    tau      sl     S     D  varS\n  &lt;dbl&gt;   &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt;\n1 0.485 0.00742    66  136.  589.\n\n\nWith reference to sl (p-value), reject null hypothesis as sl &lt; 0.05 and conclude that monotonic trend is present. Since tau is &gt;0, it is an increasingly series.\n\n\nMann-Kendall DataFrame\nReplicate the test for each location with group_by() function of dpylr.\n\n# Repeat Mann-Kendall test\nehsa &lt;- gi_stars %&gt;%\n  group_by(County) %&gt;%\n  summarise(mk = list(unclass(Kendall::MannKendall(gi_star)))) %&gt;%\n  tidyr::unnest_wider(mk)\n\n# Check output\nhead(ehsa)\n\n# A tibble: 6 × 6\n  County        tau        sl     S     D  varS\n  &lt;chr&gt;       &lt;dbl&gt;     &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt;\n1 Anhua      0.191  0.303        26  136.  589.\n2 Anren     -0.294  0.108       -40  136.  589.\n3 Anxiang    0      1             0  136.  589.\n4 Baojing   -0.691  0.000128    -94  136.  589.\n5 Chaling   -0.0882 0.650       -12  136.  589.\n6 Changning -0.750  0.0000318  -102  136.  589.\n\n\nSort results by sl and tau to focus on more significant emerging hot/cold spots.\n\n# Sort to show emerging \nemerging &lt;- ehsa %&gt;% \n  arrange(sl, abs(tau)) %&gt;% \n  slice(1:10)\n\n# Check filtered output\nhead(emerging)\n\n# A tibble: 6 × 6\n  County        tau         sl     S     D  varS\n  &lt;chr&gt;       &lt;dbl&gt;      &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt;\n1 Shuangfeng  0.868 0.00000143   118  136.  589.\n2 Xiangtan    0.868 0.00000143   118  136.  589.\n3 Xiangxiang  0.868 0.00000143   118  136.  589.\n4 Chengbu    -0.824 0.00000482  -112  136.  589.\n5 Dongan     -0.824 0.00000482  -112  136.  589.\n6 Wugang     -0.809 0.00000712  -110  136.  589."
  },
  {
    "objectID": "In-Class_Ex/In-Class_Ex_06/In-Class_Ex06.html#step-4-perform-emerging-hot-spot-analysis",
    "href": "In-Class_Ex/In-Class_Ex_06/In-Class_Ex06.html#step-4-perform-emerging-hot-spot-analysis",
    "title": "In Class Exercise 06",
    "section": "Step 4 Perform Emerging Hot Spot Analysis",
    "text": "Step 4 Perform Emerging Hot Spot Analysis\n\n# Perform EHSA\nehsa_new &lt;- emerging_hotspot_analysis(\n  x = GDPPC_st, \n  .var = \"GDPPC\", \n  k = 1, \n  nsim = 99\n)\n\n# Visualize results\nggplot(data = ehsa_new,\n       aes(x = classification)) +\n  geom_bar()\n\n\n\n\n\n\n\n\n\n# Merge with hunan dataset\nhunan_ehsa &lt;- hunan %&gt;%\n  left_join(ehsa_new,\n            by = join_by(County == location))\n\n\n# Visualize results \nehsa_sig &lt;- hunan_ehsa  %&gt;%\n  filter(p_value &lt; 0.05)\ntmap_mode(\"plot\")\n\ntmap mode set to plotting\n\ntm_shape(hunan_ehsa) +\n  tm_polygons() +\n  tm_borders(alpha = 0.5) +\ntm_shape(ehsa_sig) +\n  tm_fill(\"classification\") + \n  tm_borders(alpha = 0.4)\n\nWarning: One tm layer group has duplicated layer types, which are omitted. To\ndraw multiple layers of the same type, use multiple layer groups (i.e. specify\ntm_shape prior to each of them)."
  },
  {
    "objectID": "Take-Home_Ex/Take-Home_Ex_02/Take-Home_Ex02.html#global-spatial-autocorrelation",
    "href": "Take-Home_Ex/Take-Home_Ex_02/Take-Home_Ex02.html#global-spatial-autocorrelation",
    "title": "Take Home Exercise 02",
    "section": "3.1 Global Spatial Autocorrelation",
    "text": "3.1 Global Spatial Autocorrelation\n\nth_tour_knn5_all &lt;- th_bound_tour_all %&gt;%\n  mutate(nb = nb_knn_5,\n         wt = st_weights(nb, style = \"W\"),\n         wt_inv = st_inverse_distance(nb, geometry = geometry, scale = 100, alpha = 1),\n         .before = 1)\n\n! Polygon provided. Using point on surface.\n\n\n\nRevenue\n\n\n\nmoranI_rev &lt;- global_moran(th_tour_knn5_all$tourist_stay_all,\n                       th_tour_knn5_all$nb,\n                       th_tour_knn5_all$wt)\nglimpse(moranI_rev)\n\nList of 2\n $ I: num 0.354\n $ K: num 2.18\n\n\n\nglobal_moran_test(th_tour_knn5_all$tourist_stay_all,\n                       th_tour_knn5_all$nb,\n                       th_tour_knn5_all$wt)\n\n\n    Moran I test under randomisation\n\ndata:  x  \nweights: listw    \n\nMoran I statistic standard deviate = 5.684, p-value = 6.578e-09\nalternative hypothesis: greater\nsample estimates:\nMoran I statistic       Expectation          Variance \n       0.35405381       -0.01315789        0.00417368 \n\n\n\nglobal_moran_perm(th_tour_knn5_all$tourist_stay_all,\n                  th_tour_knn5_all$nb,\n                  th_tour_knn5_all$wt,\n                  nsim = 999)\n\n\n    Monte-Carlo simulation of Moran I\n\ndata:  x \nweights: listw  \nnumber of simulations + 1: 1000 \n\nstatistic = 0.35405, observed rank = 1000, p-value &lt; 2.2e-16\nalternative hypothesis: two.sided"
  },
  {
    "objectID": "Take-Home_Ex/Take-Home_Ex_02/Take-Home_Ex02.html#local-spatial-autocorrelation",
    "href": "Take-Home_Ex/Take-Home_Ex_02/Take-Home_Ex02.html#local-spatial-autocorrelation",
    "title": "Take Home Exercise 02",
    "section": "3.2 Local Spatial Autocorrelation",
    "text": "3.2 Local Spatial Autocorrelation"
  },
  {
    "objectID": "Take-Home_Ex/Take-Home_Ex_02/Take-Home_Ex02.html#global-spatial",
    "href": "Take-Home_Ex/Take-Home_Ex_02/Take-Home_Ex02.html#global-spatial",
    "title": "Take Home Exercise 02",
    "section": "3.1 Global Spatial",
    "text": "3.1 Global Spatial"
  },
  {
    "objectID": "Take-Home_Ex/Take-Home_Ex_02/Take-Home_Ex02.html#feature-engineering",
    "href": "Take-Home_Ex/Take-Home_Ex_02/Take-Home_Ex02.html#feature-engineering",
    "title": "Take Home Exercise 02",
    "section": "2.1 Feature Engineering",
    "text": "2.1 Feature Engineering\nOther variables are created in order to provide greater depth to analysing the Thai tourism economy.\n\n\n\n\n\n\n\nVariable\nDefinition\n\n\n\n\ntourist_thai_prop\nProportion of tourists who are Thai\n\n\ntourist_foreign_prop\nProportion of tourists who are Foreign\n\n\nrevenue_thai_prop\nProportion of revenue generated by Thai tourists\n\n\nrevenue_foreign_prop\nProportion of revenue generated by Foreign tourists\n\n\nrevenue_tourist_all\nRevenue generated per tourist\n\n\nrevenue_tourist_thai\nRevenue generated per Thai tourist\n\n\nrevenue_tourist_foreign\nRevenue generated per Foreign tourist\n\n\nrevenue_tourist_stay\nRevenue generated per tourist who stay overnight\n\n\ntourist_stay_all\nProportion of tourists who stayed overnight\n\n\n\nHere’s a quick check for 1 of the\n\n# Visualize revenue per tourist\ntm_shape(th_bound_tour_all) + \n  tm_fill(col = \"revenue_tourist_all\",\n          n = 5,\n          style = \"jenks\", \n          title = \"Revenue per Tourist\") + \n  tm_borders(alpha = 0.5) \n\n\n\n\n\n\n\n\nThis clearly shows a different distribution compared to the basic revenue/tourist count distribution. This indicator is also important the Thai government can try to increase total tourism revenue by increasing per Thai Baht spent by each tourist."
  },
  {
    "objectID": "Take-Home_Ex/Take-Home_Ex_02/Take-Home_Ex02.html#poweer-bi-visualization",
    "href": "Take-Home_Ex/Take-Home_Ex_02/Take-Home_Ex02.html#poweer-bi-visualization",
    "title": "Take Home Exercise 02",
    "section": "2.2 Poweer BI Visualization",
    "text": "2.2 Poweer BI Visualization\n\n\n\n\n\ntmap_mode(\"plot\")\n\ntmap mode set to plotting\n\ntm_shape(th_bound_tour_all) +\n  tm_fill(\"revenue_all\", \n          style = \"quantile\", \n          palette = \"Blues\",\n          title = \"revenue_all\") +\n  tm_layout(main.title = \"Distribution of Tourism Revenue by Province\",\n            main.title.position = \"center\",\n            main.title.size = 1.2,\n            legend.height = 0.45, \n            legend.width = 0.35,\n            frame = TRUE) +\n  tm_borders(alpha = 0.5) +\n  tm_compass(type=\"8star\", size = 2) +\n  tm_scale_bar() +\n  tm_grid(alpha =0.2)"
  },
  {
    "objectID": "Take-Home_Ex/Take-Home_Ex_02/Take-Home_Ex02.html#spatial-weights-matrix",
    "href": "Take-Home_Ex/Take-Home_Ex_02/Take-Home_Ex02.html#spatial-weights-matrix",
    "title": "Take Home Exercise 02",
    "section": "3.1 Spatial Weights Matrix",
    "text": "3.1 Spatial Weights Matrix\nThere are a few options to get the list of neighbours in sfdep package:\n\n\n\n\n\n\n\nMethod\nDetails\n\n\n\n\nst_contiguity (i.e. Queen)\nBased on regions with contiguous boundaries (uses spdep::poly2nb)\n\n\nst_dist_band (fixed distance)\nBased on distance band (uses spdep::dnearneigh)\n\n\nst_knn (adaptive distance)\nBased on k nearest neighbours (uses spdep::knearneigh and spdep::knn2nb)\n\n\n\nBefore passing the coordinates to either functions, checks are required to ensure that the points are in the interior of each province (i.e. not in the middle of the ocean).\n\n# Generate coordinates using st_centroid\nlongitude_cent &lt;- map_dbl(th_bound_tour_all$geometry, ~st_centroid(.x)[[1]])\nlatitude_cent &lt;- map_dbl(th_bound_tour_all$geometry, ~st_centroid(.x)[[2]])\ncoords_cent &lt;- cbind(longitude_cent, latitude_cent)\n\n# Generate coordinates using st_point_on_surface\nlongitude &lt;- map_dbl(th_bound_tour_all$geometry, ~st_point_on_surface(.x)[[1]])\nlatitude &lt;- map_dbl(th_bound_tour_all$geometry, ~st_point_on_surface(.x)[[2]])\ncoords &lt;- cbind(longitude, latitude)\n\n\n# Visualise both points on a map to verify\nplot(th_bound_tour_all$geometry, border=\"lightgrey\", main = \"Points Comparison\")\npoints(coords_cent, pch = 19, cex = 0.2, col = \"red\")\npoints(coords, pch = 19, cex = 0.2, col = \"blue\")\nlegend(\"topright\", legend = c(\"st_centroid\", \"st_point_on_surface-\"), \n       col = c(\"red\", \"blue\"), pch = 19, cex = 0.8)\n\n\n\n\n\n\n\n\nAfter closely viewing the plot, all points from st_centroid are within the interior of the province polygons. With the exception of a few provinces, the points from st_centroid are seemingly better placed towards the center as compared to st_point_on_surface. Therefore, this allows the sfdep distance based neighbour functions to be used with ease considering st_centroid is used as the default.\n\nst_contiguityst_dist_bandst_knn\n\n\n\n# Calculate neighbours\nnb_contiguity &lt;- st_contiguity(th_bound_tour_all$geometry)\n\nResults are saved for ease of rendering\n\n# # Export output object and read it in to minimize rendering time\n# write_rds(nb_contiguity, 'data/output/nb_contiguity.rds') # Uncomment when running again\n\n# Read in output object\nnb_contiguity &lt;- read_rds('data/output/nb_contiguity.rds')\n\n# Check output\nnb_contiguity\n\nNeighbour list object:\nNumber of regions: 77 \nNumber of nonzero links: 352 \nPercentage nonzero weights: 5.93692 \nAverage number of links: 4.571429 \n1 region with no links:\n48\n2 disjoint connected subgraphs\n\n\n\n# Visualize neighbours\nplot(th_bound_tour_all$geometry, border=\"lightgrey\", , main=\"Queen Contiguity \")\nplot(nb_contiguity, coords_cent, pch = 19, cex = 0.6, add = TRUE, col = \"red\")\n\n\n\n\n\n\n\n\n\n\n\n# Calculate neighbours\nnb_dist &lt;- st_dist_band(th_bound_tour_all$geometry)\n\nResults are saved for ease of rendering\n\n# # Export output object and read it in to minimize rendering time\n# write_rds(nb_dist, 'data/output/nb_dist.rds') # Uncomment when running again\n\n# Read in output object\nnb_dist &lt;- read_rds('data/output/nb_dist.rds')\n\n# Check output\nnb_dist\n\nNeighbour list object:\nNumber of regions: 77 \nNumber of nonzero links: 474 \nPercentage nonzero weights: 7.994603 \nAverage number of links: 6.155844 \n2 disjoint connected subgraphs\n\n\n\n# Visualize neighbours\nplot(th_bound_tour_all$geometry, border=\"lightgrey\", main=\"Distance Band\")\nplot(nb_dist, coords_cent, pch = 19, cex = 0.6, add = TRUE, col = \"red\")\n\n\n\n\n\n\n\n\n\n\nGeneral rule of thumb for k is square root of observations. \\[\nk \\approx \\sqrt{76} \\approx 8\n\\] Just for variety, k = 5 (average number from st_contiguity) is also run.\n\n# Calculate neighbours\nnb_knn_8 &lt;- st_knn(th_bound_tour_all$geometry, k = 8)\n\n! Polygon provided. Using point on surface.\n\nnb_knn_5 &lt;- st_knn(th_bound_tour_all$geometry, k = 5)\n\n! Polygon provided. Using point on surface.\n\n\nResults are saved for ease of rendering\n\n# # # Export output object and read it in to minimize rendering time\n# write_rds(nb_knn_8, 'data/output/nb_knn_8.rds') # Uncomment when running again\n# write_rds(nb_knn_5, 'data/output/nb_knn_5.rds') # Uncomment when running again\n\n# Read in output object\nnb_knn_8 &lt;- read_rds('data/output/nb_knn_8.rds')\nnb_knn_5 &lt;- read_rds('data/output/nb_knn_5.rds')\n\n# Check output\nnb_knn_8\n\nNeighbour list object:\nNumber of regions: 77 \nNumber of nonzero links: 616 \nPercentage nonzero weights: 10.38961 \nAverage number of links: 8 \nNon-symmetric neighbours list\n\nnb_knn_5\n\nNeighbour list object:\nNumber of regions: 77 \nNumber of nonzero links: 385 \nPercentage nonzero weights: 6.493506 \nAverage number of links: 5 \nNon-symmetric neighbours list\n\n\n\n# Visualize neighbours\npar(mfrow=c(1,2))\nplot(th_bound_tour_all$geometry, border=\"lightgrey\", main=\"K = 8\")\nplot(nb_knn_8, coords_cent, pch = 19, cex = 0.6, add = TRUE, col = \"red\")\nplot(th_bound_tour_all$geometry, border=\"lightgrey\", main=\"K = 5\")\nplot(nb_knn_5, coords_cent, pch = 19, cex = 0.6, add = TRUE, col = \"red\")\n\n\n\n\n\n\n\n\n\n\n\nComparing the various neighbour methods, I have decided on the adaptive method of determining neighbours, specifically k = 5. Reason are as follows:\n\nst_contiguity - Not appropriate for this case since not all boundaries are contiguous, (i.e. there is an island - Phuket).\nst_dist_band - Having a fixed distance causes urban provinces to have much more neighbours (i.e. Bangkok Metropolitan Region) while rural provinces have scarce neighbours. I feel that this is not an appropriate relationship for analyzing tourism indicators.\nst_knn (k = 8) - Judging from the plot, the neighbour list seemed to be much to congested. k = 5 provides a more reasonable structure.\n\nAlthough I have determined the neighbour list, there are also a few options to generate the weights:\n\n\n\n\n\n\n\nMethod\nDetails\n\n\n\n\nst_weights\nStandardized weights based on neighbour list\n\n\nst_kernel_weights\nWeights based on kernel functions and distance\n\n\nst_inverse_distance\nWeights based on inverse distance between points\n\n\n\nGiven the context of tourism, I have decided to focus on st_weights. The rationale is as follows:\n\nst_weights - ensure that all neighbours have equal influence\nst_inverse_distance - while it can be argued that distance is likely a factor especially for specific tourism indicators (i.e. local preferring areas that are closer for a quick getaway, affecting indicators involving overnight stays), it is not clear the extent to which it impacts the overall tourism industry.\n\nWhile performing st_weights, the style is less significant due to the adaptive nature of KNN. W is selected as the default style. Rationale for not choosing the other styles are as follows:\n\nB (binary weights) - Does not really matter since neighbours are already treated uniformly\nC (globally standardized weights) - Will dilute local effects making it not suitable for tourism analysis\nU (equal weights) - Similar to C, less focused on local effects required for tourism analysis\nS (variance-stabilizing) - More relevant for analysis where variance stability is important\nminmax - Similar to C and U with added layer of normalization\n\n\nth_tour_knn5_all &lt;- th_bound_tour_all %&gt;%\n  mutate(nb = nb_knn_5,\n         wt = st_weights(nb, style = \"W\"),\n         .before = 1)"
  },
  {
    "objectID": "Take-Home_Ex/Take-Home_Ex_02/Take-Home_Ex02.html#global-morans-i-across-space",
    "href": "Take-Home_Ex/Take-Home_Ex_02/Take-Home_Ex02.html#global-morans-i-across-space",
    "title": "Take Home Exercise 02",
    "section": "3.2 Global Moran’s I across Space",
    "text": "3.2 Global Moran’s I across Space\nIn performing Global Moran’s I, global_moran_perm will be used over global_moran and global_moran_test as:\n\nglobal_moran does not give any p-value\nglobal_moran_test is not as robust as global_moran_perm which is a Monte-Carlo simulation.\n\nThe null and alternative hypothesis for Global Moran’s I are:\nH0: The attribute is randomly distributed among the provinces, no spatial autocorrelation\nH1: The attribute is not randomly distributed among the provinces, spatial autocorrelation\n\nRevenueTouristRevenue/TouristOccupancy RateOvernight Guest\n\n\n\nset.seed(42)\nglobal_moran_perm(th_tour_knn5_all$revenue_all,\n                  th_tour_knn5_all$nb,\n                  th_tour_knn5_all$wt,\n                  nsim = 999)\n\n\n    Monte-Carlo simulation of Moran I\n\ndata:  x \nweights: listw  \nnumber of simulations + 1: 1000 \n\nstatistic = 0.021003, observed rank = 848, p-value = 0.304\nalternative hypothesis: two.sided\n\n\n\nset.seed(42)\nglobal_moran_perm(th_tour_knn5_all$revenue_thai,\n                  th_tour_knn5_all$nb,\n                  th_tour_knn5_all$wt,\n                  nsim = 999)\n\n\n    Monte-Carlo simulation of Moran I\n\ndata:  x \nweights: listw  \nnumber of simulations + 1: 1000 \n\nstatistic = -0.0019269, observed rank = 694, p-value = 0.612\nalternative hypothesis: two.sided\n\n\n\nset.seed(42)\nglobal_moran_perm(th_tour_knn5_all$revenue_foreign,\n                  th_tour_knn5_all$nb,\n                  th_tour_knn5_all$wt,\n                  nsim = 999)\n\n\n    Monte-Carlo simulation of Moran I\n\ndata:  x \nweights: listw  \nnumber of simulations + 1: 1000 \n\nstatistic = 0.035698, observed rank = 897, p-value = 0.206\nalternative hypothesis: two.sided\n\n\n\nset.seed(42)\nglobal_moran_perm(th_tour_knn5_all$revenue_thai_prop,\n                  th_tour_knn5_all$nb,\n                  th_tour_knn5_all$wt,\n                  nsim = 999)\n\n\n    Monte-Carlo simulation of Moran I\n\ndata:  x \nweights: listw  \nnumber of simulations + 1: 1000 \n\nstatistic = 0.36446, observed rank = 1000, p-value &lt; 2.2e-16\nalternative hypothesis: two.sided\n\n\n\nset.seed(42)\nglobal_moran_perm(th_tour_knn5_all$revenue_foreign_prop,\n                  th_tour_knn5_all$nb,\n                  th_tour_knn5_all$wt,\n                  nsim = 999)\n\n\n    Monte-Carlo simulation of Moran I\n\ndata:  x \nweights: listw  \nnumber of simulations + 1: 1000 \n\nstatistic = 0.36446, observed rank = 1000, p-value &lt; 2.2e-16\nalternative hypothesis: two.sided\n\n\n\n\n\nset.seed(42)\nglobal_moran_perm(th_tour_knn5_all$no_tourist_all,\n                  th_tour_knn5_all$nb,\n                  th_tour_knn5_all$wt,\n                  nsim = 999)\n\n\n    Monte-Carlo simulation of Moran I\n\ndata:  x \nweights: listw  \nnumber of simulations + 1: 1000 \n\nstatistic = 0.025892, observed rank = 848, p-value = 0.304\nalternative hypothesis: two.sided\n\n\n\nset.seed(42)\nglobal_moran_perm(th_tour_knn5_all$no_tourist_thai,\n                  th_tour_knn5_all$nb,\n                  th_tour_knn5_all$wt,\n                  nsim = 999)\n\n\n    Monte-Carlo simulation of Moran I\n\ndata:  x \nweights: listw  \nnumber of simulations + 1: 1000 \n\nstatistic = 0.029083, observed rank = 829, p-value = 0.342\nalternative hypothesis: two.sided\n\n\n\nset.seed(42)\nglobal_moran_perm(th_tour_knn5_all$no_tourist_foreign,\n                  th_tour_knn5_all$nb,\n                  th_tour_knn5_all$wt,\n                  nsim = 999)\n\n\n    Monte-Carlo simulation of Moran I\n\ndata:  x \nweights: listw  \nnumber of simulations + 1: 1000 \n\nstatistic = 0.059863, observed rank = 926, p-value = 0.148\nalternative hypothesis: two.sided\n\n\n\nset.seed(42)\nglobal_moran_perm(th_tour_knn5_all$tourist_thai_prop,\n                  th_tour_knn5_all$nb,\n                  th_tour_knn5_all$wt,\n                  nsim = 999)\n\n\n    Monte-Carlo simulation of Moran I\n\ndata:  x \nweights: listw  \nnumber of simulations + 1: 1000 \n\nstatistic = 0.39259, observed rank = 1000, p-value &lt; 2.2e-16\nalternative hypothesis: two.sided\n\n\n\nset.seed(42)\nglobal_moran_perm(th_tour_knn5_all$tourist_foreign_prop,\n                  th_tour_knn5_all$nb,\n                  th_tour_knn5_all$wt,\n                  nsim = 999)\n\n\n    Monte-Carlo simulation of Moran I\n\ndata:  x \nweights: listw  \nnumber of simulations + 1: 1000 \n\nstatistic = 0.39259, observed rank = 1000, p-value &lt; 2.2e-16\nalternative hypothesis: two.sided\n\n\n\n\n\nset.seed(42)\nglobal_moran_perm(th_tour_knn5_all$revenue_tourist_all,\n                  th_tour_knn5_all$nb,\n                  th_tour_knn5_all$wt,\n                  nsim = 999)\n\n\n    Monte-Carlo simulation of Moran I\n\ndata:  x \nweights: listw  \nnumber of simulations + 1: 1000 \n\nstatistic = 0.35986, observed rank = 1000, p-value &lt; 2.2e-16\nalternative hypothesis: two.sided\n\n\n\nset.seed(42)\nglobal_moran_perm(th_tour_knn5_all$revenue_tourist_thai,\n                  th_tour_knn5_all$nb,\n                  th_tour_knn5_all$wt,\n                  nsim = 999)\n\n\n    Monte-Carlo simulation of Moran I\n\ndata:  x \nweights: listw  \nnumber of simulations + 1: 1000 \n\nstatistic = 0.38688, observed rank = 1000, p-value &lt; 2.2e-16\nalternative hypothesis: two.sided\n\n\n\nset.seed(42)\nglobal_moran_perm(th_tour_knn5_all$revenue_tourist_foreign,\n                  th_tour_knn5_all$nb,\n                  th_tour_knn5_all$wt,\n                  nsim = 999)\n\n\n    Monte-Carlo simulation of Moran I\n\ndata:  x \nweights: listw  \nnumber of simulations + 1: 1000 \n\nstatistic = 0.2972, observed rank = 1000, p-value &lt; 2.2e-16\nalternative hypothesis: two.sided\n\n\n\n\n\nset.seed(42)\nglobal_moran_perm(th_tour_knn5_all$ratio_tourist_stay,\n                  th_tour_knn5_all$nb,\n                  th_tour_knn5_all$wt,\n                  nsim = 999)\n\n\n    Monte-Carlo simulation of Moran I\n\ndata:  x \nweights: listw  \nnumber of simulations + 1: 1000 \n\nstatistic = 0.087707, observed rank = 931, p-value = 0.138\nalternative hypothesis: two.sided\n\n\n\n\n\nset.seed(42)\nglobal_moran_perm(th_tour_knn5_all$no_tourist_stay,\n                  th_tour_knn5_all$nb,\n                  th_tour_knn5_all$wt,\n                  nsim = 999)\n\n\n    Monte-Carlo simulation of Moran I\n\ndata:  x \nweights: listw  \nnumber of simulations + 1: 1000 \n\nstatistic = 0.027289, observed rank = 828, p-value = 0.344\nalternative hypothesis: two.sided\n\n\n\nset.seed(42)\nglobal_moran_perm(th_tour_knn5_all$tourist_stay_all,\n                  th_tour_knn5_all$nb,\n                  th_tour_knn5_all$wt,\n                  nsim = 999)\n\n\n    Monte-Carlo simulation of Moran I\n\ndata:  x \nweights: listw  \nnumber of simulations + 1: 1000 \n\nstatistic = 0.35405, observed rank = 1000, p-value &lt; 2.2e-16\nalternative hypothesis: two.sided\n\n\n\nset.seed(42)\nglobal_moran_perm(th_tour_knn5_all$revenue_tourist_stay,\n                  th_tour_knn5_all$nb,\n                  th_tour_knn5_all$wt,\n                  nsim = 999)\n\n\n    Monte-Carlo simulation of Moran I\n\ndata:  x \nweights: listw  \nnumber of simulations + 1: 1000 \n\nstatistic = 0.35298, observed rank = 1000, p-value &lt; 2.2e-16\nalternative hypothesis: two.sided\n\n\n\n\n\nThe p-value of Moran’s I test for basic attributes are &gt;0.05, therefore I am not able to reject the null hypothesis for those attributes.\nHowever, for the engineered features, the p-value is &lt;0.05, allowing me to reject the null hypothesis and conclude that there is sufficient evidence for the alternative hypothesis that there is spatial autocorrelation.\nTherefore, with those indicators in mind I can conclude that Thailand’s tourism economy is spatial dependent."
  },
  {
    "objectID": "Take-Home_Ex/Take-Home_Ex_02/Take-Home_Ex02.html#global-morans-i-across-space-and-time",
    "href": "Take-Home_Ex/Take-Home_Ex_02/Take-Home_Ex02.html#global-morans-i-across-space-and-time",
    "title": "Take Home Exercise 02",
    "section": "3.3 Global Moran’s I across Space and Time",
    "text": "3.3 Global Moran’s I across Space and Time\nTo determine whether the tourism indicators are independent of space and time, I will do the following:\n\nSet seed\nFilter the respective datasets by specific time (Year/Year and month)\nAppend the neighbour list created in 3.1\nCalculate the spatial weight matrix\nPerform Global Moran’s I for all KPIs\nConsolidate the results of the Global Moran’s I\n\nSince this is very repetitive, I’ll use a function to run this iteratively.\n\n# Function to run global_moran_perm iteratively\nrun_global_moran &lt;- function(data, date_col, value, kpi_list) {\n  # Set seed\n  set.seed(42)\n\n  # Filter sf dataframe\n  filtered_data &lt;- data %&gt;%\n    filter(!!sym(date_col) == value)\n  \n  # Append neighbour list and calculate spatial weight matrix\n  filtered_data &lt;- filtered_data %&gt;%\n    mutate(nb = nb_knn_5,\n           wt = st_weights(nb, style = \"W\"),\n           .before = 1)\n  \n  # Run global_moran_perm for each KPI in kpi_weight list\n  results &lt;- lapply(kpi_list, function(kpi) {\n    moran_output &lt;- global_moran_perm(filtered_data[[kpi]],\n                                      filtered_data$nb,\n                                      filtered_data$wt,\n                                      nsim = 999)\n    data.frame(\n      kpi = kpi,\n      statistic = mean(moran_output$res),\n      p_value = moran_output$p.value\n      )\n  })\n  \n  \n  # Combine both results\n  results_df &lt;- bind_rows(results)\n  \n  results_df &lt;- results_df %&gt;%\n    mutate(date = value,\n           .before = 1)\n  rownames(results_df) &lt;- NULL\n  return(results_df)\n}\n\n\n3.3.1 Across Year\nOn top of running the function a few additional steps are required:\n\nDefine kpi list\nDefine list of date to iterate\nConsolidate output\n\nThe output is also processed in a way that only replaces statistic values for those that are not significant (p_value &gt; 0.05), and pivot to a format for ease of visualization in a table.\n\n# List of KPIs\nkpi_list &lt;- c(\n  \"revenue_all\", \"revenue_thai\", \"revenue_foreign\", \"revenue_thai_prop\", \"revenue_foreign_prop\",\n  \"no_tourist_all\", \"no_tourist_thai\", \"no_tourist_foreign\", \"tourist_thai_prop\", \"tourist_foreign_prop\",\n  \"revenue_tourist_all\", \"revenue_tourist_thai\", \"revenue_tourist_foreign\", \n  \"ratio_tourist_stay\", \"no_tourist_stay\", \"revenue_tourist_stay\", \"tourist_stay_all\" \n)\n\n# List of years to iterate\nyear_list &lt;- unique(th_bound_tour_year$year)\n\n# Create output list\nall_results &lt;- list()\n\nfor (year_val in year_list) {\n  # Run function for each year\n  result &lt;- run_global_moran(th_bound_tour_year, \"year\", year_val, kpi_list)\n  \n  # Append results to list\n  all_results[[as.character(year_val)]] &lt;- result\n}\n\n# Combine all output\nglobal_moran_year &lt;- bind_rows(all_results)\n\n# Process output\nglobal_moran_year &lt;- global_moran_year %&gt;%\n  mutate(statistic = ifelse(p_value &lt;= 0.05, round(statistic,3), \"-\")) %&gt;%\n  select(date, kpi, statistic) %&gt;%\n  pivot_wider(names_from = date, values_from = statistic)\n\nResults are saved for ease of rendering\n\n# # Export output object and read it in to minimize rendering time\n# write_rds(global_moran_year, 'data/output/global_moran_year.rds') # Uncomment when running the Global Moran's I again\n\n# Read in output object\nglobal_moran_year &lt;- read_rds('data/output/global_moran_year.rds')\n\nNow that the data is properly formatted, we can view the table with datatable from DT package.\n\n# datatable(global_moran_year, rownames=FALSE, extensions=\"Scroller\", class=\"display\", width=\"100%\",\n#             options=list(initComplete = JS(\n#     \"function(settings, json) {\",\n#     \"$('body').css({'font-family': 'sans-serif'});\",\n#     \"}\"\n#   ), deferRender=TRUE, scrollY=300, scroller=TRUE))\n\ndatatable(global_moran_year, rownames=FALSE, width=\"100%\",\n            options=list(pageLength = 17, initComplete = JS(\n    \"function(settings, json) {\",\n    \"$(this.api().table().header()).css({'background-color': '#000', 'color': '#fff', 'font-family': 'sans-serif'});\",\n    \"$(this.api().table().body()).css({'font-family': 'sans-serif'});\",\n    \"}\"\n  )))\n\n\n\n\n\nAs expected, the basic indicators do not show any statistically significant spatial autocorrelation. Nevertheless, although the engineered indicators are generally statistically significant across the years, they are negative and very close to 0. This suggests that there is an extremely weak dispersal.\n\n\n3.3.2 Across Year and Month\nSimiliar to the processes in 3.3.1, I will need to:\n\nDefine list of dates to iterate\nConsolidate output\n\n\n# List of year and month to iterate\nyear_month_list &lt;- unique(th_bound_tour_year_month$date.y)\n\n# Create output list\nall_results &lt;- list()\n\nfor (year_month_val in year_month_list) {\n  # Run function for each year\n  result &lt;- run_global_moran(th_bound_tour_year_month, \"date.y\", year_month_val, kpi_list)\n  \n  # Append results to list\n  all_results[[as.character(year_month_val)]] &lt;- result\n}\n\n# Combine all output\nglobal_moran_year_month &lt;- bind_rows(all_results)\n\nAdditional data processing steps are required to format the data appropriately.\n\nCreate separate year and month columns\nReplaces statistic values for those that are not significant (p_value &gt; 0.05),\nPivot to a format for ease of visualization in a table.\n\n\n# Process output\nglobal_moran_year_month &lt;- global_moran_year_month %&gt;%\n  mutate(date = as.Date.numeric(date),\n         year = year(date),\n         month = format(date,\"%b\"),\n         statistic = ifelse(p_value &lt;= 0.05, round(statistic,3), \"-\")) %&gt;%\n  select(year, kpi, statistic, month) %&gt;%\n  pivot_wider(names_from = month, values_from = statistic)\n\nResults are saved for ease of rendering\n\n# # Export output object and read it in to minimize rendering time\n# write_rds(global_moran_year_month, 'data/output/global_moran_year_month.rds') # Uncomment when running the Global Moran's I again\n\n# Read in output object\nglobal_moran_year_month &lt;- read_rds('data/output/global_moran_year_month.rds')\n\ncrosstalk package is then used to provide an interactive way of filtering the table\n\nshared &lt;- SharedData$new(global_moran_year_month)\n\nbscols(widths = c(12, 12),\n  filter_select(\n  id = \"year\", label = \"Year\", \n  sharedData = shared, ~year\n  ),\n  \n  tags$div(style = 'width:100%; overflow-x: auto;', \n    \n  datatable(shared, rownames=FALSE,\n            extensions = c(\"FixedColumns\"),\n            options=list(pageLength = 17,\n                         fixedColumns = list(leftColumns = 2),\n                         initComplete = JS(\n    \"function(settings, json) {\",\n    \"$(this.api().table().header()).css({'background-color': '#000', 'color': '#fff', 'font-family': 'sans-serif', 'font-size': '12px'});\",\n    \"$(this.api().table().body()).css({'font-family': 'sans-serif', 'font-size': '12px'});\",\n    \"}\"\n    ))\n    )\n    \n    )\n)\n\n\n\n\n\nYear\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nComparing the output of Global Moran’s I across year and across year and month, they generally point to the same insight. The impact of covid can be somewhat observed as the key indicators are less statistically significant during 2020-2021.\nTherefore, I can conclude that some key indicators of Thailand tourism economy are spatial and spatio-temporal dependent."
  },
  {
    "objectID": "Take-Home_Ex/Take-Home_Ex_02/Take-Home_Ex02.html#preprocessing",
    "href": "Take-Home_Ex/Take-Home_Ex_02/Take-Home_Ex02.html#preprocessing",
    "title": "Take Home Exercise 02",
    "section": "5.1 Preprocessing",
    "text": "5.1 Preprocessing\nBefore proceeding for EHSA, a spacetime cube has to be created first. This will be done using spacetime from sfdep package.\n\n# Load geospatial data\nth_bound &lt;- st_read(dsn = \"data/tha_adm_rtsd_itos_20210121_shp/\", layer = \"tha_admbnda_adm1_rtsd_20220121\") %&gt;%\n  st_transform(crs = 32647)\n\nReading layer `tha_admbnda_adm1_rtsd_20220121' from data source \n  `C:\\Users\\Henry\\Desktop\\SMU Masters\\2024-2025 T1\\Geospatial Analytics & Applications\\Project\\GeospatialWebsite\\Take-Home_Ex\\Take-Home_Ex_02\\data\\tha_adm_rtsd_itos_20210121_shp' \n  using driver `ESRI Shapefile'\nSimple feature collection with 77 features and 16 fields\nGeometry type: MULTIPOLYGON\nDimension:     XY\nBounding box:  xmin: 97.34336 ymin: 5.613038 xmax: 105.637 ymax: 20.46507\nGeodetic CRS:  WGS 84\n\n# Load processed aspatial data\nth_aspatial &lt;- read_rds('data/processed/tbl_tourism_wide.rds') %&gt;%\n  mutate(date_int = year(date)*12 + month(date)) %&gt;%\n  rename(ADM1_EN = province_eng)\n\n# Create spacetime cube\nth_bound_spt &lt;- spacetime(th_aspatial, th_bound, .loc_col = \"ADM1_EN\", .time_col = \"date_int\")\n\n\n# Check spacetime cube\nis_spacetime_cube(th_bound_spt)\n\n[1] TRUE\n\n\n\n# Apply neighbour list and spatial weights\nth_bound_nb &lt;- th_bound_spt %&gt;%\n  activate(\"geometry\") %&gt;%\n  mutate(nb = include_self(nb_knn_5),\n         wt = st_weights(nb),\n         .before = 1) %&gt;%\n  set_nbs(\"nb\") %&gt;%\n  set_wts(\"wt\")"
  },
  {
    "objectID": "Take-Home_Ex/Take-Home_Ex_02/Take-Home_Ex02.html#mann-kendall",
    "href": "Take-Home_Ex/Take-Home_Ex_02/Take-Home_Ex02.html#mann-kendall",
    "title": "Take Home Exercise 02",
    "section": "5.2 Mann-Kendall",
    "text": "5.2 Mann-Kendall\n\n# Function to run Mann-Kendall iteratively\nmann_kendall_function &lt;- function(data, kpi) {\n  # Set seed\n  set.seed(42)\n  \n  # Compute Gi*\n  gi_stars &lt;- data %&gt;%\n    group_by(date) %&gt;%\n    mutate(gi_star = local_gstar_perm(!!sym(kpi), nb, wt)) %&gt;%\n    tidyr::unnest(gi_star)\n  \n  # Perform Mann-Kendall for each Province\n  ehsa &lt;- gi_stars %&gt;%\n    group_by(ADM1_EN) %&gt;%\n    summarise(mk = list(unclass(Kendall::MannKendall(gi_star)))) %&gt;%\n    tidyr::unnest_wider(mk)\n  \n  # Proces output\n  emerging &lt;- ehsa %&gt;%\n    arrange(sl, abs(tau))\n  \n  return(emerging)\n}\n\n\nRevenueRevenue/TouristOvernight Guest\n\n\n\n# Run for foreign revenue proportion\nemerging &lt;- mann_kendall_function(th_bound_nb, \"revenue_foreign_prop\")\n\n# Visualize output\ndatatable(emerging, rownames=FALSE, width=\"100%\",\n            options=list(initComplete = JS(\n    \"function(settings, json) {\",\n    \"$(this.api().table().header()).css({'background-color': '#000', 'color': '#fff', 'font-family': 'sans-serif'});\",\n    \"$(this.api().table().body()).css({'font-family': 'sans-serif'});\",\n    \"}\"\n  )))\n\n\n\n\n\n\n# Run for thai revenue proportion\nemerging &lt;- mann_kendall_function(th_bound_nb, \"revenue_thai_prop\")\n\n# Visualize output\ndatatable(emerging, rownames=FALSE, width=\"100%\",\n            options=list(initComplete = JS(\n    \"function(settings, json) {\",\n    \"$(this.api().table().header()).css({'background-color': '#000', 'color': '#fff', 'font-family': 'sans-serif'});\",\n    \"$(this.api().table().body()).css({'font-family': 'sans-serif'});\",\n    \"}\"\n  )))\n\n\n\n\n\n\n\n\n# Run for revenue/tourist\nemerging &lt;- mann_kendall_function(th_bound_nb, \"revenue_tourist_all\")\n\n# Visualize output\ndatatable(emerging, rownames=FALSE, width=\"100%\",\n            options=list(initComplete = JS(\n    \"function(settings, json) {\",\n    \"$(this.api().table().header()).css({'background-color': '#000', 'color': '#fff', 'font-family': 'sans-serif'});\",\n    \"$(this.api().table().body()).css({'font-family': 'sans-serif'});\",\n    \"}\"\n  )))\n\n\n\n\n\n\n# Run for revenue/tourist (Thai)\nemerging &lt;- mann_kendall_function(th_bound_nb, \"revenue_tourist_thai\")\n\n# Visualize output\ndatatable(emerging, rownames=FALSE, width=\"100%\",\n            options=list(initComplete = JS(\n    \"function(settings, json) {\",\n    \"$(this.api().table().header()).css({'background-color': '#000', 'color': '#fff', 'font-family': 'sans-serif'});\",\n    \"$(this.api().table().body()).css({'font-family': 'sans-serif'});\",\n    \"}\"\n  )))\n\n\n\n\n\n\n# Run for revenue/tourist (Foreign)\nemerging &lt;- mann_kendall_function(th_bound_nb, \"revenue_tourist_foreign\")\n\n# Visualize output\ndatatable(emerging, rownames=FALSE, width=\"100%\",\n            options=list(initComplete = JS(\n    \"function(settings, json) {\",\n    \"$(this.api().table().header()).css({'background-color': '#000', 'color': '#fff', 'font-family': 'sans-serif'});\",\n    \"$(this.api().table().body()).css({'font-family': 'sans-serif'});\",\n    \"}\"\n  )))\n\n\n\n\n\n\n\n\n# Run for revenue/overnight guest\nemerging &lt;- mann_kendall_function(th_bound_nb, \"revenue_tourist_stay\")\n\n# Visualize output\ndatatable(emerging, rownames=FALSE, width=\"100%\",\n            options=list(initComplete = JS(\n    \"function(settings, json) {\",\n    \"$(this.api().table().header()).css({'background-color': '#000', 'color': '#fff', 'font-family': 'sans-serif'});\",\n    \"$(this.api().table().body()).css({'font-family': 'sans-serif'});\",\n    \"}\"\n  )))\n\n\n\n\n\n\n# Run for proportion of tourist who stay overnight\nemerging &lt;- mann_kendall_function(th_bound_nb, \"tourist_stay_all\")\n\n# Visualize output\ndatatable(emerging, rownames=FALSE, width=\"100%\",\n            options=list(initComplete = JS(\n    \"function(settings, json) {\",\n    \"$(this.api().table().header()).css({'background-color': '#000', 'color': '#fff', 'font-family': 'sans-serif'});\",\n    \"$(this.api().table().body()).css({'font-family': 'sans-serif'});\",\n    \"}\"\n  )))\n\n\n\n\n\n\n\n\nInsert evaluation"
  },
  {
    "objectID": "Take-Home_Ex/Take-Home_Ex_02/Take-Home_Ex02.html#emerging-hotspot-analysis",
    "href": "Take-Home_Ex/Take-Home_Ex_02/Take-Home_Ex02.html#emerging-hotspot-analysis",
    "title": "Take Home Exercise 02",
    "section": "5.3 Emerging Hotspot Analysis",
    "text": "5.3 Emerging Hotspot Analysis\nSimilar to Mann-Kendall’s Test, a function will be used for visualizing the output across different key indicators. Inspiration for the visualization (using a color mapper and histogram within the tmap plot) was taken from 1 of the previous seniors.\nThe functions for visualizing EHSA is as follows:\n\nJoin the output to the original geospatial dataset\nLoad the color mapping\nFilter the merged output from step 1 to include only statistically significant results\nVisualize EHSA output with tmap (including a histogram of the category counts)\n\n\n# Category List \ncategory_list &lt;- c(\"consecutive coldspot\", \"consecutive hotspot\", \"new coldspot\", \"new hotspot\", \"no pattern detected\", \"intensifying coldspot\", \"intensifying hotspot\", \"oscilating coldspot\", \"oscilating hotspot\", \"persistent coldspot\", \"persistent hotspot\", \"sporadic coldspot\", \"sporadic hotspot\"\n)\n\n# Color List\ncolor_list &lt;- c(\"#83CBEB\", \"#FF6161\", \"#DCEAF7\", \"#FFB3B3\", \"#7F7F7F\", \"#4E95D9\", \"#FF0101\",\n  \"#D86ECB\", \"#F87306\", \"#104862\", \"#C00000\", \"#F2CFEE\", \"#FCB67C\")\n\n# Color Mapping Function\ncolor_mapping &lt;- function(category_list, color_list, mapping) {\n  color &lt;- rep(NA, length(mapping))\n  for (i in seq_along(mapping))\n  {\n    match_index &lt;- match(mapping[i], category_list)\n    if (!is.na(match_index)) {\n      color[i] &lt;- color_list[match_index]\n    }\n  }\n  return(color)\n}\n\n\n# Visualize ehsa\nehsa_fun &lt;- function(ehsa) {\n  \n  th_ehsa &lt;- th_bound %&gt;%\n    left_join(ehsa, by = join_by(ADM1_EN == location))\n  \n  \n  th_ehsa_sig &lt;- th_ehsa  %&gt;%\n    filter(p_value &lt; 0.05)\n  \n  color_mapping &lt;- color_mapping(category_list, color_list, sort(unique(th_ehsa_sig$classification)))\n  \n  \n  tm_shape(th_ehsa) +\n    tm_polygons() +\n    tm_borders(alpha = 0.5) +\n    tm_shape(th_ehsa_sig) +\n    tm_fill(\"classification\", title = \"Classification\", palette = color_mapping,\n            legend.hist = TRUE, legend.hist.z = 0.1) + \n    tm_borders(alpha = 0.4) +\n    tm_layout(main.title = \"Emerging Hotspots & Coldspots\",\n              main.title.position = \"center\",\n              main.title.size = 0.8,\n              main.title.fontface = \"bold\",\n              legend.title.size = 0.6,\n              legend.text.size = 0.6,\n              legend.hist.width = 0.5)\n}\n\n\nRevenueRevenue/TouristOvernight Guest\n\n\n\n# Set seed\nset.seed(42)\n\n# Run emerging hotspot analysis\nehsa &lt;- emerging_hotspot_analysis(x = th_bound_spt, .var = \"revenue_thai_prop\", k = 1, nsim = 99)\n\nResults are saved for ease of rendering\n\n# # Export output object and read it in to minimize rendering time\n# write_rds(ehsa, 'data/output/ehsa_revenue_thai_prop.rds') # Uncomment when running the ehsa again\n\n# Read in output object\nehsa &lt;- read_rds('data/output/ehsa_revenue_thai_prop.rds')\n\n\n# Visualize for Thai Revenue Proportion\nehsa_fun(ehsa)\n\n\n\n\n\n\n\n\n\n# Set seed\nset.seed(42)\n\n# Run emerging hotspot analysis\nehsa &lt;- emerging_hotspot_analysis(x = th_bound_spt, .var = \"revenue_foreign_prop\", k = 1, nsim = 99)\n\nResults are saved for ease of rendering\n\n# # Export output object and read it in to minimize rendering time\n# write_rds(ehsa, 'data/output/ehsa_revenue_foreign_prop.rds') # Uncomment when running the ehsa again\n\n# Read in output object\nehsa &lt;- read_rds('data/output/ehsa_revenue_foreign_prop.rds')\n\n\n# Visualize for Foreign Revenue Proportion\nehsa_fun(ehsa)\n\n\n\n\n\n\n\n\n\n\n\n# Set seed\nset.seed(42)\n\n# Run emerging hotspot analysis\nehsa &lt;- emerging_hotspot_analysis(x = th_bound_spt, .var = \"revenue_tourist_all\", k = 1, nsim = 99)\n\nResults are saved for ease of rendering\n\n# # Export output object and read it in to minimize rendering time\n# write_rds(ehsa, 'data/output/ehsa_revenue_tourist_all.rds') # Uncomment when running the ehsa again\n\n# Read in output object\nehsa &lt;- read_rds('data/output/ehsa_revenue_tourist_all.rds')\n\n\n# Visualize for Revenue/Tourist\nehsa_fun(ehsa)\n\n\n\n\n\n\n\n\n\n# Set seed\nset.seed(42)\n\n# Run emerging hotspot analysis\nehsa &lt;- emerging_hotspot_analysis(x = th_bound_spt, .var = \"revenue_tourist_thai\", k = 1, nsim = 99)\n\nResults are saved for ease of rendering\n\n# # Export output object and read it in to minimize rendering time\n# write_rds(ehsa, 'data/output/ehsa_revenue_tourist_thai.rds') # Uncomment when running the ehsa again\n\n# Read in output object\nehsa &lt;- read_rds('data/output/ehsa_revenue_tourist_thai.rds')\n\n\n# Visualize for Revenue/Tourist (Thai)\nehsa_fun(ehsa)\n\n\n\n\n\n\n\n\n\n# Set seed\nset.seed(42)\n\n# Run emerging hotspot analysis\nehsa &lt;- emerging_hotspot_analysis(x = th_bound_spt, .var = \"revenue_tourist_foreign\", k = 1, nsim = 99)\n\nResults are saved for ease of rendering\n\n# # Export output object and read it in to minimize rendering time\n# write_rds(ehsa, 'data/output/ehsa_revenue_tourist_foreign.rds') # Uncomment when running the ehsa again\n\n# Read in output object\nehsa &lt;- read_rds('data/output/ehsa_revenue_tourist_foreign.rds')\n\n\n# Visualize for Revenue/Tourist (Foreign)\nehsa_fun(ehsa)\n\n\n\n\n\n\n\n\n\n\n\n# Set seed\nset.seed(42)\n\n# Run emerging hotspot analysis\nehsa &lt;- emerging_hotspot_analysis(x = th_bound_spt, .var = \"revenue_tourist_stay\", k = 1, nsim = 99)\n\nResults are saved for ease of rendering\n\n# # Export output object and read it in to minimize rendering time\n# write_rds(ehsa, 'data/output/ehsa_revenue_tourist_stay.rds') # Uncomment when running the ehsa again\n\n# Read in output object\nehsa &lt;- read_rds('data/output/ehsa_revenue_tourist_stay.rds')\n\n\n# Visualize for Revenue/Overnight Guest\nehsa_fun(ehsa)\n\n\n\n\n\n\n\n\n\n# Set seed\nset.seed(42)\n\n# Run emerging hotspot analysis\nehsa &lt;- emerging_hotspot_analysis(x = th_bound_spt, .var = \"tourist_stay_all\", k = 1, nsim = 99)\n\nResults are saved for ease of rendering\n\n# # Export output object and read it in to minimize rendering time\n# write_rds(ehsa, 'data/output/ehsa_tourist_stay_all.rds') # Uncomment when running the ehsa again\n\n# Read in output object\nehsa &lt;- read_rds('data/output/ehsa_tourist_stay_all.rds')\n\n\n# Visualize for Proportion fo Tourists who stay overnight\nehsa_fun(ehsa)\n\n\n\n\n\n\n\n\n\n\n\nSimilar to previous analysis, the result of Thai revenue proportion is a mirror of Foreign revenue proportion. A possible impact of Covid can be inferred from the large volume of sporadic coldspots for foreign revenue proportion and revenue per tourist.\nAlthough majority of provinces are sporadic coldspot for revenue per tourist (foreign), there are a sizable number of provinces with that are sporadic hostpot, suggesting a potential rise in appeal of those provinces to foreign tourists.\nLooking at the overnight guests key indicators, there are a few intensifying coldspots (Chiang Rai and Phang Nga), indicating that the intensity of the cold spot has a statistically significant increase over time. This could be an impact of covid causing lesser tourists to decide staying overnight in those areas."
  },
  {
    "objectID": "Take-Home_Ex/Take-Home_Ex_02/Take-Home_Ex02.html#power-bi-visualization",
    "href": "Take-Home_Ex/Take-Home_Ex_02/Take-Home_Ex02.html#power-bi-visualization",
    "title": "Take Home Exercise 02",
    "section": "2.2 Power BI Visualization",
    "text": "2.2 Power BI Visualization\nPress play to see how the values change across time!\n\n\n\n\nAlthought Bangkok accounts for the overwhelming proportion of revenue and tourist count, other provinces can also be viewed to be important to Thailand’s tourism economy. Some provinces are largely skewed towards foreign tourists (i.e Bangkok Metropolitan Region, provinces surrounding Phuket such as Phang Nga and Surat Thani)\nIn terms of spending per tourist, less prominent provinces (i.e Songkhla) may place within the top provinces, showing the potential for larger provinces to improve their tourist offerings.\nFinally, by comparing the tourist proportion (foreign vs Thai) against proportion of tourists who stay over, it can be interesting to note the different tourism dynamics for each province.\n\nPhuket - revenue largely driven by foreign tourists (88%), high proportion of tourists who stay over (65%)\nPhang Nga - province near Phuket (revenue also driven by foreign tourists 80%) but low proportion of tourists who stay over (29%), suggesting it is a stopover visit as foreign tourists center their travel plans around Phuket instead\nBangkok - revenue somewhat driven by Foreign tourists (60%), with only 50% of tourists who stay over, suggesting it is a place where people travel to as a quick getaway (usually a daytrip)\nMa Hong Son - revenue largely driven by Thai tourists (78%), high proportion of tourists who stay over (90%), suggesting that it is a place where locals go to for an extended holiday given its location (at the edges of Thailand)."
  },
  {
    "objectID": "Take-Home_Ex/Take-Home_Ex_02/Take-Home_Ex02.html#local-morans-i-across-space",
    "href": "Take-Home_Ex/Take-Home_Ex_02/Take-Home_Ex02.html#local-morans-i-across-space",
    "title": "Take Home Exercise 02",
    "section": "4.1 Local Moran’s I across Space",
    "text": "4.1 Local Moran’s I across Space\nThe main tourism key indicators are revenue proportion (Thai vs Foreign), tourist proportion (Thai vs Foreign), Revenue/Tourist (all tourist, Thai, Foreign), and Overnight Guest (revenue/overnight guest, proportion of tourists who stayed overnight)\nA similar process will be conducted iteratively for each key indicator 1. Set seed 2. Run Local Moran’s I 3. Visualize Local Moran’s I statistics and p-value from Step 2 4. Filter results by p-value &lt;= 0.05 5. Visualize LISA chart from Step 4\n\nRevenueTouristRevenue/TouristOvernight Guest\n\n\n\n# Set seed\nset.seed(24)\n\n# Thai Revenue Proportion\nlisa_th &lt;- th_tour_knn5_all %&gt;%\n  mutate(local_moran = local_moran(\n    revenue_thai_prop, nb, wt, nsim = 999),\n    .before = 1) %&gt;%\n  unnest(local_moran)\n\n# Foreign Revenue Proportion\nlisa_fr &lt;- th_tour_knn5_all %&gt;%\n  mutate(local_moran = local_moran(\n    revenue_foreign_prop, nb, wt, nsim = 999),\n    .before = 1) %&gt;%\n  unnest(local_moran)\n\n# Visualize statistics and p-value plots for all key indicators together \ntmap_mode(\"plot\")\nmap1 &lt;- tm_shape(lisa_th) +\n  tm_fill(\"ii\") + \n  tm_borders(alpha = 0.5) +\n  tm_view(set.zoom.limits = c(6,8)) +\n  tm_layout(main.title = \"local Moran's I of Thai Revenue Proportion\",\n            main.title.size = 0.8)\n\nmap2 &lt;- tm_shape(lisa_th) +\n  tm_fill(\"p_ii_sim\",\n          breaks = c(0, 0.001, 0.01, 0.05, 1),\n              labels = c(\"0.001\", \"0.01\", \"0.05\", \"Not sig\")) + \n  tm_borders(alpha = 0.5) +\n  tm_layout(main.title = \"p-value of local Moran's I (Foreign Revenue Proportion)\",\n            main.title.size = 0.8)\n\nmap3 &lt;- tm_shape(lisa_fr) +\n  tm_fill(\"ii\") + \n  tm_borders(alpha = 0.5) +\n  tm_view(set.zoom.limits = c(6,8)) +\n  tm_layout(main.title = \"local Moran's I of Foreign Revenue Proportion\",\n            main.title.size = 0.8)\n\nmap4 &lt;- tm_shape(lisa_fr) +\n  tm_fill(\"p_ii_sim\",\n          breaks = c(0, 0.001, 0.01, 0.05, 1),\n              labels = c(\"0.001\", \"0.01\", \"0.05\", \"Not sig\")) + \n  tm_borders(alpha = 0.5) +\n  tm_layout(main.title = \"p-value of local Moran's I (Foreign Revenue Proportion)\",\n            main.title.size = 0.8)\n\n\ntmap_arrange(map1, map2, map3, map4, ncol = 2, nrow = 2)\n\n\n\n\n\n\n\n\n\n# Filter output for only those that are statistically significant\nlisa_th_sig &lt;- lisa_th  %&gt;%\n  filter(p_ii_sim &lt; 0.05)\nlisa_fr_sig &lt;- lisa_fr  %&gt;%\n  filter(p_ii_sim &lt; 0.05)\n\n# Visualize LISA maps for both Key indicators side by side\ntmap_mode(\"plot\")\nmap1 &lt;- tm_shape(lisa_th) +\n  tm_polygons() +\n  tm_borders(alpha = 0.5) +\n  tm_shape(lisa_th_sig) +\n  tm_fill(\"mean\") + \n  tm_borders(alpha = 0.4) + \n  tm_layout(main.title = \"LISA Map of Thai Revenue Proportion\",\n          main.title.size = 0.8)\n\nmap2 &lt;- tm_shape(lisa_fr) +\n  tm_polygons() +\n  tm_borders(alpha = 0.5) +\n  tm_shape(lisa_fr_sig) +\n  tm_fill(\"mean\") + \n  tm_borders(alpha = 0.4) + \n  tm_layout(main.title = \"LISA Map of Foreign Revenue Proportion\",\n          main.title.size = 0.8)\n\ntmap_arrange(map1, map2, ncol = 2)\n\n\n\n\n\n\n\n\n\n\n\n# Set seed\nset.seed(24)\n\n# Thai Tourist Proportion\nlisa_th &lt;- th_tour_knn5_all %&gt;%\n  mutate(local_moran = local_moran(\n    tourist_thai_prop, nb, wt, nsim = 999),\n    .before = 1) %&gt;%\n  unnest(local_moran)\n\n# Foreign Tourist Proportion\nlisa_fr &lt;- th_tour_knn5_all %&gt;%\n  mutate(local_moran = local_moran(\n    tourist_foreign_prop, nb, wt, nsim = 999),\n    .before = 1) %&gt;%\n  unnest(local_moran)\n\n# Visualize statistics and p-value plots for both key indicators together \ntmap_mode(\"plot\")\nmap1 &lt;- tm_shape(lisa_th) +\n  tm_fill(\"ii\") + \n  tm_borders(alpha = 0.5) +\n  tm_view(set.zoom.limits = c(6,8)) +\n  tm_layout(main.title = \"local Moran's I of Thai Tourist Proportion\",\n            main.title.size = 0.8)\n\nmap2 &lt;- tm_shape(lisa_th) +\n  tm_fill(\"p_ii_sim\",\n          breaks = c(0, 0.001, 0.01, 0.05, 1),\n              labels = c(\"0.001\", \"0.01\", \"0.05\", \"Not sig\")) + \n  tm_borders(alpha = 0.5) +\n  tm_layout(main.title = \"p-value of local Moran's I (Foreign Tourist Proportion)\",\n            main.title.size = 0.8)\n\nmap3 &lt;- tm_shape(lisa_fr) +\n  tm_fill(\"ii\") + \n  tm_borders(alpha = 0.5) +\n  tm_view(set.zoom.limits = c(6,8)) +\n  tm_layout(main.title = \"local Moran's I of Foreign Tourist Proportion\",\n            main.title.size = 0.8)\n\nmap4 &lt;- tm_shape(lisa_fr) +\n  tm_fill(\"p_ii_sim\",\n          breaks = c(0, 0.001, 0.01, 0.05, 1),\n              labels = c(\"0.001\", \"0.01\", \"0.05\", \"Not sig\")) + \n  tm_borders(alpha = 0.5) +\n  tm_layout(main.title = \"p-value of local Moran's I (Foreign Tourist Proportion)\",\n            main.title.size = 0.8)\n\n\ntmap_arrange(map1, map2, map3, map4, ncol = 2, nrow = 2)\n\n\n\n\n\n\n\n\n\n# Filter output for only those that are statistically significant\nlisa_th_sig &lt;- lisa_th  %&gt;%\n  filter(p_ii_sim &lt; 0.05)\nlisa_fr_sig &lt;- lisa_fr  %&gt;%\n  filter(p_ii_sim &lt; 0.05)\n\n# Visualize LISA maps for both Key indicators side by side\ntmap_mode(\"plot\")\nmap1 &lt;- tm_shape(lisa_th) +\n  tm_polygons() +\n  tm_borders(alpha = 0.5) +\n  tm_shape(lisa_th_sig) +\n  tm_fill(\"mean\") + \n  tm_borders(alpha = 0.4) + \n  tm_layout(main.title = \"LISA Map of Thai Tourist Proportion\",\n          main.title.size = 0.8)\n\nmap2 &lt;- tm_shape(lisa_fr) +\n  tm_polygons() +\n  tm_borders(alpha = 0.5) +\n  tm_shape(lisa_fr_sig) +\n  tm_fill(\"mean\") + \n  tm_borders(alpha = 0.4) + \n  tm_layout(main.title = \"LISA Map of Foreign Tourist Proportion\",\n          main.title.size = 0.8)\n\ntmap_arrange(map1, map2, ncol = 2)\n\n\n\n\n\n\n\n\n\n\n\n# Set seed\nset.seed(24)\n\n# Revenue/Tourist\nlisa_all &lt;- th_tour_knn5_all %&gt;%\n  mutate(local_moran = local_moran(\n    revenue_tourist_all, nb, wt, nsim = 999),\n    .before = 1) %&gt;%\n  unnest(local_moran)\n\n# Thai Revenue/Thai Tourist\nlisa_th &lt;- th_tour_knn5_all %&gt;%\n  mutate(local_moran = local_moran(\n    revenue_tourist_thai, nb, wt, nsim = 999),\n    .before = 1) %&gt;%\n  unnest(local_moran)\n\n# Foreign Revenue/Foreign Tourist\nlisa_fr &lt;- th_tour_knn5_all %&gt;%\n  mutate(local_moran = local_moran(\n    revenue_tourist_foreign, nb, wt, nsim = 999),\n    .before = 1) %&gt;%\n  unnest(local_moran)\n\n# Visualize statistics and p-value plots for all key indicators together \ntmap_mode(\"plot\")\nmap1 &lt;- tm_shape(lisa_all) +\n  tm_fill(\"ii\") + \n  tm_borders(alpha = 0.5) +\n  tm_view(set.zoom.limits = c(6,8)) +\n  tm_layout(main.title = \"local Moran's I of Revenue/Tourist\",\n            main.title.size = 0.8)\n\nmap2 &lt;- tm_shape(lisa_all) +\n  tm_fill(\"p_ii_sim\",\n          breaks = c(0, 0.001, 0.01, 0.05, 1),\n              labels = c(\"0.001\", \"0.01\", \"0.05\", \"Not sig\")) + \n  tm_borders(alpha = 0.5) +\n  tm_layout(main.title = \"p-value of local Moran's I (Revenue/Tourist)\",\n            main.title.size = 0.8)\n\nmap3 &lt;- tm_shape(lisa_th) +\n  tm_fill(\"ii\") + \n  tm_borders(alpha = 0.5) +\n  tm_view(set.zoom.limits = c(6,8)) +\n  tm_layout(main.title = \"local Moran's I of Revenue/Tourist (Thai)\",\n            main.title.size = 0.8)\n\nmap4 &lt;- tm_shape(lisa_th) +\n  tm_fill(\"p_ii_sim\",\n          breaks = c(0, 0.001, 0.01, 0.05, 1),\n              labels = c(\"0.001\", \"0.01\", \"0.05\", \"Not sig\")) + \n  tm_borders(alpha = 0.5) +\n  tm_layout(main.title = \"p-value of local Moran's I (Revenue/Tourist (Thai))\",\n            main.title.size = 0.8)\n\nmap5 &lt;- tm_shape(lisa_fr) +\n  tm_fill(\"ii\") + \n  tm_borders(alpha = 0.5) +\n  tm_view(set.zoom.limits = c(6,8)) +\n  tm_layout(main.title = \"local Moran's I of Revenue/Tourist (Foreign)\",\n            main.title.size = 0.8)\n\nmap6 &lt;- tm_shape(lisa_fr) +\n  tm_fill(\"p_ii_sim\",\n          breaks = c(0, 0.001, 0.01, 0.05, 1),\n              labels = c(\"0.001\", \"0.01\", \"0.05\", \"Not sig\")) + \n  tm_borders(alpha = 0.5) +\n  tm_layout(main.title = \"p-value of local Moran's I (Revenue/Tourist (Foreign))\",\n            main.title.size = 0.8)\n\n\ntmap_arrange(map1, map2, map3, map4, map5, map6, ncol = 2, nrow = 3)\n\n\n\n\n\n\n\n\n\n# Filter output for only those that are statistically significant\nlisa_all_sig &lt;- lisa_all  %&gt;%\n  filter(p_ii_sim &lt; 0.05)\nlisa_th_sig &lt;- lisa_th  %&gt;%\n  filter(p_ii_sim &lt; 0.05)\nlisa_fr_sig &lt;- lisa_fr  %&gt;%\n  filter(p_ii_sim &lt; 0.05)\n\n# Visualize LISA maps for all Key indicators side by side\ntmap_mode(\"plot\")\nmap1 &lt;- tm_shape(lisa_all) +\n  tm_polygons() +\n  tm_borders(alpha = 0.5) +\n  tm_shape(lisa_all_sig) +\n  tm_fill(\"mean\") + \n  tm_borders(alpha = 0.4) + \n  tm_layout(main.title = \"LISA Map of Revenue/Tourist\",\n          main.title.size = 0.8)\n\nmap2 &lt;- tm_shape(lisa_th) +\n  tm_polygons() +\n  tm_borders(alpha = 0.5) +\n  tm_shape(lisa_th_sig) +\n  tm_fill(\"mean\") + \n  tm_borders(alpha = 0.4) + \n  tm_layout(main.title = \"LISA Map of Revenue/Tourist (Thai)\",\n          main.title.size = 0.8)\n\nmap3 &lt;- tm_shape(lisa_fr) +\n  tm_polygons() +\n  tm_borders(alpha = 0.5) +\n  tm_shape(lisa_fr_sig) +\n  tm_fill(\"mean\") + \n  tm_borders(alpha = 0.4) + \n  tm_layout(main.title = \"LISA Map of Revenue/Tourist (Foreign)\",\n          main.title.size = 0.8)\n\ntmap_arrange(map1, map2, map3, ncol = 3)\n\n\n\n\n\n\n\n\n\n\n\n# Set seed\nset.seed(24)\n\n# Revenue/Overnight Guest\nlisa_og &lt;- th_tour_knn5_all %&gt;%\n  mutate(local_moran = local_moran(\n    revenue_tourist_stay, nb, wt, nsim = 999),\n    .before = 1) %&gt;%\n  unnest(local_moran)\n\n# Proportion of Tourist who stay overnight\nlisa_ogp &lt;- th_tour_knn5_all %&gt;%\n  mutate(local_moran = local_moran(\n    tourist_stay_all, nb, wt, nsim = 999),\n    .before = 1) %&gt;%\n  unnest(local_moran)\n\n# Visualize statistics and p-value plots for both key indicators together \ntmap_mode(\"plot\")\nmap1 &lt;- tm_shape(lisa_og) +\n  tm_fill(\"ii\") + \n  tm_borders(alpha = 0.5) +\n  tm_view(set.zoom.limits = c(6,8)) +\n  tm_layout(main.title = \"local Moran's I of Revenue/Overnight Guest\",\n            main.title.size = 0.8)\n\nmap2 &lt;- tm_shape(lisa_og) +\n  tm_fill(\"p_ii_sim\",\n          breaks = c(0, 0.001, 0.01, 0.05, 1),\n              labels = c(\"0.001\", \"0.01\", \"0.05\", \"Not sig\")) + \n  tm_borders(alpha = 0.5) +\n  tm_layout(main.title = \"p-value of local Moran's I (Revenue/Overnight Guest)\",\n            main.title.size = 0.8)\n\nmap3 &lt;- tm_shape(lisa_ogp) +\n  tm_fill(\"ii\") + \n  tm_borders(alpha = 0.5) +\n  tm_view(set.zoom.limits = c(6,8)) +\n  tm_layout(main.title = \"local Moran's I of Overnight Tourist Proportion \",\n            main.title.size = 0.8)\n\nmap4 &lt;- tm_shape(lisa_ogp) +\n  tm_fill(\"p_ii_sim\",\n          breaks = c(0, 0.001, 0.01, 0.05, 1),\n              labels = c(\"0.001\", \"0.01\", \"0.05\", \"Not sig\")) + \n  tm_borders(alpha = 0.5) +\n  tm_layout(main.title = \"p-value of local Moran's I (Overnight Tourist Proportion)\",\n            main.title.size = 0.8)\n\n\ntmap_arrange(map1, map2, map3, map4, ncol = 2, nrow = 2)\n\n\n\n\n\n\n\n\n\n# Filter output for only those that are statistically significant\nlisa_og_sig &lt;- lisa_og  %&gt;%\n  filter(p_ii_sim &lt; 0.05)\nlisa_ogp_sig &lt;- lisa_ogp  %&gt;%\n  filter(p_ii_sim &lt; 0.05)\n\n# Visualize LISA maps for both Key indicators side by side\ntmap_mode(\"plot\")\nmap1 &lt;- tm_shape(lisa_og) +\n  tm_polygons() +\n  tm_borders(alpha = 0.5) +\n  tm_shape(lisa_og_sig) +\n  tm_fill(\"mean\") + \n  tm_borders(alpha = 0.4) + \n  tm_layout(main.title = \"LISA Map of Revenue/Overnight Guest\",\n          main.title.size = 0.8)\n\nmap2 &lt;- tm_shape(lisa_ogp) +\n  tm_polygons() +\n  tm_borders(alpha = 0.5) +\n  tm_shape(lisa_ogp_sig) +\n  tm_fill(\"mean\") + \n  tm_borders(alpha = 0.4) + \n  tm_layout(main.title = \"LISA Map of Overnight Tourist Proportion\",\n          main.title.size = 0.8)\n\ntmap_arrange(map1, map2, ncol = 2)\n\n\n\n\n\n\n\n\n\n\n\nUnsurprisingly the plots for Revenue and Tourist are very similar. Nevertheless, they serve as a good indictor to show regions that are largely driven by foreign tourism (“High-High” on foreign proportion - near Phuket) and regions that are largely driven by domestic tourism (“High-High” on Thai proportion - near Nakhon Sawan).\nThe revenue spent per tourist highlights Bangkok as an outlier (“High-High”) for both foreign and Thai tourists, signifying its status as a key tourist destination. Comparing the expenditure per Tourist for both foreign and Thai tourists, Khon Kaen stands out (“High-Low”) for Thai tourist, suggesting a local tourist destination. Phatthalung stands out as “Low-High”, suggesting that it is not as attractive to foreign tourists.\nLooking at overnight guest indicators, while the revenue/overnight guests presents similar clusters as those in revenue/tourist, proportion of guests staying overnight highlights other insights. The “Low-High” of Phang Nga affirms the EDA hypothesis of tourists behaviour - wherein they are likely to center their trip around Phuket and making day trips to provinces around. Bangkok showing up as “High-Low” further cements its status as a main tourist destination."
  },
  {
    "objectID": "Take-Home_Ex/Take-Home_Ex_02/Take-Home_Ex02.html#local-morans-i-across-space-and-time-year",
    "href": "Take-Home_Ex/Take-Home_Ex_02/Take-Home_Ex02.html#local-morans-i-across-space-and-time-year",
    "title": "Take Home Exercise 02",
    "section": "4.2 Local Moran’s I across Space and Time (Year)",
    "text": "4.2 Local Moran’s I across Space and Time (Year)\nGiven the iterative process and charts, I created a function to generate the LISA chart. Using another function that iterates across different years, I can then visualize the changes with tmap_animation. While the Local Moran’s I and p-value charts are not shown, it is believed that the main takeaway of the Local Moran’s I is in the LISA chart (in order to identify clusters and outliers).\n\n# Function to generate LISA maps\nlocal_moran_space &lt;- function(data, col, value, kpi) {\n  # Set Seed\n  set.seed(42)\n  \n  # Filter sf dataframe\n  filtered_data &lt;- data %&gt;%\n    filter(!!sym(col) == value)\n  \n  # Append neighbour list and calculate spatial weight matrix\n  filtered_data &lt;- filtered_data %&gt;%\n    mutate(nb = nb_knn_5,\n           wt = st_weights(nb, style = \"W\"),\n           wt_inv = st_inverse_distance(include_self(nb), geometry = coords_cent, \n                                        scale = 100, alpha = 1),\n           local_moran = local_moran(!!sym(kpi), nb, wt, nsim = 999),\n           .before = 1) %&gt;%\n    unnest(local_moran)\n  \n  # Filter out non-significant results\n  filter_sig &lt;- filtered_data  %&gt;%\n    filter(p_ii_sim &lt; 0.05)\n  \n  # Visualize clusters with LISA map\n  map1 &lt;- tm_shape(filtered_data) +\n    tm_polygons() +\n    tm_borders(alpha = 0.5) +\n    tm_shape(filter_sig) +\n    tm_fill(\"mean\") + \n    tm_borders(alpha = 0.4) + \n    tm_layout(main.title = paste0(\"LISA Map of \",kpi,\" (\",value, \")\"),\n              main.title.size = 0.4,\n              legend.text.size = 0.3,\n              legend.title.size = 0.4)\n\n  return(map3)\n}\n\n\nRevenueRevenue/TouristOvernight Guest\n\n\nFirst, the animated chart for “revenue_thai_prop” has to be created.\n\nall_local_moran_maps &lt;- lapply(year_list, function(value) {\n  # Call the local_moran_space function for each value in the list\n  map_result &lt;- local_moran_space(data = th_bound_tour_year, \n                                  col = \"year\", \n                                  value = value, \n                                  kpi = \"revenue_thai_prop\")\n  \n  return(map_result)  # Store the resulting map\n})\n\ntmap_animation(all_local_moran_maps, filename = \"images/animated_revenue_thai_prop_year.gif\",\n               width = 1000, height = 1000, dpi = 300, delay = 50)\n\nNow I can view the LISA chart across each year.\n\n# Visualize gif\nknitr::include_graphics(\"images/animated_revenue_thai_prop_year.gif\")\n\n\n\n\n\n\n\n\nNow i do the same for “revenue_foreign_prop”.\n\nall_local_moran_maps &lt;- lapply(year_list, function(value) {\n  # Call the local_moran_space function for each value in the list\n  map_result &lt;- local_moran_space(data = th_bound_tour_year, \n                                  col = \"year\", \n                                  value = value, \n                                  kpi = \"revenue_foreign_prop\")\n  \n  return(map_result)  # Store the resulting map\n})\n\ntmap_animation(all_local_moran_maps, filename = \"images/animated_revenue_foreign_prop_year.gif\",\n               width = 1000, height = 1000, dpi = 300, delay = 50)\n\nAnd now I can visualize the gif.\n\n# Visualize gif\nknitr::include_graphics(\"images/animated_revenue_foreign_prop_year.gif\")\n\n\n\n\n\n\n\n\n\n\nIn Revenue/Tourist, I am interested in “revenue_tourist_all”, “revenue_tourist_thai” and “revenue_tourist_foreign”. Lets create and view the gif for each of them.\n\nall_local_moran_maps &lt;- lapply(year_list, function(value) {\n  # Call the local_moran_space function for each value in the list\n  map_result &lt;- local_moran_space(data = th_bound_tour_year, \n                                  col = \"year\", \n                                  value = value, \n                                  kpi = \"revenue_tourist_all\")\n  \n  return(map_result)  # Store the resulting map\n})\n\ntmap_animation(all_local_moran_maps, filename = \"images/animated_revenue_tourist_all_year.gif\",\n               width = 1000, height = 1000, dpi = 300, delay = 50)\n\n\n# Visualize gif\nknitr::include_graphics(\"images/animated_revenue_tourist_all_year.gif\")\n\n\n\n\n\n\n\n\n\nall_local_moran_maps &lt;- lapply(year_list, function(value) {\n  # Call the local_moran_space function for each value in the list\n  map_result &lt;- local_moran_space(data = th_bound_tour_year, \n                                  col = \"year\", \n                                  value = value, \n                                  kpi = \"revenue_tourist_thai\")\n  \n  return(map_result)  # Store the resulting map\n})\n\ntmap_animation(all_local_moran_maps, filename = \"images/animated_revenue_tourist_thai_year.gif\",\n               width = 1000, height = 1000, dpi = 300, delay = 50)\n\n\n# Visualize gif\nknitr::include_graphics(\"images/animated_revenue_tourist_thai_year.gif\")\n\n\n\n\n\n\n\n\n\nall_local_moran_maps &lt;- lapply(year_list, function(value) {\n  # Call the local_moran_space function for each value in the list\n  map_result &lt;- local_moran_space(data = th_bound_tour_year, \n                                  col = \"year\", \n                                  value = value, \n                                  kpi = \"revenue_tourist_foreign\")\n  \n  return(map_result)  # Store the resulting map\n})\n\ntmap_animation(all_local_moran_maps, filename = \"images/animated_revenue_tourist_foreign_year.gif\",\n               width = 1000, height = 1000, dpi = 300, delay = 50)\n\n\n# Visualize gif\nknitr::include_graphics(\"images/animated_revenue_tourist_foreign_year.gif\")\n\n\n\n\n\n\n\n\n\n\nFinally, for overnight guest key indicators, I’m interested in how the LISA chart will act for “revenue_tourist_stay” and “tourist_stay_all”.\n\nall_local_moran_maps &lt;- lapply(year_list, function(value) {\n  # Call the local_moran_space function for each value in the list\n  map_result &lt;- local_moran_space(data = th_bound_tour_year, \n                                  col = \"year\", \n                                  value = value, \n                                  kpi = \"revenue_tourist_stay\")\n  \n  return(map_result)  # Store the resulting map\n})\n\ntmap_animation(all_local_moran_maps, filename = \"images/animated_revenue_tourist_stay_year.gif\",\n               width = 1000, height = 1000, dpi = 300, delay = 50)\n\n\n# Visualize gif\nknitr::include_graphics(\"images/animated_revenue_tourist_stay_year.gif\")\n\n\n\n\n\n\n\n\n\nall_local_moran_maps &lt;- lapply(year_list, function(value) {\n  # Call the local_moran_space function for each value in the list\n  map_result &lt;- local_moran_space(data = th_bound_tour_year, \n                                  col = \"year\", \n                                  value = value, \n                                  kpi = \"tourist_stay_all\")\n  \n  return(map_result)  # Store the resulting map\n})\n\ntmap_animation(all_local_moran_maps, filename = \"images/animated_tourist_stay_all_year.gif\",\n               width = 1000, height = 1000, dpi = 300, delay = 50)\n\n\n# Visualize gif\nknitr::include_graphics(\"images/animated_tourist_stay_all_year.gif\")\n\n\n\n\n\n\n\n\n\n\n\nWhen looking at the revenue proportion for Foreign tourists, I can see a group of provinces surrounding Phuket (exhibiting “high-high” behaviour across the years. They in turn are then surrounded by provinces exhibiting “low-high” for 2019-2020. In 2022, Krabi changed from “high-high” to “low-low”, suggesting the impact of Covid on how foreign tourists not travelling less further from Phuket. Provinces intersperse around the middle of Thailand are “low-low” throughout the years, highlighting how tourism is driven by domestic travel in those provinces.\nLooking at revenue per tourists, Bangkok is highlighted as “High-low” from 2019-2022. Zooming into foreign revenue per foreign tourist, Kachanaburi (border province) shows up as “High-low” during 2020. This could be because of Covid, more revenue generated from foreign tourists travelling across the border. A sizable number of provinces around the middle of Thailand are “low-low” throughout the years, for both foreign and Thai tourists, suggesting that either tourists do not spend much in those areas or goods and services are much cheaper in those areas.\nThe proportion of tourists who stay overnight shows how covid impacted Tourism, with Bangkok being “Low-Low” from 2021-2022."
  },
  {
    "objectID": "Take-Home_Ex/Take-Home_Ex_02/Take-Home_Ex02.html#local-morans-i-across-space-and-time-year-and-month",
    "href": "Take-Home_Ex/Take-Home_Ex_02/Take-Home_Ex02.html#local-morans-i-across-space-and-time-year-and-month",
    "title": "Take Home Exercise 02",
    "section": "4.3 Local Moran’s I across Space and Time (Year and Month)",
    "text": "4.3 Local Moran’s I across Space and Time (Year and Month)\nA slight adjustment when performing Local Moran’s I across year and month is to reference the appropriate sf dataframe, the corresponding date column and list of dates. They have been used earlier when performing Global Moran’s I, therefore I am able to reuse those objects. Key indicators used will mirror that of 4.2 for consistency.\n\nRevenueRevenue/TouristOvernight Guest\n\n\nIn Revenue, I will still be looking at “revenue_thai_prop” and “revenue_foreign_prop”\n\nall_local_moran_maps &lt;- lapply(year_month_list, function(value) {\n  # Call the local_moran_space function for each value in the list\n  map_result &lt;- local_moran_space(data = th_bound_tour_year_month, \n                                  col = \"date.y\", \n                                  value = value, \n                                  kpi = \"revenue_thai_prop\")\n  \n  return(map_result)  # Store the resulting map\n})\n\ntmap_animation(all_local_moran_maps, filename = \"images/animated_revenue_thai_prop_year_month.gif\",\n               width = 1000, height = 1000, dpi = 300, delay = 50)\n\n\n# Visualize gif\nknitr::include_graphics(\"images/animated_revenue_thai_prop_year_month.gif\")\n\n\n\n\n\n\n\n\n\nall_local_moran_maps &lt;- lapply(year_month_list, function(value) {\n  # Call the local_moran_space function for each value in the list\n  map_result &lt;- local_moran_space(data = th_bound_tour_year_month, \n                                  col = \"date.y\", \n                                  value = value, \n                                  kpi = \"revenue_foreign_prop\")\n  \n  return(map_result)  # Store the resulting map\n})\n\ntmap_animation(all_local_moran_maps, filename = \"images/animated_revenue_foreign_prop_year_month.gif\",\n               width = 1000, height = 1000, dpi = 300, delay = 50)\n\n\n# Visualize gif\nknitr::include_graphics(\"images/animated_revenue_foreign_prop_year_month.gif\")\n\n\n\n\n\n\n\n\n\n\nIn Revenue/Tourist, I am interested in “revenue_tourist_all”, “revenue_tourist_thai” and “revenue_tourist_foreign”. Lets create and view the gif for each of them.\n\nall_local_moran_maps &lt;- lapply(year_month_list, function(value) {\n  # Call the local_moran_space function for each value in the list\n  map_result &lt;- local_moran_space(data = th_bound_tour_year_month, \n                                  col = \"date.y\", \n                                  value = value, \n                                  kpi = \"revenue_tourist_all\")\n  \n  return(map_result)  # Store the resulting map\n})\n\ntmap_animation(all_local_moran_maps, filename = \"images/animated_revenue_tourist_all_year_month.gif\",\n               width = 1000, height = 1000, dpi = 300, delay = 50)\n\n\n# Visualize gif\nknitr::include_graphics(\"images/animated_revenue_tourist_all_year_month.gif\")\n\n\n\n\n\n\n\n\n\nall_local_moran_maps &lt;- lapply(year_month_list, function(value) {\n  # Call the local_moran_space function for each value in the list\n  map_result &lt;- local_moran_space(data = th_bound_tour_year_month, \n                                  col = \"date.y\", \n                                  value = value, \n                                  kpi = \"revenue_tourist_thai\")\n  \n  return(map_result)  # Store the resulting map\n})\n\ntmap_animation(all_local_moran_maps, filename = \"images/animated_revenue_tourist_thai_year_month.gif\",\n               width = 1000, height = 1000, dpi = 300, delay = 50)\n\n\n# Visualize gif\nknitr::include_graphics(\"images/animated_revenue_tourist_thai_year_month.gif\")\n\n\n\n\n\n\n\n\n\nall_local_moran_maps &lt;- lapply(year_month_list, function(value) {\n  # Call the local_moran_space function for each value in the list\n  map_result &lt;- local_moran_space(data = th_bound_tour_year_month, \n                                  col = \"date.y\", \n                                  value = value, \n                                  kpi = \"revenue_tourist_foreign\")\n  \n  return(map_result)  # Store the resulting map\n})\n\ntmap_animation(all_local_moran_maps, filename = \"images/animated_revenue_tourist_foreign_year_month.gif\",\n               width = 1000, height = 1000, dpi = 300, delay = 50)\n\n\n# Visualize gif\nknitr::include_graphics(\"images/animated_revenue_tourist_foreign_year_month.gif\")\n\n\n\n\n\n\n\n\n\n\nLikewise, I will do the same for the “revenue_tourist_stay” and “tourist_stay_all”.\n\nall_local_moran_maps &lt;- lapply(year_month_list, function(value) {\n  # Call the local_moran_space function for each value in the list\n  map_result &lt;- local_moran_space(data = th_bound_tour_year_month, \n                                  col = \"date.y\", \n                                  value = value, \n                                  kpi = \"revenue_tourist_stay\")\n  \n  return(map_result)  # Store the resulting map\n})\n\ntmap_animation(all_local_moran_maps, filename = \"images/animated_revenue_tourist_stay_year_month.gif\",\n               width = 1000, height = 1000, dpi = 300, delay = 50)\n\n\n# Visualize gif\nknitr::include_graphics(\"images/animated_revenue_tourist_stay_year_month.gif\")\n\n\n\n\n\n\n\n\n\nall_local_moran_maps &lt;- lapply(year_month_list, function(value) {\n  # Call the local_moran_space function for each value in the list\n  map_result &lt;- local_moran_space(data = th_bound_tour_year_month, \n                                  col = \"date.y\", \n                                  value = value, \n                                  kpi = \"tourist_stay_all\")\n  \n  return(map_result)  # Store the resulting map\n})\n\ntmap_animation(all_local_moran_maps, filename = \"images/animated_tourist_stay_all_year_month.gif\",\n               width = 1000, height = 1000, dpi = 300, delay = 50)\n\n\n# Visualize gif\nknitr::include_graphics(\"images/animated_tourist_stay_all_year_month.gif\")\n\n\n\n\n\n\n\n\n\n\n\nWhen performing Local Moran’s I at a more granular level, observations align with those for Local Moran’s I across year. An additional insight is that the impact of covid can be more clearly observed with clusters/outliers becoming extremely sparse during the covid period."
  },
  {
    "objectID": "Take-Home_Ex/Take-Home_Ex_02/Take-Home_Ex02.html#mann-kendall-test",
    "href": "Take-Home_Ex/Take-Home_Ex_02/Take-Home_Ex02.html#mann-kendall-test",
    "title": "Take Home Exercise 02",
    "section": "5.2 Mann-Kendall Test",
    "text": "5.2 Mann-Kendall Test\nIn order to run Mann-Kendall test more efficiently for different key indicators, I’ll use a function. The function is as follows:\n\nSet seed\nCompute Gi*\nPerform Mann-Kendall Test for each province\nPost processing\n\n\n# Function to run Mann-Kendall iteratively\nmann_kendall_function &lt;- function(data, kpi) {\n  # Set seed\n  set.seed(42)\n  \n  # Compute Gi*\n  gi_stars &lt;- data %&gt;%\n    group_by(date) %&gt;%\n    mutate(gi_star = local_gstar_perm(!!sym(kpi), nb, wt)) %&gt;%\n    tidyr::unnest(gi_star)\n  \n  # Perform Mann-Kendall for each Province\n  ehsa &lt;- gi_stars %&gt;%\n    group_by(ADM1_EN) %&gt;%\n    summarise(mk = list(unclass(Kendall::MannKendall(gi_star)))) %&gt;%\n    tidyr::unnest_wider(mk)\n  \n  # Process output\n  emerging &lt;- ehsa %&gt;%\n    mutate(tau = round(tau, 5),\n           sl = round(sl, 5),\n           varS = round(varS, 3)) %&gt;%\n    arrange(sl, abs(tau))\n  \n  return(emerging)\n}\n\n\nRevenueRevenue/TouristOvernight Guest\n\n\n\n# Run for foreign revenue proportion\nemerging &lt;- mann_kendall_function(th_bound_nb, \"revenue_foreign_prop\")\n\n# Visualize output\ndatatable(emerging, rownames=FALSE, width=\"100%\",\n            options=list(initComplete = JS(\n    \"function(settings, json) {\",\n    \"$(this.api().table().header()).css({'background-color': '#000', 'color': '#fff', 'font-family': 'sans-serif'});\",\n    \"$(this.api().table().body()).css({'font-family': 'sans-serif'});\",\n    \"}\"\n  )))\n\n\n\n\n\n\n# Run for thai revenue proportion\nemerging &lt;- mann_kendall_function(th_bound_nb, \"revenue_thai_prop\")\n\n# Visualize output\ndatatable(emerging, rownames=FALSE, width=\"100%\",\n            options=list(initComplete = JS(\n    \"function(settings, json) {\",\n    \"$(this.api().table().header()).css({'background-color': '#000', 'color': '#fff', 'font-family': 'sans-serif'});\",\n    \"$(this.api().table().body()).css({'font-family': 'sans-serif'});\",\n    \"}\"\n  )))\n\n\n\n\n\n\n\n\n# Run for revenue/tourist\nemerging &lt;- mann_kendall_function(th_bound_nb, \"revenue_tourist_all\")\n\n# Visualize output\ndatatable(emerging, rownames=FALSE, width=\"100%\",\n            options=list(initComplete = JS(\n    \"function(settings, json) {\",\n    \"$(this.api().table().header()).css({'background-color': '#000', 'color': '#fff', 'font-family': 'sans-serif'});\",\n    \"$(this.api().table().body()).css({'font-family': 'sans-serif'});\",\n    \"}\"\n  )))\n\n\n\n\n\n\n# Run for revenue/tourist (Thai)\nemerging &lt;- mann_kendall_function(th_bound_nb, \"revenue_tourist_thai\")\n\n# Visualize output\ndatatable(emerging, rownames=FALSE, width=\"100%\",\n            options=list(initComplete = JS(\n    \"function(settings, json) {\",\n    \"$(this.api().table().header()).css({'background-color': '#000', 'color': '#fff', 'font-family': 'sans-serif'});\",\n    \"$(this.api().table().body()).css({'font-family': 'sans-serif'});\",\n    \"}\"\n  )))\n\n\n\n\n\n\n# Run for revenue/tourist (Foreign)\nemerging &lt;- mann_kendall_function(th_bound_nb, \"revenue_tourist_foreign\")\n\n# Visualize output\ndatatable(emerging, rownames=FALSE, width=\"100%\",\n            options=list(initComplete = JS(\n    \"function(settings, json) {\",\n    \"$(this.api().table().header()).css({'background-color': '#000', 'color': '#fff', 'font-family': 'sans-serif'});\",\n    \"$(this.api().table().body()).css({'font-family': 'sans-serif'});\",\n    \"}\"\n  )))\n\n\n\n\n\n\n\n\n# Run for revenue/overnight guest\nemerging &lt;- mann_kendall_function(th_bound_nb, \"revenue_tourist_stay\")\n\n# Visualize output\ndatatable(emerging, rownames=FALSE, width=\"100%\",\n            options=list(initComplete = JS(\n    \"function(settings, json) {\",\n    \"$(this.api().table().header()).css({'background-color': '#000', 'color': '#fff', 'font-family': 'sans-serif'});\",\n    \"$(this.api().table().body()).css({'font-family': 'sans-serif'});\",\n    \"}\"\n  )))\n\n\n\n\n\n\n# Run for proportion of tourist who stay overnight\nemerging &lt;- mann_kendall_function(th_bound_nb, \"tourist_stay_all\")\n\n# Visualize output\ndatatable(emerging, rownames=FALSE, width=\"100%\",\n            options=list(initComplete = JS(\n    \"function(settings, json) {\",\n    \"$(this.api().table().header()).css({'background-color': '#000', 'color': '#fff', 'font-family': 'sans-serif'});\",\n    \"$(this.api().table().body()).css({'font-family': 'sans-serif'});\",\n    \"}\"\n  )))\n\n\n\n\n\n\n\n\nLooking at the Mann-Kendall Tsst across various key indicators, it shows provinces that are emerging hotspots and others that are emerging coldspots.\nSpecifically for Bangkok, while some key indicators are not statistically significant, it shows how it is an emerging coldspot with negative tau for revenue per tourist (foreign and Thai), suggesting the impact of Covid."
  }
]