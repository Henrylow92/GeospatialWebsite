{
  "hash": "0519dbfad739c8bf1821fe27887a0f8a",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Take Home Exercise 02\"\nauthor: \"Henry Low\"\ndate: \"Sep 25 2024\"\ndate-modified: \"last-modified\"\nexecute:\n  evalu: true\n  echo: true\n  message: false\n  freeze: true\nformat: html\neditor: visual\ndate-format: \"DD MM YYYY\"\n---\n\n\n\n# Background\n\nTourism has been a key driver of Thailand's gross domestic product (GDP), accounting for up to 20% of it. The COVID-19 pandemic caused the tourism revenue (from domestic and international tourism) to crash to US\\$24 billion in 2020, from US\\$90 billion in 2019.\n\n# Objectives\n\nUsing appropriate global and local spatial autocorrelation analysis and emerging hotspot analysis, I would like to find out:\\\n- If the key indicators of tourism economy of Thailand are independent from space and space and time.\\\n- If the tourism economy is indeed spatial and spatio-temporal dependent.\\\n- If so, detect where the clusters and outliers are, and the emerging hotpot and cold spot areas.\n\n# Study Area\n\nThe study area will be Thailand (sf_polygon features) at [province](https://en.wikipedia.org/wiki/Provinces_of_Thailand) level.\n\n# Data Sources\n\n*(saved under 'data' folder)*\\\n[Thailand Domestic Tourism Statistics 2019-2023](https://www.kaggle.com/datasets/thaweewatboy/thailand-domestic-tourism-statistics) from Kaggle\\\n[Thailand - Subnational Administrative Boundaries from HDX](https://data.humdata.org/dataset/cod-ab-tha?)...[Click here to download here](https://data.humdata.org/dataset/d24bdc45-eb4c-4e3d-8b16-44db02667c27/resource/d0c722ff-6939-4423-ac0d-6501830b1759/download/tha_adm_rtsd_itos_20210121_shp.zip)\n\n# 1 Setting Up\n\n## 1.1 Loading R Packages\n\nI will be using the following R packages:\\\n-`sf` package to perform geospatial wrangling tasks \\\n- `sfdep` package to perform spatial autocorrelation analysis and emerging hotspot analysis \\\n- `tidyverse` package for reading csv files, dataframe processing tasks \\\n- `tmap` package for plotting tasks \\\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\npacman::p_load(tidyverse, sfdep, sf, tmap)\n```\n:::\n\n\n\n## 1.2 Loading Datasets\n\n### 1.2.1 Thailand Subnational Adminstrative Boundaries\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Load Thailand Province from HDX\nth_bound_l1 <- st_read(dsn = \"data/tha_adm_rtsd_itos_20210121_shp/\", layer = \"tha_admbnda_adm1_rtsd_20220121\") %>%\n  st_transform(crs = 32647) \n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nReading layer `tha_admbnda_adm1_rtsd_20220121' from data source \n  `C:\\Users\\Henry\\Desktop\\SMU Masters\\2024-2025 T1\\Geospatial Analytics & Applications\\Project\\GeospatialWebsite\\Take-Home_Ex\\Take-Home_Ex_02\\data\\tha_adm_rtsd_itos_20210121_shp' \n  using driver `ESRI Shapefile'\nSimple feature collection with 77 features and 16 fields\nGeometry type: MULTIPOLYGON\nDimension:     XY\nBounding box:  xmin: 97.34336 ymin: 5.613038 xmax: 105.637 ymax: 20.46507\nGeodetic CRS:  WGS 84\n```\n\n\n:::\n\n```{.r .cell-code}\n# Check output\nglimpse(th_bound_l1)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nRows: 77\nColumns: 17\n$ Shape_Leng <dbl> 2.417227, 1.695100, 1.251111, 1.884945, 3.041716, 1.739908,…\n$ Shape_Area <dbl> 0.13133873, 0.07926199, 0.05323766, 0.12698345, 0.21393797,…\n$ ADM1_EN    <chr> \"Bangkok\", \"Samut Prakan\", \"Nonthaburi\", \"Pathum Thani\", \"P…\n$ ADM1_TH    <chr> \"กรุงเทพมหานคร\", \"สมุทรปราการ\", \"นนทบุรี\", \"ปทุมธานี\", \"พระนครศรีอ…\n$ ADM1_PCODE <chr> \"TH10\", \"TH11\", \"TH12\", \"TH13\", \"TH14\", \"TH15\", \"TH16\", \"TH…\n$ ADM1_REF   <chr> NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA,…\n$ ADM1ALT1EN <chr> NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA,…\n$ ADM1ALT2EN <chr> NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA,…\n$ ADM1ALT1TH <chr> NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA,…\n$ ADM1ALT2TH <chr> NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA,…\n$ ADM0_EN    <chr> \"Thailand\", \"Thailand\", \"Thailand\", \"Thailand\", \"Thailand\",…\n$ ADM0_TH    <chr> \"ประเทศไทย\", \"ประเทศไทย\", \"ประเทศไทย\", \"ประเทศไทย\", \"ประเทศ…\n$ ADM0_PCODE <chr> \"TH\", \"TH\", \"TH\", \"TH\", \"TH\", \"TH\", \"TH\", \"TH\", \"TH\", \"TH\",…\n$ date       <date> 2019-02-18, 2019-02-18, 2019-02-18, 2019-02-18, 2019-02-18…\n$ validOn    <date> 2022-01-22, 2022-01-22, 2022-01-22, 2022-01-22, 2022-01-22…\n$ validTo    <date> -001-11-30, -001-11-30, -001-11-30, -001-11-30, -001-11-30…\n$ geometry   <MULTIPOLYGON [m]> MULTIPOLYGON (((674339.8 15..., MULTIPOLYGON (…\n```\n\n\n:::\n:::\n\n\n\n### 1.2.2 Thailand Tourism Data\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ntbl_tourism <- read_csv('data/archive/thailand_domestic_tourism_2019_2023_ver2.csv')\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nRows: 30800 Columns: 7\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr  (5): province_thai, province_eng, region_thai, region_eng, variable\ndbl  (1): value\ndate (1): date\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n```\n\n\n:::\n\n```{.r .cell-code}\nglimpse(tbl_tourism)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nRows: 30,800\nColumns: 7\n$ date          <date> 2019-01-01, 2019-01-01, 2019-01-01, 2019-01-01, 2019-01…\n$ province_thai <chr> \"กรุงเทพมหานคร\", \"ลพบุรี\", \"พระนครศรีอยุธยา\", \"สระบุรี\", \"ชัยนาท…\n$ province_eng  <chr> \"Bangkok\", \"Lopburi\", \"Phra Nakhon Si Ayutthaya\", \"Sarab…\n$ region_thai   <chr> \"ภาคกลาง\", \"ภาคกลาง\", \"ภาคกลาง\", \"ภาคกลาง\", \"ภาคกลาง\", \"…\n$ region_eng    <chr> \"central\", \"central\", \"central\", \"central\", \"central\", \"…\n$ variable      <chr> \"ratio_tourist_stay\", \"ratio_tourist_stay\", \"ratio_touri…\n$ value         <dbl> 93.37, 61.32, 73.37, 67.33, 79.31, 71.70, 64.65, 71.21, …\n```\n\n\n:::\n:::\n\n\n\nBefore joining the 2 datasets, we need to check if there are any non-matching values in either.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Find values in Th bound that are not in Tourism Data\nonly_in_th_bound_l1 <- anti_join(th_bound_l1, tbl_tourism, by = c(\"ADM1_EN\" = \"province_eng\")) %>% pull(ADM1_EN)\n\n# Find values in Tourism Data that are not in Th Bound\nonly_in_tbl_tourism <- anti_join(tbl_tourism, th_bound_l1, by = c(\"province_eng\" = \"ADM1_EN\")) %>% pull(province_eng)\n\n# See all values\nunmatched_values <- union(only_in_th_bound_l1, only_in_tbl_tourism)\nprint(unmatched_values)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n [1] \"Lop Buri\"         \"Chai Nat\"         \"Chon Buri\"        \"Prachin Buri\"    \n [5] \"Buri Ram\"         \"Si Sa Ket\"        \"Nong Bua Lam Phu\" \"Phangnga\"        \n [9] \"Lopburi\"          \"Chainat\"          \"Chonburi\"         \"Prachinburi\"     \n[13] \"Phang Nga\"        \"Buriram\"          \"Sisaket\"          \"Nong Bua Lamphu\" \n```\n\n\n:::\n:::\n\n\n\nSince we found the discrepancies, minor re-coding is required to ensure that values are aligned. The KPIs are also pivoted from long to wide to facilitate future analysis.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Data processing\ntbl_tourism_wide <- tbl_tourism %>%\n  mutate(province_eng = recode(province_eng,\n                       \"Lopburi\" = \"Lop Buri\",\n                       \"Chainat\" = \"Chai Nat\",\n                       \"Chonburi\" = \"Chon Buri\",\n                       \"Prachinburi\" = \"Prachin Buri\",\n                       \"Phang Nga\" = \"Phangnga\",\n                       \"Buriram\" = \"Buri Ram\",\n                       \"Sisaket\" = \"Si Sa Ket\",\n                       \"Nong Bua Lamphu\" = \"Nong Bua Lam Phu\"\n                       ),\n         province_eng = trimws(province_eng)\n         ) %>%\n  pivot_wider(., names_from = \"variable\", values_from = \"value\")\n\n# Check output\nsummary(tbl_tourism_wide)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n      date            province_thai      province_eng       region_thai       \n Min.   :2019-01-01   Length:3850        Length:3850        Length:3850       \n 1st Qu.:2020-01-01   Class :character   Class :character   Class :character  \n Median :2021-01-16   Mode  :character   Mode  :character   Mode  :character  \n Mean   :2021-01-15                                                           \n 3rd Qu.:2022-02-01                                                           \n Max.   :2023-02-01                                                           \n  region_eng        ratio_tourist_stay no_tourist_stay   no_tourist_all   \n Length:3850        Min.   : 0.00      Min.   :      0   Min.   :      0  \n Class :character   1st Qu.:20.18      1st Qu.:  16271   1st Qu.:  39092  \n Mode  :character   Median :41.81      Median :  44579   Median :  92122  \n                    Mean   :38.93      Mean   : 105161   Mean   : 206328  \n                    3rd Qu.:56.20      3rd Qu.:  90902   3rd Qu.: 203646  \n                    Max.   :95.86      Max.   :3335728   Max.   :6131044  \n no_tourist_thai   no_tourist_foreign   revenue_all         revenue_thai      \n Min.   :      0   Min.   :      0.0   Min.   :0.000e+00   Min.   :0.000e+00  \n 1st Qu.:  37169   1st Qu.:     49.2   1st Qu.:6.332e+07   1st Qu.:5.925e+07  \n Median :  88782   Median :    553.0   Median :1.955e+08   Median :1.773e+08  \n Mean   : 173962   Mean   :  32366.1   Mean   :1.344e+09   Mean   :6.636e+08  \n 3rd Qu.: 184256   3rd Qu.:   5189.5   3rd Qu.:5.060e+08   3rd Qu.:4.600e+08  \n Max.   :4087756   Max.   :2473725.0   Max.   :1.103e+11   Max.   :4.506e+10  \n revenue_foreign     \n Min.   :-4.250e+03  \n 1st Qu.: 1.100e+05  \n Median : 1.540e+06  \n Mean   : 6.802e+08  \n 3rd Qu.: 1.742e+07  \n Max.   : 8.503e+10  \n```\n\n\n:::\n:::\n\n\n\nThere's some weird values in revenue_foreign (negative), more investigation is required. Furthermore, it was picked up for some rows no_tourist_stay is greater than no_tourist_all, which should not be possible.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ntbl_tourism_wide %>%\n  filter(revenue_foreign < 0 | no_tourist_stay > no_tourist_all)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 8 × 13\n  date       province_thai province_eng  region_thai region_eng\n  <date>     <chr>         <chr>         <chr>       <chr>     \n1 2020-03-01 ตราด          Trat          ภาคตะวันออก  east      \n2 2020-05-01 เชียงใหม่       Chiang Mai    ภาคเหนือ     north     \n3 2020-06-01 ชลบุรี          Chon Buri     ภาคตะวันออก  east      \n4 2021-07-01 นครปฐม        Nakhon Pathom ภาคกลาง     central   \n5 2020-08-01 ยะลา          Yala          ภาคใต้       south     \n6 2021-08-01 นครปฐม        Nakhon Pathom ภาคกลาง     central   \n7 2021-08-01 จันทบุรี         Chanthaburi   ภาคตะวันออก  east      \n8 2020-12-01 สมุทรสาคร      Samut Sakhon  ภาคกลาง     central   \n# ℹ 8 more variables: ratio_tourist_stay <dbl>, no_tourist_stay <dbl>,\n#   no_tourist_all <dbl>, no_tourist_thai <dbl>, no_tourist_foreign <dbl>,\n#   revenue_all <dbl>, revenue_thai <dbl>, revenue_foreign <dbl>\n```\n\n\n:::\n:::\n\n\n\nSince this anomaly only pertains to a few rows of data, I'll assume data entry error and re-code those revenue_foreign anomalies to 0 and cap the no_tourist_stay to no_tourist_all.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ntbl_tourism_wide <- tbl_tourism_wide %>%\n  mutate(revenue_foreign = if_else(revenue_foreign < 0, 0, revenue_foreign),\n         no_tourist_stay = if_else(no_tourist_stay > no_tourist_all, no_tourist_all, no_tourist_stay))\n\n# Check output\nsummary(tbl_tourism_wide)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n      date            province_thai      province_eng       region_thai       \n Min.   :2019-01-01   Length:3850        Length:3850        Length:3850       \n 1st Qu.:2020-01-01   Class :character   Class :character   Class :character  \n Median :2021-01-16   Mode  :character   Mode  :character   Mode  :character  \n Mean   :2021-01-15                                                           \n 3rd Qu.:2022-02-01                                                           \n Max.   :2023-02-01                                                           \n  region_eng        ratio_tourist_stay no_tourist_stay   no_tourist_all   \n Length:3850        Min.   : 0.00      Min.   :      0   Min.   :      0  \n Class :character   1st Qu.:20.18      1st Qu.:  16259   1st Qu.:  39092  \n Mode  :character   Median :41.81      Median :  44579   Median :  92122  \n                    Mean   :38.93      Mean   : 105134   Mean   : 206328  \n                    3rd Qu.:56.20      3rd Qu.:  90902   3rd Qu.: 203646  \n                    Max.   :95.86      Max.   :3335728   Max.   :6131044  \n no_tourist_thai   no_tourist_foreign   revenue_all         revenue_thai      \n Min.   :      0   Min.   :      0.0   Min.   :0.000e+00   Min.   :0.000e+00  \n 1st Qu.:  37169   1st Qu.:     49.2   1st Qu.:6.332e+07   1st Qu.:5.925e+07  \n Median :  88782   Median :    553.0   Median :1.955e+08   Median :1.773e+08  \n Mean   : 173962   Mean   :  32366.1   Mean   :1.344e+09   Mean   :6.636e+08  \n 3rd Qu.: 184256   3rd Qu.:   5189.5   3rd Qu.:5.060e+08   3rd Qu.:4.600e+08  \n Max.   :4087756   Max.   :2473725.0   Max.   :1.103e+11   Max.   :4.506e+10  \n revenue_foreign    \n Min.   :0.000e+00  \n 1st Qu.:1.100e+05  \n Median :1.540e+06  \n Mean   :6.802e+08  \n 3rd Qu.:1.742e+07  \n Max.   :8.503e+10  \n```\n\n\n:::\n:::\n\n\n\nTo facilitate spatial autocorrelation across space and space and time, I need the tourism data in different formats. While doing so, additional KPIs will also be calculated.\n\n::: panel-tabset\n# Overall\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Summarize across all years\ntbl_tourism_sum_all <- tbl_tourism_wide %>%\n  group_by(province_eng, province_thai, region_thai, region_eng) %>%\n  summarize(\n    ratio_tourist_stay = mean(ratio_tourist_stay, na.rm = TRUE),\n    no_tourist_stay = sum(no_tourist_stay, na.rm = TRUE),\n    no_tourist_all = sum(no_tourist_all, na.rm = TRUE),\n    no_tourist_thai = sum(no_tourist_thai, na.rm = TRUE),\n    no_tourist_foreign = sum(no_tourist_foreign, na.rm = TRUE),\n    revenue_all = sum(revenue_all, na.rm = TRUE),\n    revenue_thai = sum(revenue_thai, na.rm = TRUE),\n    revenue_foreign = sum(revenue_foreign, na.rm = TRUE)\n  ) %>%\n  ungroup()\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\n`summarise()` has grouped output by 'province_eng', 'province_thai',\n'region_thai'. You can override using the `.groups` argument.\n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n# Compute additional KPIs\ntbl_tourism_sum_all <- tbl_tourism_sum_all %>%\n  mutate(revenue_tourist_all = revenue_all/no_tourist_all,\n         revenue_tourist_thai = revenue_thai/no_tourist_thai,\n         revenue_tourist_foreign = revenue_foreign/no_tourist_foreign,\n         revenue_tourist_stay = revenue_all/no_tourist_stay,\n         tourist_stay_all = no_tourist_stay/no_tourist_all)\n\n# Check output\nsummary(tbl_tourism_sum_all)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n province_eng       province_thai      region_thai         region_eng       \n Length:77          Length:77          Length:77          Length:77         \n Class :character   Class :character   Class :character   Class :character  \n Mode  :character   Mode  :character   Mode  :character   Mode  :character  \n                                                                            \n                                                                            \n                                                                            \n ratio_tourist_stay no_tourist_stay    no_tourist_all      no_tourist_thai    \n Min.   :28.25      Min.   :  259406   Min.   :   772281   Min.   :   750474  \n 1st Qu.:35.02      1st Qu.: 1240268   1st Qu.:  3155560   1st Qu.:  2943753  \n Median :38.76      Median : 2520445   Median :  5474592   Median :  4583102  \n Mean   :38.93      Mean   : 5256719   Mean   : 10316425   Mean   :  8698118  \n 3rd Qu.:42.78      3rd Qu.: 4580731   3rd Qu.: 10819668   3rd Qu.:  9615273  \n Max.   :52.22      Max.   :75436842   Max.   :151352500   Max.   :106899866  \n no_tourist_foreign  revenue_all         revenue_thai       revenue_foreign    \n Min.   :    3771   Min.   :8.961e+08   Min.   :8.918e+08   Min.   :4.300e+06  \n 1st Qu.:   37764   1st Qu.:5.416e+09   1st Qu.:4.860e+09   1st Qu.:7.466e+07  \n Median :  127404   Median :1.330e+10   Median :1.179e+10   Median :3.856e+08  \n Mean   : 1618306   Mean   :6.719e+10   Mean   :3.318e+10   Mean   :3.401e+10  \n 3rd Qu.:  653537   3rd Qu.:2.306e+10   3rd Qu.:2.188e+10   3rd Qu.:2.242e+09  \n Max.   :44452634   Max.   :1.847e+12   Max.   :7.407e+11   Max.   :1.106e+12  \n revenue_tourist_all revenue_tourist_thai revenue_tourist_foreign\n Min.   :  907.7     Min.   :  906.8      Min.   : 1068          \n 1st Qu.: 1500.3     1st Qu.: 1499.0      1st Qu.: 2092          \n Median : 1990.7     Median : 1969.7      Median : 2876          \n Mean   : 3454.3     Mean   : 2805.1      Mean   : 5212          \n 3rd Qu.: 3325.0     3rd Qu.: 3085.8      3rd Qu.: 4743          \n Max.   :30610.0     Max.   :13343.8      Max.   :41744          \n revenue_tourist_stay tourist_stay_all\n Min.   : 2394        Min.   :0.0885  \n 1st Qu.: 3843        1st Qu.:0.3102  \n Median : 4672        Median :0.4984  \n Mean   : 6765        Mean   :0.4983  \n 3rd Qu.: 7129        3rd Qu.:0.6360  \n Max.   :34955        Max.   :0.9044  \n```\n\n\n:::\n:::\n\n\n\n# By Year\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Summarize across all years\ntbl_tourism_sum_year <- tbl_tourism_wide %>%\n  mutate(year = year(date)) %>%\n  group_by(year, province_eng, province_thai, region_thai, region_eng) %>%\n  summarize(\n    ratio_tourist_stay = mean(ratio_tourist_stay, na.rm = TRUE),\n    no_tourist_stay = sum(no_tourist_stay, na.rm = TRUE),\n    no_tourist_all = sum(no_tourist_all, na.rm = TRUE),\n    no_tourist_thai = sum(no_tourist_thai, na.rm = TRUE),\n    no_tourist_foreign = sum(no_tourist_foreign, na.rm = TRUE),\n    revenue_all = sum(revenue_all, na.rm = TRUE),\n    revenue_thai = sum(revenue_thai, na.rm = TRUE),\n    revenue_foreign = sum(revenue_foreign, na.rm = TRUE)\n  ) %>%\n  ungroup()\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\n`summarise()` has grouped output by 'year', 'province_eng', 'province_thai',\n'region_thai'. You can override using the `.groups` argument.\n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n# Compute additional KPIs\ntbl_tourism_sum_year <- tbl_tourism_sum_year %>%\n  mutate(revenue_tourist_all = revenue_all/no_tourist_all,\n         revenue_tourist_thai = revenue_thai/no_tourist_thai,\n         revenue_tourist_foreign = revenue_foreign/no_tourist_foreign,\n         revenue_tourist_stay = revenue_all/no_tourist_stay,\n         tourist_stay_all = no_tourist_stay/no_tourist_all)\n\n# Check output\nsummary(tbl_tourism_sum_year)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n      year      province_eng       province_thai      region_thai       \n Min.   :2019   Length:385         Length:385         Length:385        \n 1st Qu.:2020   Class :character   Class :character   Class :character  \n Median :2021   Mode  :character   Mode  :character   Mode  :character  \n Mean   :2021                                                           \n 3rd Qu.:2022                                                           \n Max.   :2023                                                           \n                                                                        \n  region_eng        ratio_tourist_stay no_tourist_stay    no_tourist_all    \n Length:385         Min.   : 5.452     Min.   :   13523   Min.   :   45008  \n Class :character   1st Qu.:25.977     1st Qu.:  176772   1st Qu.:  425219  \n Mode  :character   Median :42.385     Median :  400926   Median :  889499  \n                    Mean   :42.228     Mean   : 1051344   Mean   : 2063285  \n                    3rd Qu.:57.638     3rd Qu.:  933078   3rd Qu.: 2072363  \n                    Max.   :92.170     Max.   :36407624   Max.   :66966562  \n                                                                            \n no_tourist_thai    no_tourist_foreign  revenue_all         revenue_thai      \n Min.   :   44180   Min.   :       0   Min.   :4.204e+07   Min.   :4.165e+07  \n 1st Qu.:  387805   1st Qu.:    2221   1st Qu.:7.809e+08   1st Qu.:7.160e+08  \n Median :  852972   Median :   11860   Median :1.873e+09   Median :1.746e+09  \n Mean   : 1739624   Mean   :  323661   Mean   :1.344e+10   Mean   :6.636e+09  \n 3rd Qu.: 1799767   3rd Qu.:   79008   3rd Qu.:5.134e+09   3rd Qu.:4.647e+09  \n Max.   :42073847   Max.   :24892715   Max.   :1.068e+12   Max.   :3.846e+11  \n                                                                              \n revenue_foreign     revenue_tourist_all revenue_tourist_thai\n Min.   :0.000e+00   Min.   :  695.6     Min.   :  695.2     \n 1st Qu.:4.880e+06   1st Qu.: 1394.0     1st Qu.: 1382.6     \n Median :3.119e+07   Median : 1983.6     Median : 1937.6     \n Mean   :6.802e+09   Mean   : 3207.1     Mean   : 2690.1     \n 3rd Qu.:2.702e+08   3rd Qu.: 3185.7     3rd Qu.: 3113.0     \n Max.   :6.832e+11   Max.   :36131.4     Max.   :15683.4     \n                                                             \n revenue_tourist_foreign revenue_tourist_stay tourist_stay_all \n Min.   :  426           Min.   : 2030        Min.   :0.05899  \n 1st Qu.: 1964           1st Qu.: 3557        1st Qu.:0.33405  \n Median : 2695           Median : 4743        Median :0.48410  \n Mean   : 4701           Mean   : 6427        Mean   :0.49282  \n 3rd Qu.: 4422           3rd Qu.: 7059        3rd Qu.:0.61740  \n Max.   :58147           Max.   :44768        Max.   :0.95484  \n NA's   :8                                                     \n```\n\n\n:::\n:::\n\n\n\n# By Year & Month\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# No additional processing required\n# Compute additional KPIs\ntbl_tourism_wide <- tbl_tourism_wide %>%\n  mutate(revenue_tourist_all = ifelse(no_tourist_all == 0, 0, revenue_all/no_tourist_all),\n         revenue_tourist_thai = ifelse(no_tourist_thai == 0, 0, revenue_thai/no_tourist_thai),\n         revenue_tourist_foreign = ifelse(no_tourist_foreign == 0, 0, revenue_foreign/no_tourist_foreign),\n         revenue_tourist_stay = ifelse(no_tourist_stay == 0, 0, revenue_all/no_tourist_stay),\n         tourist_stay_all = ifelse(no_tourist_all == 0, 0, no_tourist_stay/no_tourist_all))\n\n# Check output\nsummary(tbl_tourism_wide)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n      date            province_thai      province_eng       region_thai       \n Min.   :2019-01-01   Length:3850        Length:3850        Length:3850       \n 1st Qu.:2020-01-01   Class :character   Class :character   Class :character  \n Median :2021-01-16   Mode  :character   Mode  :character   Mode  :character  \n Mean   :2021-01-15                                                           \n 3rd Qu.:2022-02-01                                                           \n Max.   :2023-02-01                                                           \n  region_eng        ratio_tourist_stay no_tourist_stay   no_tourist_all   \n Length:3850        Min.   : 0.00      Min.   :      0   Min.   :      0  \n Class :character   1st Qu.:20.18      1st Qu.:  16259   1st Qu.:  39092  \n Mode  :character   Median :41.81      Median :  44579   Median :  92122  \n                    Mean   :38.93      Mean   : 105134   Mean   : 206328  \n                    3rd Qu.:56.20      3rd Qu.:  90902   3rd Qu.: 203646  \n                    Max.   :95.86      Max.   :3335728   Max.   :6131044  \n no_tourist_thai   no_tourist_foreign   revenue_all         revenue_thai      \n Min.   :      0   Min.   :      0.0   Min.   :0.000e+00   Min.   :0.000e+00  \n 1st Qu.:  37169   1st Qu.:     49.2   1st Qu.:6.332e+07   1st Qu.:5.925e+07  \n Median :  88782   Median :    553.0   Median :1.955e+08   Median :1.773e+08  \n Mean   : 173962   Mean   :  32366.1   Mean   :1.344e+09   Mean   :6.636e+08  \n 3rd Qu.: 184256   3rd Qu.:   5189.5   3rd Qu.:5.060e+08   3rd Qu.:4.600e+08  \n Max.   :4087756   Max.   :2473725.0   Max.   :1.103e+11   Max.   :4.506e+10  \n revenue_foreign     revenue_tourist_all revenue_tourist_thai\n Min.   :0.000e+00   Min.   :     0      Min.   :    0       \n 1st Qu.:1.100e+05   1st Qu.:  1366      1st Qu.: 1345       \n Median :1.540e+06   Median :  1932      Median : 1880       \n Mean   :6.802e+08   Mean   :  3513      Mean   : 2614       \n 3rd Qu.:1.742e+07   3rd Qu.:  3199      3rd Qu.: 3082       \n Max.   :8.503e+10   Max.   :300000      Max.   :17325       \n revenue_tourist_foreign revenue_tourist_stay tourist_stay_all\n Min.   :    0           Min.   :     0       Min.   :0.0000  \n 1st Qu.: 1294           1st Qu.:  3187       1st Qu.:0.3543  \n Median : 2372           Median :  4448       Median :0.5128  \n Mean   : 4504           Mean   :  6428       Mean   :0.5270  \n 3rd Qu.: 4137           3rd Qu.:  6754       3rd Qu.:0.6981  \n Max.   :65000           Max.   :300000       Max.   :1.0000  \n```\n\n\n:::\n:::\n\n\n:::\n\n### 1.2.3 Merge Tourism data\n\nFinally, I can merge the tourism dataset to the spatial dataset.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Join with tourism data all\nth_bound_tour_all <- left_join(th_bound_l1, tbl_tourism_sum_all, by = c(\"ADM1_EN\" = \"province_eng\")) \n\n# Join with tourism data by year\nth_bound_tour_year <- left_join(th_bound_l1, tbl_tourism_sum_year, by = c(\"ADM1_EN\" = \"province_eng\")) \n\n\n# Join with tourism data by year and month\nth_bound_tour_year_month <- left_join(th_bound_l1, tbl_tourism_wide, by = c(\"ADM1_EN\" = \"province_eng\")) \n```\n:::\n\n\n\nA good practise is to save these processed dataset for easy retrieval.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Export to processed sub-folder as RDS\nwrite_rds(th_bound_tour_all, 'data/processed/th_bound_tour_all.rds')\n\nwrite_rds(th_bound_tour_year, 'data/processed/th_bound_tour_year.rds')\n\nwrite_rds(th_bound_tour_year_month, 'data/processed/th_bound_tour_year_month.rds')\n```\n:::\n\n\n\n# 2 Exploratory Data Analysis\n\nAfter clearing the r environment, I'll load in the various datasets.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Clear R console\nrm(list = ls(all.names = TRUE))\n\n# Load various processed dataset\nth_bound_tour_all <- read_rds('data/processed/th_bound_tour_all.rds')\nth_bound_tour_year <- read_rds('data/processed/th_bound_tour_year.rds')\nth_bound_tour_year_month <- read_rds('data/processed/th_bound_tour_year_month.rds')\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ntmap_mode(\"plot\")\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\ntmap mode set to plotting\n```\n\n\n:::\n\n```{.r .cell-code}\ntm_shape(th_bound_tour_all) +\n  tm_fill(\"revenue_all\", \n          style = \"quantile\", \n          palette = \"Blues\",\n          title = \"revenue_all\") +\n  tm_layout(main.title = \"Distribution of Tourism Revenue by Province\",\n            main.title.position = \"center\",\n            main.title.size = 1.2,\n            legend.height = 0.45, \n            legend.width = 0.35,\n            frame = TRUE) +\n  tm_borders(alpha = 0.5) +\n  tm_compass(type=\"8star\", size = 2) +\n  tm_scale_bar() +\n  tm_grid(alpha =0.2)\n```\n\n::: {.cell-output-display}\n![](Take-Home_Ex02_files/figure-html/unnamed-chunk-16-1.png){width=1152}\n:::\n:::\n\n\n\n# 3 Spatial Analysis of Thailand Tourism Key Indicators\n\nLets first set the seed to ensure reproducibility of all subsequent analysis.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nset.seed(42)\n```\n:::\n\n\n\nIn order to perform any spatial correlation analysis, spatial weights have to be generated first. There are a few options:\n\n| Method                       | Details                                                                      |\n|------------------------|-----------------------------------------------|\n| `st_contiguity` (i.e. Queen) | Based on regions with contiguous boundaries (uses `spdep::poly2nb`)          |\n| `st_dist_band`               | Based on distance band (uses `spdep::dnearneigh`)                            |\n| `st_knn`                     | Based on k nearest neighbours (uses `spdep::knearneigh` and `spdep::knn2nb`) |\n\nBefore passing the coordinates to either functions, checks are required to ensure that the points are in the interior of each province (i.e. not in the middle of the ocean)\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Generate coordinates using st_centroid\nlongitude_cent <- map_dbl(th_bound_tour_all$geometry, ~st_centroid(.x)[[1]])\nlatitude_cent <- map_dbl(th_bound_tour_all$geometry, ~st_centroid(.x)[[2]])\ncoords_cent <- cbind(longitude_cent, latitude_cent)\n\n# Generate coordinates using st_point_on_surface\nlongitude <- map_dbl(th_bound_tour_all$geometry, ~st_point_on_surface(.x)[[1]])\nlatitude <- map_dbl(th_bound_tour_all$geometry, ~st_point_on_surface(.x)[[2]])\ncoords <- cbind(longitude, latitude)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n# Visualise both points on a map to verify\nplot(th_bound_tour_all$geometry, border=\"lightgrey\")\npoints(coords_cent, pch = 19, cex = 0.6, col = \"red\")\npoints(coords, pch = 19, cex = 0.6, col = \"blue\")\n```\n\n::: {.cell-output-display}\n![](Take-Home_Ex02_files/figure-html/unnamed-chunk-19-1.png){width=2880}\n:::\n:::\n\n\n\nAfter closely viewing the plot, all points from `st_centroid` are within the interior of the province polygons. With the exception of a few provinces, the points from `st_centroid` are seemingly better placed towards the center as compared to `st_point_on_surface`. Therefore, this allows the sfdep distance based neighbour functions to be used with ease considering st_centroid is used as the default.\n\n:::panel-tabset\n\n# st_contiguity\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Calculate neighbours\nnb_contiguity <- st_contiguity(th_bound_tour_all$geometry)\n\n# Check output\nnb_contiguity\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nNeighbour list object:\nNumber of regions: 77 \nNumber of nonzero links: 352 \nPercentage nonzero weights: 5.93692 \nAverage number of links: 4.571429 \n1 region with no links:\n67\n2 disjoint connected subgraphs\n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n# Visualize neighbours\nplot(th_bound_tour_all$geometry, border=\"lightgrey\", , main=\"Queen Contiguity \")\nplot(nb_contiguity, coords_cent, pch = 19, cex = 0.6, add = TRUE, col = \"red\")\n```\n\n::: {.cell-output-display}\n![](Take-Home_Ex02_files/figure-html/unnamed-chunk-21-1.png){width=1152}\n:::\n:::\n\n\n\n\n# st_dist_band\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Calculate neighbours\nnb_dist <- st_dist_band(th_bound_tour_all$geometry)\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\n! Polygon provided. Using point on surface.\n```\n\n\n:::\n\n```{.r .cell-code}\n# Check output\nnb_dist\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nNeighbour list object:\nNumber of regions: 77 \nNumber of nonzero links: 474 \nPercentage nonzero weights: 7.994603 \nAverage number of links: 6.155844 \n2 disjoint connected subgraphs\n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n# Visualize neighbours\nplot(th_bound_tour_all$geometry, border=\"lightgrey\", main=\"Distance Band\")\nplot(nb_dist, coords_cent, pch = 19, cex = 0.6, add = TRUE, col = \"red\")\n```\n\n::: {.cell-output-display}\n![](Take-Home_Ex02_files/figure-html/unnamed-chunk-23-1.png){width=1152}\n:::\n:::\n\n\n\n\n# st_knn\n\nGeneral rule of thumb for k is square root of observations. \n$$\nk \\approx \\sqrt{76} \\approx 8\n$$\nJust for variety, k = 5 (average number from `st_contiguity`) is also run.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Calculate neighbours\nnb_knn_8 <- st_knn(th_bound_tour_all$geometry, k = 8)\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\n! Polygon provided. Using point on surface.\n```\n\n\n:::\n\n```{.r .cell-code}\nnb_knn_5 <- st_knn(th_bound_tour_all$geometry, k = 5)\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\n! Polygon provided. Using point on surface.\n```\n\n\n:::\n\n```{.r .cell-code}\n# Check output\nnb_knn_8\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nNeighbour list object:\nNumber of regions: 77 \nNumber of nonzero links: 616 \nPercentage nonzero weights: 10.38961 \nAverage number of links: 8 \nNon-symmetric neighbours list\n```\n\n\n:::\n\n```{.r .cell-code}\nnb_knn_5\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nNeighbour list object:\nNumber of regions: 77 \nNumber of nonzero links: 385 \nPercentage nonzero weights: 6.493506 \nAverage number of links: 5 \nNon-symmetric neighbours list\n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n# Visualize neighbours\npar(mfrow=c(1,2))\nplot(th_bound_tour_all$geometry, border=\"lightgrey\", main=\"K = 8\")\nplot(nb_knn_8, coords_cent, pch = 19, cex = 0.6, add = TRUE, col = \"red\")\nplot(th_bound_tour_all$geometry, border=\"lightgrey\", main=\"K = 5\")\nplot(nb_knn_5, coords_cent, pch = 19, cex = 0.6, add = TRUE, col = \"red\")\n```\n\n::: {.cell-output-display}\n![](Take-Home_Ex02_files/figure-html/unnamed-chunk-25-1.png){width=1152}\n:::\n:::\n\n\n\n:::\n\nComparing the various neighbour methods, \n\n\n\n## 3.1 Global Spatial Autocorrelation\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nth_tour_knn5_all <- th_bound_tour_all %>%\n  mutate(nb = nb_knn_5,\n         wt = st_weights(nb, style = \"W\"),\n         wt_inv = st_inverse_distance(nb, geometry = geometry, scale = 100, alpha = 1),\n         .before = 1)\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\n! Polygon provided. Using point on surface.\n```\n\n\n:::\n:::\n\n\n\n::: panel-tabset\n# Revenue\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmoranI_rev <- global_moran(th_tour_knn5_all$tourist_stay_all,\n                       th_tour_knn5_all$nb,\n                       th_tour_knn5_all$wt)\nglimpse(moranI_rev)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nList of 2\n $ I: num 0.354\n $ K: num 2.18\n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nglobal_moran_test(th_tour_knn5_all$tourist_stay_all,\n                       th_tour_knn5_all$nb,\n                       th_tour_knn5_all$wt)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n\n\tMoran I test under randomisation\n\ndata:  x  \nweights: listw    \n\nMoran I statistic standard deviate = 5.684, p-value = 6.578e-09\nalternative hypothesis: greater\nsample estimates:\nMoran I statistic       Expectation          Variance \n       0.35405381       -0.01315789        0.00417368 \n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nglobal_moran_perm(th_tour_knn5_all$tourist_stay_all,\n                  th_tour_knn5_all$nb,\n                  th_tour_knn5_all$wt,\n                  nsim = 999)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n\n\tMonte-Carlo simulation of Moran I\n\ndata:  x \nweights: listw  \nnumber of simulations + 1: 1000 \n\nstatistic = 0.35405, observed rank = 1000, p-value < 2.2e-16\nalternative hypothesis: two.sided\n```\n\n\n:::\n:::\n\n\n:::\n\n## 3.2 Local Spatial Autocorrelation\n\n# 4 Spatial-Temporal Analysis of Thailand Tourism Key Indicators\n\n## 3.1 Global Spatial\n",
    "supporting": [
      "Take-Home_Ex02_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}