{
  "hash": "1e24029082de5b1a0750d5f8958044cc",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Take Home Exercise 02\"\nauthor: \"Henry Low\"\ndate: \"Sep 25 2024\"\ndate-modified: \"last-modified\"\nexecute:\n  evalu: true\n  context: shared\n  echo: true\n  message: false\n  freeze: true\nformat: html\neditor: visual\ndate-format: \"DD MM YYYY\"\n---\n\n\n\n# Background\n\nTourism has been a key driver of Thailand's gross domestic product (GDP), accounting for up to 20% of it. The COVID-19 pandemic caused the tourism revenue (from domestic and international tourism) to crash to US\\$24 billion in 2020, from US\\$90 billion in 2019.\n\n# Objectives\n\nUsing appropriate global and local spatial autocorrelation analysis and emerging hotspot analysis, I would like to find out:\\\n- If the key indicators of tourism economy of Thailand are independent from space and space and time.\\\n- If the tourism economy is indeed spatial and spatio-temporal dependent.\\\n- If so, detect where the clusters and outliers are, and the emerging hotpot and cold spot areas.\n\n# Study Area\n\nThe study area will be Thailand (sf_polygon features) at [province](https://en.wikipedia.org/wiki/Provinces_of_Thailand) level.\n\n# Data Sources\n\n*(saved under 'data' folder)*\\\n[Thailand Domestic Tourism Statistics 2019-2023](https://www.kaggle.com/datasets/thaweewatboy/thailand-domestic-tourism-statistics) from Kaggle\\\n[Thailand - Subnational Administrative Boundaries from HDX](https://data.humdata.org/dataset/cod-ab-tha?)...[Click here to download here](https://data.humdata.org/dataset/d24bdc45-eb4c-4e3d-8b16-44db02667c27/resource/d0c722ff-6939-4423-ac0d-6501830b1759/download/tha_adm_rtsd_itos_20210121_shp.zip)\n\n# 1 Setting Up\n\n## 1.1 Loading R Packages\n\nI will be using the following R packages:\\\n-`sf` package to perform geospatial wrangling tasks \\\n- `sfdep` package to perform spatial autocorrelation analysis and emerging hotspot analysis \\\n- `tidyverse` package for reading csv files, dataframe processing tasks \\\n- `ggplot2` and `ggpubr` package for plotting statistical graphics \\\n- `DT` and `crosstalk` package for visualizing results in a table format \\\n- `tmap` package for plotting tasks \\\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\npacman::p_load(tidyverse, sfdep, sf, ggplot2, ggpubr, tmap, DT, crosstalk)\n```\n:::\n\n\n\n## 1.2 Loading Datasets\n\nThe aim here is to load the datasets and do the necessary geospatial data wrangling before proceeding to the subsequent steps.\n\n### 1.2.1 Thailand Subnational Adminstrative Boundaries\n\n`st_read` from the sf package is used to load the subnational boundaries.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Load Thailand Province from HDX\nth_bound_l1 <- st_read(dsn = \"data/tha_adm_rtsd_itos_20210121_shp/\", layer = \"tha_admbnda_adm1_rtsd_20220121\") %>%\n  st_transform(crs = 32647) \n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nReading layer `tha_admbnda_adm1_rtsd_20220121' from data source \n  `C:\\Users\\Henry\\Desktop\\SMU Masters\\2024-2025 T1\\Geospatial Analytics & Applications\\Project\\GeospatialWebsite\\Take-Home_Ex\\Take-Home_Ex_02\\data\\tha_adm_rtsd_itos_20210121_shp' \n  using driver `ESRI Shapefile'\nSimple feature collection with 77 features and 16 fields\nGeometry type: MULTIPOLYGON\nDimension:     XY\nBounding box:  xmin: 97.34336 ymin: 5.613038 xmax: 105.637 ymax: 20.46507\nGeodetic CRS:  WGS 84\n```\n\n\n:::\n\n```{.r .cell-code}\n# Check output\nglimpse(th_bound_l1)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nRows: 77\nColumns: 17\n$ Shape_Leng <dbl> 2.417227, 1.695100, 1.251111, 1.884945, 3.041716, 1.739908,…\n$ Shape_Area <dbl> 0.13133873, 0.07926199, 0.05323766, 0.12698345, 0.21393797,…\n$ ADM1_EN    <chr> \"Bangkok\", \"Samut Prakan\", \"Nonthaburi\", \"Pathum Thani\", \"P…\n$ ADM1_TH    <chr> \"กรุงเทพมหานคร\", \"สมุทรปราการ\", \"นนทบุรี\", \"ปทุมธานี\", \"พระนครศรีอ…\n$ ADM1_PCODE <chr> \"TH10\", \"TH11\", \"TH12\", \"TH13\", \"TH14\", \"TH15\", \"TH16\", \"TH…\n$ ADM1_REF   <chr> NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA,…\n$ ADM1ALT1EN <chr> NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA,…\n$ ADM1ALT2EN <chr> NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA,…\n$ ADM1ALT1TH <chr> NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA,…\n$ ADM1ALT2TH <chr> NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA,…\n$ ADM0_EN    <chr> \"Thailand\", \"Thailand\", \"Thailand\", \"Thailand\", \"Thailand\",…\n$ ADM0_TH    <chr> \"ประเทศไทย\", \"ประเทศไทย\", \"ประเทศไทย\", \"ประเทศไทย\", \"ประเทศ…\n$ ADM0_PCODE <chr> \"TH\", \"TH\", \"TH\", \"TH\", \"TH\", \"TH\", \"TH\", \"TH\", \"TH\", \"TH\",…\n$ date       <date> 2019-02-18, 2019-02-18, 2019-02-18, 2019-02-18, 2019-02-18…\n$ validOn    <date> 2022-01-22, 2022-01-22, 2022-01-22, 2022-01-22, 2022-01-22…\n$ validTo    <date> -001-11-30, -001-11-30, -001-11-30, -001-11-30, -001-11-30…\n$ geometry   <MULTIPOLYGON [m]> MULTIPOLYGON (((674339.8 15..., MULTIPOLYGON (…\n```\n\n\n:::\n:::\n\n\n\n### 1.2.2 Thailand Tourism Data\n\n`read_csv` from readr package within tidyverse is used to load the aspatial data as a tibble.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ntbl_tourism <- read_csv('data/archive/thailand_domestic_tourism_2019_2023_ver2.csv')\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nRows: 30800 Columns: 7\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr  (5): province_thai, province_eng, region_thai, region_eng, variable\ndbl  (1): value\ndate (1): date\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n```\n\n\n:::\n\n```{.r .cell-code}\nglimpse(tbl_tourism)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nRows: 30,800\nColumns: 7\n$ date          <date> 2019-01-01, 2019-01-01, 2019-01-01, 2019-01-01, 2019-01…\n$ province_thai <chr> \"กรุงเทพมหานคร\", \"ลพบุรี\", \"พระนครศรีอยุธยา\", \"สระบุรี\", \"ชัยนาท…\n$ province_eng  <chr> \"Bangkok\", \"Lopburi\", \"Phra Nakhon Si Ayutthaya\", \"Sarab…\n$ region_thai   <chr> \"ภาคกลาง\", \"ภาคกลาง\", \"ภาคกลาง\", \"ภาคกลาง\", \"ภาคกลาง\", \"…\n$ region_eng    <chr> \"central\", \"central\", \"central\", \"central\", \"central\", \"…\n$ variable      <chr> \"ratio_tourist_stay\", \"ratio_tourist_stay\", \"ratio_touri…\n$ value         <dbl> 93.37, 61.32, 73.37, 67.33, 79.31, 71.70, 64.65, 71.21, …\n```\n\n\n:::\n:::\n\n\n\nBefore joining the 2 datasets, we need to check if there are any non-matching values in either joining columns.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Find values in Th bound that are not in Tourism Data\nonly_in_th_bound_l1 <- anti_join(th_bound_l1, tbl_tourism, by = c(\"ADM1_EN\" = \"province_eng\")) %>% pull(ADM1_EN)\n\n# Find values in Tourism Data that are not in Th Bound\nonly_in_tbl_tourism <- anti_join(tbl_tourism, th_bound_l1, by = c(\"province_eng\" = \"ADM1_EN\")) %>% pull(province_eng)\n\n# See all values\nunmatched_values <- union(only_in_th_bound_l1, only_in_tbl_tourism)\nprint(unmatched_values)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n [1] \"Lop Buri\"         \"Chai Nat\"         \"Chon Buri\"        \"Prachin Buri\"    \n [5] \"Buri Ram\"         \"Si Sa Ket\"        \"Nong Bua Lam Phu\" \"Phangnga\"        \n [9] \"Lopburi\"          \"Chainat\"          \"Chonburi\"         \"Prachinburi\"     \n[13] \"Phang Nga\"        \"Buriram\"          \"Sisaket\"          \"Nong Bua Lamphu\" \n```\n\n\n:::\n:::\n\n\n\nSince we found the discrepancies, minor re-coding is required to ensure that values are aligned. The KPIs are also pivoted from long to wide to facilitate future analysis.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Data processing\ntbl_tourism_wide <- tbl_tourism %>%\n  mutate(province_eng = recode(province_eng,\n                       \"Lopburi\" = \"Lop Buri\",\n                       \"Chainat\" = \"Chai Nat\",\n                       \"Chonburi\" = \"Chon Buri\",\n                       \"Prachinburi\" = \"Prachin Buri\",\n                       \"Phang Nga\" = \"Phangnga\",\n                       \"Buriram\" = \"Buri Ram\",\n                       \"Sisaket\" = \"Si Sa Ket\",\n                       \"Nong Bua Lamphu\" = \"Nong Bua Lam Phu\"\n                       ),\n         province_eng = trimws(province_eng)\n         ) %>%\n  pivot_wider(., names_from = \"variable\", values_from = \"value\")\n\n# Check output\nsummary(tbl_tourism_wide)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n      date            province_thai      province_eng       region_thai       \n Min.   :2019-01-01   Length:3850        Length:3850        Length:3850       \n 1st Qu.:2020-01-01   Class :character   Class :character   Class :character  \n Median :2021-01-16   Mode  :character   Mode  :character   Mode  :character  \n Mean   :2021-01-15                                                           \n 3rd Qu.:2022-02-01                                                           \n Max.   :2023-02-01                                                           \n  region_eng        ratio_tourist_stay no_tourist_stay   no_tourist_all   \n Length:3850        Min.   : 0.00      Min.   :      0   Min.   :      0  \n Class :character   1st Qu.:20.18      1st Qu.:  16271   1st Qu.:  39092  \n Mode  :character   Median :41.81      Median :  44579   Median :  92122  \n                    Mean   :38.93      Mean   : 105161   Mean   : 206328  \n                    3rd Qu.:56.20      3rd Qu.:  90902   3rd Qu.: 203646  \n                    Max.   :95.86      Max.   :3335728   Max.   :6131044  \n no_tourist_thai   no_tourist_foreign   revenue_all         revenue_thai      \n Min.   :      0   Min.   :      0.0   Min.   :0.000e+00   Min.   :0.000e+00  \n 1st Qu.:  37169   1st Qu.:     49.2   1st Qu.:6.332e+07   1st Qu.:5.925e+07  \n Median :  88782   Median :    553.0   Median :1.955e+08   Median :1.773e+08  \n Mean   : 173962   Mean   :  32366.1   Mean   :1.344e+09   Mean   :6.636e+08  \n 3rd Qu.: 184256   3rd Qu.:   5189.5   3rd Qu.:5.060e+08   3rd Qu.:4.600e+08  \n Max.   :4087756   Max.   :2473725.0   Max.   :1.103e+11   Max.   :4.506e+10  \n revenue_foreign     \n Min.   :-4.250e+03  \n 1st Qu.: 1.100e+05  \n Median : 1.540e+06  \n Mean   : 6.802e+08  \n 3rd Qu.: 1.742e+07  \n Max.   : 8.503e+10  \n```\n\n\n:::\n:::\n\n\n\nThere are some weird values in revenue_foreign (negative), more investigation is required. Furthermore, it was picked up for some rows no_tourist_stay is greater than no_tourist_all, which should not be possible.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ntbl_tourism_wide %>%\n  filter(revenue_foreign < 0 | no_tourist_stay > no_tourist_all)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 8 × 13\n  date       province_thai province_eng  region_thai region_eng\n  <date>     <chr>         <chr>         <chr>       <chr>     \n1 2020-03-01 ตราด          Trat          ภาคตะวันออก  east      \n2 2020-05-01 เชียงใหม่       Chiang Mai    ภาคเหนือ     north     \n3 2020-06-01 ชลบุรี          Chon Buri     ภาคตะวันออก  east      \n4 2021-07-01 นครปฐม        Nakhon Pathom ภาคกลาง     central   \n5 2020-08-01 ยะลา          Yala          ภาคใต้       south     \n6 2021-08-01 นครปฐม        Nakhon Pathom ภาคกลาง     central   \n7 2021-08-01 จันทบุรี         Chanthaburi   ภาคตะวันออก  east      \n8 2020-12-01 สมุทรสาคร      Samut Sakhon  ภาคกลาง     central   \n# ℹ 8 more variables: ratio_tourist_stay <dbl>, no_tourist_stay <dbl>,\n#   no_tourist_all <dbl>, no_tourist_thai <dbl>, no_tourist_foreign <dbl>,\n#   revenue_all <dbl>, revenue_thai <dbl>, revenue_foreign <dbl>\n```\n\n\n:::\n:::\n\n\n\nSince this anomaly only pertains to a few rows of data, I'll assume data entry error and re-code those revenue_foreign anomalies to 0 and cap the no_tourist_stay to no_tourist_all.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ntbl_tourism_wide <- tbl_tourism_wide %>%\n  mutate(revenue_foreign = if_else(revenue_foreign < 0, 0, revenue_foreign),\n         no_tourist_stay = if_else(no_tourist_stay > no_tourist_all, no_tourist_all, no_tourist_stay))\n\n# Check output\nsummary(tbl_tourism_wide)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n      date            province_thai      province_eng       region_thai       \n Min.   :2019-01-01   Length:3850        Length:3850        Length:3850       \n 1st Qu.:2020-01-01   Class :character   Class :character   Class :character  \n Median :2021-01-16   Mode  :character   Mode  :character   Mode  :character  \n Mean   :2021-01-15                                                           \n 3rd Qu.:2022-02-01                                                           \n Max.   :2023-02-01                                                           \n  region_eng        ratio_tourist_stay no_tourist_stay   no_tourist_all   \n Length:3850        Min.   : 0.00      Min.   :      0   Min.   :      0  \n Class :character   1st Qu.:20.18      1st Qu.:  16259   1st Qu.:  39092  \n Mode  :character   Median :41.81      Median :  44579   Median :  92122  \n                    Mean   :38.93      Mean   : 105134   Mean   : 206328  \n                    3rd Qu.:56.20      3rd Qu.:  90902   3rd Qu.: 203646  \n                    Max.   :95.86      Max.   :3335728   Max.   :6131044  \n no_tourist_thai   no_tourist_foreign   revenue_all         revenue_thai      \n Min.   :      0   Min.   :      0.0   Min.   :0.000e+00   Min.   :0.000e+00  \n 1st Qu.:  37169   1st Qu.:     49.2   1st Qu.:6.332e+07   1st Qu.:5.925e+07  \n Median :  88782   Median :    553.0   Median :1.955e+08   Median :1.773e+08  \n Mean   : 173962   Mean   :  32366.1   Mean   :1.344e+09   Mean   :6.636e+08  \n 3rd Qu.: 184256   3rd Qu.:   5189.5   3rd Qu.:5.060e+08   3rd Qu.:4.600e+08  \n Max.   :4087756   Max.   :2473725.0   Max.   :1.103e+11   Max.   :4.506e+10  \n revenue_foreign    \n Min.   :0.000e+00  \n 1st Qu.:1.100e+05  \n Median :1.540e+06  \n Mean   :6.802e+08  \n 3rd Qu.:1.742e+07  \n Max.   :8.503e+10  \n```\n\n\n:::\n:::\n\n\n\nTo facilitate spatial autocorrelation across space and space and time, I need the tourism data in different formats. While doing so, additional KPIs will also be calculated. Rationale for those will be further explained while exploring the data.\n\n::: panel-tabset\n# Overall\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Summarize across all years\ntbl_tourism_sum_all <- tbl_tourism_wide %>%\n  group_by(province_eng, province_thai, region_thai, region_eng) %>%\n  summarize(\n    ratio_tourist_stay = mean(ratio_tourist_stay, na.rm = TRUE),\n    no_tourist_stay = sum(no_tourist_stay, na.rm = TRUE),\n    no_tourist_all = sum(no_tourist_all, na.rm = TRUE),\n    no_tourist_thai = sum(no_tourist_thai, na.rm = TRUE),\n    no_tourist_foreign = sum(no_tourist_foreign, na.rm = TRUE),\n    revenue_all = sum(revenue_all, na.rm = TRUE),\n    revenue_thai = sum(revenue_thai, na.rm = TRUE),\n    revenue_foreign = sum(revenue_foreign, na.rm = TRUE)\n  ) %>%\n  ungroup()\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\n`summarise()` has grouped output by 'province_eng', 'province_thai',\n'region_thai'. You can override using the `.groups` argument.\n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n# Compute additional KPIs\ntbl_tourism_sum_all <- tbl_tourism_sum_all %>%\n  mutate(tourist_thai_prop = ifelse(no_tourist_all == 0, 0, no_tourist_thai/no_tourist_all),\n         tourist_foreign_prop = ifelse(no_tourist_all == 0, 0, no_tourist_foreign/no_tourist_all),\n         revenue_thai_prop = ifelse(revenue_all == 0, 0, revenue_thai/revenue_all),\n         revenue_foreign_prop = ifelse(revenue_all == 0, 0, revenue_foreign/revenue_all),\n         revenue_tourist_all = ifelse(no_tourist_all == 0, 0, revenue_all/no_tourist_all),\n         revenue_tourist_thai = ifelse(no_tourist_thai == 0, 0, revenue_thai/no_tourist_thai),\n         revenue_tourist_foreign = ifelse(no_tourist_foreign == 0, 0, revenue_foreign/no_tourist_foreign),\n         revenue_tourist_stay = ifelse(no_tourist_stay == 0, 0, revenue_all/no_tourist_stay),\n         tourist_stay_all = ifelse(no_tourist_all == 0, 0, no_tourist_stay/no_tourist_all))\n\n# Check output\nsummary(tbl_tourism_sum_all)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n province_eng       province_thai      region_thai         region_eng       \n Length:77          Length:77          Length:77          Length:77         \n Class :character   Class :character   Class :character   Class :character  \n Mode  :character   Mode  :character   Mode  :character   Mode  :character  \n                                                                            \n                                                                            \n                                                                            \n ratio_tourist_stay no_tourist_stay    no_tourist_all      no_tourist_thai    \n Min.   :28.25      Min.   :  259406   Min.   :   772281   Min.   :   750474  \n 1st Qu.:35.02      1st Qu.: 1240268   1st Qu.:  3155560   1st Qu.:  2943753  \n Median :38.76      Median : 2520445   Median :  5474592   Median :  4583102  \n Mean   :38.93      Mean   : 5256719   Mean   : 10316425   Mean   :  8698118  \n 3rd Qu.:42.78      3rd Qu.: 4580731   3rd Qu.: 10819668   3rd Qu.:  9615273  \n Max.   :52.22      Max.   :75436842   Max.   :151352500   Max.   :106899866  \n no_tourist_foreign  revenue_all         revenue_thai       revenue_foreign    \n Min.   :    3771   Min.   :8.961e+08   Min.   :8.918e+08   Min.   :4.300e+06  \n 1st Qu.:   37764   1st Qu.:5.416e+09   1st Qu.:4.860e+09   1st Qu.:7.466e+07  \n Median :  127404   Median :1.330e+10   Median :1.179e+10   Median :3.856e+08  \n Mean   : 1618306   Mean   :6.719e+10   Mean   :3.318e+10   Mean   :3.401e+10  \n 3rd Qu.:  653537   3rd Qu.:2.306e+10   3rd Qu.:2.188e+10   3rd Qu.:2.242e+09  \n Max.   :44452634   Max.   :1.847e+12   Max.   :7.407e+11   Max.   :1.106e+12  \n tourist_thai_prop tourist_foreign_prop revenue_thai_prop revenue_foreign_prop\n Min.   :0.3543    Min.   :0.002864     Min.   :0.1194    Min.   :0.003415    \n 1st Qu.:0.9320    1st Qu.:0.011023     1st Qu.:0.8835    1st Qu.:0.013795    \n Median :0.9789    Median :0.021105     Median :0.9648    Median :0.035169    \n Mean   :0.9158    Mean   :0.084222     Mean   :0.8766    Mean   :0.123400    \n 3rd Qu.:0.9890    3rd Qu.:0.068013     3rd Qu.:0.9862    3rd Qu.:0.116452    \n Max.   :0.9971    Max.   :0.645727     Max.   :0.9966    Max.   :0.880606    \n revenue_tourist_all revenue_tourist_thai revenue_tourist_foreign\n Min.   :  907.7     Min.   :  906.8      Min.   : 1068          \n 1st Qu.: 1500.3     1st Qu.: 1499.0      1st Qu.: 2092          \n Median : 1990.7     Median : 1969.7      Median : 2876          \n Mean   : 3454.3     Mean   : 2805.1      Mean   : 5212          \n 3rd Qu.: 3325.0     3rd Qu.: 3085.8      3rd Qu.: 4743          \n Max.   :30610.0     Max.   :13343.8      Max.   :41744          \n revenue_tourist_stay tourist_stay_all\n Min.   : 2394        Min.   :0.0885  \n 1st Qu.: 3843        1st Qu.:0.3102  \n Median : 4672        Median :0.4984  \n Mean   : 6765        Mean   :0.4983  \n 3rd Qu.: 7129        3rd Qu.:0.6360  \n Max.   :34955        Max.   :0.9044  \n```\n\n\n:::\n:::\n\n\n\n# By Year\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Summarize across all years\ntbl_tourism_sum_year <- tbl_tourism_wide %>%\n  mutate(year = year(date)) %>%\n  group_by(year, province_eng, province_thai, region_thai, region_eng) %>%\n  summarize(\n    ratio_tourist_stay = mean(ratio_tourist_stay, na.rm = TRUE),\n    no_tourist_stay = sum(no_tourist_stay, na.rm = TRUE),\n    no_tourist_all = sum(no_tourist_all, na.rm = TRUE),\n    no_tourist_thai = sum(no_tourist_thai, na.rm = TRUE),\n    no_tourist_foreign = sum(no_tourist_foreign, na.rm = TRUE),\n    revenue_all = sum(revenue_all, na.rm = TRUE),\n    revenue_thai = sum(revenue_thai, na.rm = TRUE),\n    revenue_foreign = sum(revenue_foreign, na.rm = TRUE)\n  ) %>%\n  ungroup()\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\n`summarise()` has grouped output by 'year', 'province_eng', 'province_thai',\n'region_thai'. You can override using the `.groups` argument.\n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n# Compute additional KPIs\ntbl_tourism_sum_year <- tbl_tourism_sum_year %>%\n  mutate(tourist_thai_prop = ifelse(no_tourist_all == 0, 0, no_tourist_thai/no_tourist_all),\n         tourist_foreign_prop = ifelse(no_tourist_all == 0, 0, no_tourist_foreign/no_tourist_all),\n         revenue_thai_prop = ifelse(revenue_all == 0, 0, revenue_thai/revenue_all),\n         revenue_foreign_prop = ifelse(revenue_all == 0, 0, revenue_foreign/revenue_all),\n         revenue_tourist_all = ifelse(no_tourist_all == 0, 0, revenue_all/no_tourist_all),\n         revenue_tourist_thai = ifelse(no_tourist_thai == 0, 0, revenue_thai/no_tourist_thai),\n         revenue_tourist_foreign = ifelse(no_tourist_foreign == 0, 0, revenue_foreign/no_tourist_foreign),\n         revenue_tourist_stay = ifelse(no_tourist_stay == 0, 0, revenue_all/no_tourist_stay),\n         tourist_stay_all = ifelse(no_tourist_all == 0, 0, no_tourist_stay/no_tourist_all))\n\n# Check output\nsummary(tbl_tourism_sum_year)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n      year      province_eng       province_thai      region_thai       \n Min.   :2019   Length:385         Length:385         Length:385        \n 1st Qu.:2020   Class :character   Class :character   Class :character  \n Median :2021   Mode  :character   Mode  :character   Mode  :character  \n Mean   :2021                                                           \n 3rd Qu.:2022                                                           \n Max.   :2023                                                           \n  region_eng        ratio_tourist_stay no_tourist_stay    no_tourist_all    \n Length:385         Min.   : 5.452     Min.   :   13523   Min.   :   45008  \n Class :character   1st Qu.:25.977     1st Qu.:  176772   1st Qu.:  425219  \n Mode  :character   Median :42.385     Median :  400926   Median :  889499  \n                    Mean   :42.228     Mean   : 1051344   Mean   : 2063285  \n                    3rd Qu.:57.638     3rd Qu.:  933078   3rd Qu.: 2072363  \n                    Max.   :92.170     Max.   :36407624   Max.   :66966562  \n no_tourist_thai    no_tourist_foreign  revenue_all         revenue_thai      \n Min.   :   44180   Min.   :       0   Min.   :4.204e+07   Min.   :4.165e+07  \n 1st Qu.:  387805   1st Qu.:    2221   1st Qu.:7.809e+08   1st Qu.:7.160e+08  \n Median :  852972   Median :   11860   Median :1.873e+09   Median :1.746e+09  \n Mean   : 1739624   Mean   :  323661   Mean   :1.344e+10   Mean   :6.636e+09  \n 3rd Qu.: 1799767   3rd Qu.:   79008   3rd Qu.:5.134e+09   3rd Qu.:4.647e+09  \n Max.   :42073847   Max.   :24892715   Max.   :1.068e+12   Max.   :3.846e+11  \n revenue_foreign     tourist_thai_prop tourist_foreign_prop revenue_thai_prop\n Min.   :0.000e+00   Min.   :0.2104    Min.   :0.000000     Min.   :0.05123  \n 1st Qu.:4.880e+06   1st Qu.:0.9468    1st Qu.:0.004155     1st Qu.:0.92557  \n Median :3.119e+07   Median :0.9875    Median :0.012525     Median :0.98198  \n Mean   :6.802e+09   Mean   :0.9315    Mean   :0.068537     Mean   :0.90492  \n 3rd Qu.:2.702e+08   3rd Qu.:0.9958    3rd Qu.:0.053158     3rd Qu.:0.99451  \n Max.   :6.832e+11   Max.   :1.0000    Max.   :0.789559     Max.   :1.00000  \n revenue_foreign_prop revenue_tourist_all revenue_tourist_thai\n Min.   :0.000000     Min.   :  695.6     Min.   :  695.2     \n 1st Qu.:0.005495     1st Qu.: 1394.0     1st Qu.: 1382.6     \n Median :0.018025     Median : 1983.6     Median : 1937.6     \n Mean   :0.095078     Mean   : 3207.1     Mean   : 2690.1     \n 3rd Qu.:0.074430     3rd Qu.: 3185.7     3rd Qu.: 3113.0     \n Max.   :0.948773     Max.   :36131.4     Max.   :15683.4     \n revenue_tourist_foreign revenue_tourist_stay tourist_stay_all \n Min.   :    0           Min.   : 2030        Min.   :0.05899  \n 1st Qu.: 1931           1st Qu.: 3557        1st Qu.:0.33405  \n Median : 2657           Median : 4743        Median :0.48410  \n Mean   : 4603           Mean   : 6427        Mean   :0.49282  \n 3rd Qu.: 4373           3rd Qu.: 7059        3rd Qu.:0.61740  \n Max.   :58147           Max.   :44768        Max.   :0.95484  \n```\n\n\n:::\n:::\n\n\n\n# By Year & Month\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# No additional processing required\n# Compute additional KPIs\ntbl_tourism_wide <- tbl_tourism_wide %>%\n  mutate(tourist_thai_prop = ifelse(no_tourist_all == 0, 0, no_tourist_thai/no_tourist_all),\n         tourist_foreign_prop = ifelse(no_tourist_all == 0, 0, no_tourist_foreign/no_tourist_all),\n         revenue_thai_prop = ifelse(revenue_all == 0, 0, revenue_thai/revenue_all),\n         revenue_foreign_prop = ifelse(revenue_all == 0, 0, revenue_foreign/revenue_all),\n         revenue_tourist_all = ifelse(no_tourist_all == 0, 0, revenue_all/no_tourist_all),\n         revenue_tourist_thai = ifelse(no_tourist_thai == 0, 0, revenue_thai/no_tourist_thai),\n         revenue_tourist_foreign = ifelse(no_tourist_foreign == 0, 0, revenue_foreign/no_tourist_foreign),\n         revenue_tourist_stay = ifelse(no_tourist_stay == 0, 0, revenue_all/no_tourist_stay),\n         tourist_stay_all = ifelse(no_tourist_all == 0, 0, no_tourist_stay/no_tourist_all))\n\n# Check output\nsummary(tbl_tourism_wide)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n      date            province_thai      province_eng       region_thai       \n Min.   :2019-01-01   Length:3850        Length:3850        Length:3850       \n 1st Qu.:2020-01-01   Class :character   Class :character   Class :character  \n Median :2021-01-16   Mode  :character   Mode  :character   Mode  :character  \n Mean   :2021-01-15                                                           \n 3rd Qu.:2022-02-01                                                           \n Max.   :2023-02-01                                                           \n  region_eng        ratio_tourist_stay no_tourist_stay   no_tourist_all   \n Length:3850        Min.   : 0.00      Min.   :      0   Min.   :      0  \n Class :character   1st Qu.:20.18      1st Qu.:  16259   1st Qu.:  39092  \n Mode  :character   Median :41.81      Median :  44579   Median :  92122  \n                    Mean   :38.93      Mean   : 105134   Mean   : 206328  \n                    3rd Qu.:56.20      3rd Qu.:  90902   3rd Qu.: 203646  \n                    Max.   :95.86      Max.   :3335728   Max.   :6131044  \n no_tourist_thai   no_tourist_foreign   revenue_all         revenue_thai      \n Min.   :      0   Min.   :      0.0   Min.   :0.000e+00   Min.   :0.000e+00  \n 1st Qu.:  37169   1st Qu.:     49.2   1st Qu.:6.332e+07   1st Qu.:5.925e+07  \n Median :  88782   Median :    553.0   Median :1.955e+08   Median :1.773e+08  \n Mean   : 173962   Mean   :  32366.1   Mean   :1.344e+09   Mean   :6.636e+08  \n 3rd Qu.: 184256   3rd Qu.:   5189.5   3rd Qu.:5.060e+08   3rd Qu.:4.600e+08  \n Max.   :4087756   Max.   :2473725.0   Max.   :1.103e+11   Max.   :4.506e+10  \n revenue_foreign     tourist_thai_prop tourist_foreign_prop revenue_thai_prop\n Min.   :0.000e+00   Min.   :0.0000    Min.   :0.0000000    Min.   :0.0000   \n 1st Qu.:1.100e+05   1st Qu.:0.9627    1st Qu.:0.0008535    1st Qu.:0.9511   \n Median :1.540e+06   Median :0.9932    Median :0.0066240    Median :0.9911   \n Mean   :6.802e+08   Mean   :0.9297    Mean   :0.0637772    Mean   :0.9090   \n 3rd Qu.:1.742e+07   3rd Qu.:0.9990    3rd Qu.:0.0346323    3rd Qu.:0.9988   \n Max.   :8.503e+10   Max.   :1.0000    Max.   :1.0000000    Max.   :1.0016   \n revenue_foreign_prop revenue_tourist_all revenue_tourist_thai\n Min.   :0.000000     Min.   :     0      Min.   :    0       \n 1st Qu.:0.001126     1st Qu.:  1366      1st Qu.: 1345       \n Median :0.008700     Median :  1932      Median : 1880       \n Mean   :0.084802     Mean   :  3513      Mean   : 2614       \n 3rd Qu.:0.045997     3rd Qu.:  3199      3rd Qu.: 3082       \n Max.   :1.000000     Max.   :300000      Max.   :17325       \n revenue_tourist_foreign revenue_tourist_stay tourist_stay_all\n Min.   :    0           Min.   :     0       Min.   :0.0000  \n 1st Qu.: 1294           1st Qu.:  3187       1st Qu.:0.3543  \n Median : 2372           Median :  4448       Median :0.5128  \n Mean   : 4504           Mean   :  6428       Mean   :0.5270  \n 3rd Qu.: 4137           3rd Qu.:  6754       3rd Qu.:0.6981  \n Max.   :65000           Max.   :300000       Max.   :1.0000  \n```\n\n\n:::\n:::\n\n\n:::\n\n### 1.2.3 Merge Tourism data\n\nFinally, I can merge the tourism dataset to the spatial dataset using `left_join` from dplyr. These are sorted to facilitate filtering later.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Join with tourism data all\nth_bound_tour_all <- left_join(th_bound_l1, tbl_tourism_sum_all, by = c(\"ADM1_EN\" = \"province_eng\")) %>%\n  arrange(ADM1_EN)\n\n# Join with tourism data by year\nth_bound_tour_year <- left_join(th_bound_l1, tbl_tourism_sum_year, by = c(\"ADM1_EN\" = \"province_eng\")) %>%\n  arrange(year, ADM1_EN)\n\n\n# Join with tourism data by year and month\nth_bound_tour_year_month <- left_join(th_bound_l1, tbl_tourism_wide, by = c(\"ADM1_EN\" = \"province_eng\")) %>%\n  arrange(date.y, ADM1_EN)\n```\n:::\n\n\n\nA good practise is to save these processed datasets for easy retrieval.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Export to processed sub-folder as RDS\nwrite_rds(th_bound_tour_all, 'data/processed/th_bound_tour_all.rds')\n\nwrite_rds(th_bound_tour_year, 'data/processed/th_bound_tour_year.rds')\n\nwrite_rds(th_bound_tour_year_month, 'data/processed/th_bound_tour_year_month.rds')\n```\n:::\n\n\n\nAfter clearing the r environment, I'll load in the various datasets.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Clear R console\nrm(list = ls(all.names = TRUE))\n\n# Load various processed dataset\nth_bound_tour_all <- read_rds('data/processed/th_bound_tour_all.rds')\nth_bound_tour_year <- read_rds('data/processed/th_bound_tour_year.rds')\nth_bound_tour_year_month <- read_rds('data/processed/th_bound_tour_year_month.rds')\n```\n:::\n\n\n\n# 2 Exploratory Data Analysis\n\nIn this section, I will explore the various tourism indicators provided by the dataset.\n\n| Variable           | Definition                                                        |\n|-------------------------|-----------------------------------------------|\n| revenue_all        | Revenue generated by all tourists in the province (Thai Baht)     |\n| revenue_thai       | Revenue generated by Thai tourists in the province (Thai Baht)    |\n| revenue_foreign    | Revenue generated by Foreign tourists in the province (Thai Baht) |\n| no_tourist_all     | Total number of tourists who visited the province                 |\n| no_tourist_thai    | Number of Thai tourists who visited the province                  |\n| no_tourist_foreign | Number of Foreign tourists who visited the province               |\n| ratio_tourist_stay | Occupancy rate - Percentage of occupied travel accomodation       |\n| no_tourist_stay    | Number of Tourists who stayed overnight in the province           |\n\nLets first check the revenue indicators.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Visualize for revenue\nrevenue_all <- ggplot(data=th_bound_tour_all, \n                      aes(x=`revenue_all`)) +\n  geom_histogram(bins=20, \n                 color=\"black\", \n                 fill=\"light blue\") + \n  labs(x = \"Revenue from all tourists\")\n\nrevenue_thai <- ggplot(data=th_bound_tour_all, \n                      aes(x=`revenue_thai`)) +\n  geom_histogram(bins=20, \n                 color=\"black\", \n                 fill=\"light blue\") + \n  labs(x = \"Revenue from Thai tourists\")\n\nrevenue_foreign <- ggplot(data=th_bound_tour_all, \n                      aes(x=`revenue_foreign`)) +\n  geom_histogram(bins=20, \n                 color=\"black\", \n                 fill=\"light blue\") + \n  labs(x = \"Revenue from Foreign tourists\")\n\nggarrange(revenue_all, revenue_thai, revenue_foreign, ncol = 3)\n```\n\n::: {.cell-output-display}\n![](Take-Home_Ex02_files/figure-html/unnamed-chunk-16-1.png){width=672}\n:::\n:::\n\n\n\nAs expected, there is a large left skew, with majority of provinces generating much lesser revenue as compared to the outliers. Lets look at the tourist count then.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Visualize for tourist\ntourist_all <- ggplot(data=th_bound_tour_all, \n                      aes(x=`no_tourist_all`)) +\n  geom_histogram(bins=20, \n                 color=\"black\", \n                 fill=\"light blue\") + \n  labs(x = \"Total Number of tourists\")\n\ntourist_thai <- ggplot(data=th_bound_tour_all, \n                      aes(x=`no_tourist_thai`)) +\n  geom_histogram(bins=20, \n                 color=\"black\", \n                 fill=\"light blue\") + \n  labs(x = \"Number of Thai tourists\")\n\ntourist_foreign <- ggplot(data=th_bound_tour_all, \n                      aes(x=`no_tourist_foreign`)) +\n  geom_histogram(bins=20, \n                 color=\"black\", \n                 fill=\"light blue\") + \n  labs(x = \"Number of Foreign tourists\")\n\nggarrange(tourist_all, tourist_thai, tourist_foreign, ncol = 3)\n```\n\n::: {.cell-output-display}\n![](Take-Home_Ex02_files/figure-html/unnamed-chunk-17-1.png){width=672}\n:::\n:::\n\n\n\nAgain, we see the same distribution for tourist count as compared to revenue. This is can be clearly illustrated when we plot both revenue and tourists as choropleth maps.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ntourist.map <- tm_shape(th_bound_tour_all) + \n  tm_fill(col = \"no_tourist_all\",\n          n = 5,\n          style = \"jenks\", \n          title = \"Total Tourist\") + \n  tm_borders(alpha = 0.5) \n\nrevenue.map <- tm_shape(th_bound_tour_all) + \n  tm_fill(col = \"revenue_all\",\n          n = 5,\n          style = \"jenks\",\n          title = \"Total Revenue\") + \n  tm_borders(alpha = 0.5) \n\ntmap_arrange(tourist.map, revenue.map,\n             asp=NA, ncol=2)\n```\n\n::: {.cell-output-display}\n![](Take-Home_Ex02_files/figure-html/unnamed-chunk-18-1.png){width=1152}\n:::\n:::\n\n\n\nIt is clear that provinces with larger volume of tourists will generate larger revenue. However, that is not necessarily a good indicator of the tourism economy. Other than just trying to increase revenue by increasing the tourist traffic, the Thai government will also be keen into other indicators.\n\n## 2.1 Feature Engineering\n\nOther variables are created in order to provide greater depth to analysing the Thai tourism economy.\n\n| Variable                | Definition                                          |\n|-------------------------|-----------------------------------------------|\n| tourist_thai_prop       | Proportion of tourists who are Thai                 |\n| tourist_foreign_prop    | Proportion of tourists who are Foreign              |\n| revenue_thai_prop       | Proportion of revenue generated by Thai tourists    |\n| revenue_foreign_prop    | Proportion of revenue generated by Foreign tourists |\n| revenue_tourist_all     | Revenue generated per tourist                       |\n| revenue_tourist_thai    | Revenue generated per Thai tourist                  |\n| revenue_tourist_foreign | Revenue generated per Foreign tourist               |\n| revenue_tourist_stay    | Revenue generated per tourist who stay overnight    |\n| tourist_stay_all        | Proportion of tourists who stayed overnight         |\n\nHere's a quick check for 1 of the\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Visualize revenue per tourist\ntm_shape(th_bound_tour_all) + \n  tm_fill(col = \"revenue_tourist_all\",\n          n = 5,\n          style = \"jenks\", \n          title = \"Revenue per Tourist\") + \n  tm_borders(alpha = 0.5) \n```\n\n::: {.cell-output-display}\n![](Take-Home_Ex02_files/figure-html/unnamed-chunk-19-1.png){width=1152}\n:::\n:::\n\n\n\nThis clearly shows a different distribution compared to the basic revenue/tourist count distribution. This indicator is also important the Thai government can try to increase total tourism revenue by increasing per Thai Baht spent by each tourist.\n\n## 2.2 Power BI Visualization\n\nPress play to see how the values change across time!\n\n::: {style=\"position: relative; width: 100%; height: 0; padding-bottom: 56.25%;\"}\n<iframe title=\"Geospatial TakeHome Ex01\" src=\"https://app.powerbi.com/view?r=eyJrIjoiYzQ3MTQzY2ItNjMyZi00ZWIwLTliYTUtOGQwM2JhNWM3OTVhIiwidCI6ImRmNGU4MzA3LWRjNjQtNDcyYS1iNGI1LWE2ZGQ2YmExMTU2NiIsImMiOjEwfQ%3D%3D\" frameborder=\"0\" allowFullScreen=\"true\" style=\"position: absolute; top: 0; left: 0; width: 100%; height: 100%;\">\n\n</iframe>\n:::\n\nAlthought Bangkok accounts for the overwhelming proportion of revenue and tourist count, other provinces can also be viewed to be important to Thailand's tourism economy. Some provinces are largely skewed towards foreign tourists (i.e Bangkok Metropolitan Region, provinces surrounding Phuket such as Phang Nga and Surat Thani)\n\nIn terms of spending per tourist, less prominent provinces (i.e Songkhla) may place within the top provinces, showing the potential for larger provinces to improve their tourist offerings.\n\nFinally, by comparing the tourist proportion (foreign vs Thai) against proportion of tourists who stay over, it can be interesting to note the different tourism dynamics for each province.\n\n-   Phuket - revenue largely driven by foreign tourists (88%), high proportion of tourists who stay over (65%)\n-   Phang Nga - province near Phuket (revenue also driven by foreign tourists 80%) but low proportion of tourists who stay over (29%), suggesting it is a stopover visit as foreign tourists center their travel plans around Phuket instead\n-   Bangkok - revenue somewhat driven by Foreign tourists (60%), with only 50% of tourists who stay over, suggesting it is a place where people travel to as a quick getaway (usually a daytrip)\n-   Ma Hong Son - revenue largely driven by Thai tourists (78%), high proportion of tourists who stay over (90%), suggesting that it is a place where locals go to for an extended holiday given its location (at the edges of Thailand).\n\n# 3 Global Spatial Autocorrelation Analysis of Thailand Tourism Key Indicators\n\nIn order to determine whether tourism indicators are independent of space, and space and time, I would need to do the following:\n\n1.  Compute Spatial Weights\n    a.  Get list of neighbours\n    b.  Calculate weights\n2.  Perform Global Moran's I on key indicators\n\nGeary's C will not be conducted as it heavily overlaps with Moran's I (in terms of the objective).\n\n## 3.1 Spatial Weights Matrix\n\nThere are a few options to get the list of neighbours in `sfdep` package:\n\n| Method                          | Details                                                                      |\n|-------------------------|-----------------------------------------------|\n| `st_contiguity` (i.e. Queen)    | Based on regions with contiguous boundaries (uses `spdep::poly2nb`)          |\n| `st_dist_band` (fixed distance) | Based on distance band (uses `spdep::dnearneigh`)                            |\n| `st_knn` (adaptive distance)    | Based on k nearest neighbours (uses `spdep::knearneigh` and `spdep::knn2nb`) |\n\nBefore passing the coordinates to either functions, checks are required to ensure that the points are in the interior of each province (i.e. not in the middle of the ocean).\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Generate coordinates using st_centroid\nlongitude_cent <- map_dbl(th_bound_tour_all$geometry, ~st_centroid(.x)[[1]])\nlatitude_cent <- map_dbl(th_bound_tour_all$geometry, ~st_centroid(.x)[[2]])\ncoords_cent <- cbind(longitude_cent, latitude_cent)\n\n# Generate coordinates using st_point_on_surface\nlongitude <- map_dbl(th_bound_tour_all$geometry, ~st_point_on_surface(.x)[[1]])\nlatitude <- map_dbl(th_bound_tour_all$geometry, ~st_point_on_surface(.x)[[2]])\ncoords <- cbind(longitude, latitude)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n# Visualise both points on a map to verify\nplot(th_bound_tour_all$geometry, border=\"lightgrey\", main = \"Points Comparison\")\npoints(coords_cent, pch = 19, cex = 0.2, col = \"red\")\npoints(coords, pch = 19, cex = 0.2, col = \"blue\")\nlegend(\"topright\", legend = c(\"st_centroid\", \"st_point_on_surface-\"), \n       col = c(\"red\", \"blue\"), pch = 19, cex = 0.8)\n```\n\n::: {.cell-output-display}\n![](Take-Home_Ex02_files/figure-html/unnamed-chunk-21-1.png){width=1152}\n:::\n:::\n\n\n\nAfter closely viewing the plot, all points from `st_centroid` are within the interior of the province polygons. With the exception of a few provinces, the points from `st_centroid` are seemingly better placed towards the center as compared to `st_point_on_surface`. Therefore, this allows the sfdep distance based neighbour functions to be used with ease considering st_centroid is used as the default.\n\n::: panel-tabset\n# st_contiguity\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Calculate neighbours\nnb_contiguity <- st_contiguity(th_bound_tour_all$geometry)\n\n# Check output\nnb_contiguity\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nNeighbour list object:\nNumber of regions: 77 \nNumber of nonzero links: 352 \nPercentage nonzero weights: 5.93692 \nAverage number of links: 4.571429 \n1 region with no links:\n48\n2 disjoint connected subgraphs\n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n# Visualize neighbours\nplot(th_bound_tour_all$geometry, border=\"lightgrey\", , main=\"Queen Contiguity \")\nplot(nb_contiguity, coords_cent, pch = 19, cex = 0.6, add = TRUE, col = \"red\")\n```\n\n::: {.cell-output-display}\n![](Take-Home_Ex02_files/figure-html/unnamed-chunk-23-1.png){width=1152}\n:::\n:::\n\n\n\n# st_dist_band\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Calculate neighbours\nnb_dist <- st_dist_band(th_bound_tour_all$geometry)\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\n! Polygon provided. Using point on surface.\n```\n\n\n:::\n\n```{.r .cell-code}\n# Check output\nnb_dist\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nNeighbour list object:\nNumber of regions: 77 \nNumber of nonzero links: 474 \nPercentage nonzero weights: 7.994603 \nAverage number of links: 6.155844 \n2 disjoint connected subgraphs\n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n# Visualize neighbours\nplot(th_bound_tour_all$geometry, border=\"lightgrey\", main=\"Distance Band\")\nplot(nb_dist, coords_cent, pch = 19, cex = 0.6, add = TRUE, col = \"red\")\n```\n\n::: {.cell-output-display}\n![](Take-Home_Ex02_files/figure-html/unnamed-chunk-25-1.png){width=1152}\n:::\n:::\n\n\n\n# st_knn\n\nGeneral rule of thumb for k is square root of observations. $$\nk \\approx \\sqrt{76} \\approx 8\n$$ Just for variety, k = 5 (average number from `st_contiguity`) is also run.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Calculate neighbours\nnb_knn_8 <- st_knn(th_bound_tour_all$geometry, k = 8)\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\n! Polygon provided. Using point on surface.\n```\n\n\n:::\n\n```{.r .cell-code}\nnb_knn_5 <- st_knn(th_bound_tour_all$geometry, k = 5)\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\n! Polygon provided. Using point on surface.\n```\n\n\n:::\n\n```{.r .cell-code}\n# Check output\nnb_knn_8\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nNeighbour list object:\nNumber of regions: 77 \nNumber of nonzero links: 616 \nPercentage nonzero weights: 10.38961 \nAverage number of links: 8 \nNon-symmetric neighbours list\n```\n\n\n:::\n\n```{.r .cell-code}\nnb_knn_5\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nNeighbour list object:\nNumber of regions: 77 \nNumber of nonzero links: 385 \nPercentage nonzero weights: 6.493506 \nAverage number of links: 5 \nNon-symmetric neighbours list\n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n# Visualize neighbours\npar(mfrow=c(1,2))\nplot(th_bound_tour_all$geometry, border=\"lightgrey\", main=\"K = 8\")\nplot(nb_knn_8, coords_cent, pch = 19, cex = 0.6, add = TRUE, col = \"red\")\nplot(th_bound_tour_all$geometry, border=\"lightgrey\", main=\"K = 5\")\nplot(nb_knn_5, coords_cent, pch = 19, cex = 0.6, add = TRUE, col = \"red\")\n```\n\n::: {.cell-output-display}\n![](Take-Home_Ex02_files/figure-html/unnamed-chunk-27-1.png){width=1152}\n:::\n:::\n\n\n:::\n\nComparing the various neighbour methods, I have decided on the adaptive method of determining neighbours, specifically k = 5. Reason are as follows:\n\n-   `st_contiguity` - Not appropriate for this case since not all boundaries are contiguous, (i.e. there is an island - Phuket).\n-   `st_dist_band` - Having a fixed distance causes urban provinces to have much more neighbours (i.e. Bangkok Metropolitan Region) while rural provinces have scarce neighbours. I feel that this is not an appropriate relationship for analyzing tourism indicators.\n-   `st_knn` (k = 8) - Judging from the plot, the neighbour list seemed to be much to congested. k = 5 provides a more reasonable structure.\n\nAlthough I have determined the neighbour list, there are also a few options to generate the weights:\n\n| Method                | Details                                          |\n|-----------------------|--------------------------------------------------|\n| `st_weights`          | Standardized weights based on neighbour list     |\n| `st_kernel_weights`   | Weights based on kernel functions and distance   |\n| `st_inverse_distance` | Weights based on inverse distance between points |\n\nGiven the context of tourism, I have decided to explore `st_weights` and `st_inverse_distance`. The rationale for both are as follows:\n\n-   `st_weights` - ensure that all neighbours have equal influence\n-   `st_inverse_distance` - distance is likely a factor especially for specific tourism indicators (i.e. local preferring areas that are closer for a quick getaway, affecting indicators involving overnight stays)\n\nWhile performing `st_weights`, the style is less significant due to the adaptive nature of KNN. W is selected as the default style. Rationale for not choosing the other styles are as follows:\n\n-   B (binary weights) - Does not really matter since neighbours are already treated uniformly\n-   C (globally standardized weights) - Will dilute local effects making it not suitable for tourism analysis\n-   U (equal weights) - Similar to C, less focused on local effects required for tourism analysis\n-   S (variance-stabilizing) - More relevant for analysis where variance stability is important\n-   minmax - Similar to C and U with added layer of normalization\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nth_tour_knn5_all <- th_bound_tour_all %>%\n  mutate(nb = nb_knn_5,\n         wt = st_weights(nb, style = \"W\"),\n         wt_inv = st_inverse_distance(include_self(nb), geometry = geometry, scale = 100, alpha = 1),\n         .before = 1)\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\n! Polygon provided. Using point on surface.\n```\n\n\n:::\n:::\n\n\n\n## 3.2 Global Moran’s I across Space\n\nIn performing Global Moran's I, `global_moran_perm` will be used over `global_moran` and `global_moran_test` as:\n\n-   `global_moran` does not give any p-value\n-   `global_moran_test` is not as robust as `global_moran_perm` which is a Monte-Carlo simulation.\n\nThe null and alternative hypothesis for Global Moran's I are:\n\nH0: The attribute is randomly distributed among the provinces, no spatial autocorrelation\n\nH1: The attribute is not randomly distributed among the provinces, spatial autocorrelation\n\n::: panel-tabset\n# Revenue\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nset.seed(42)\nglobal_moran_perm(th_tour_knn5_all$revenue_all,\n                  th_tour_knn5_all$nb,\n                  th_tour_knn5_all$wt,\n                  nsim = 999)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n\n\tMonte-Carlo simulation of Moran I\n\ndata:  x \nweights: listw  \nnumber of simulations + 1: 1000 \n\nstatistic = 0.021003, observed rank = 848, p-value = 0.304\nalternative hypothesis: two.sided\n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nset.seed(42)\nglobal_moran_perm(th_tour_knn5_all$revenue_thai,\n                  th_tour_knn5_all$nb,\n                  th_tour_knn5_all$wt,\n                  nsim = 999)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n\n\tMonte-Carlo simulation of Moran I\n\ndata:  x \nweights: listw  \nnumber of simulations + 1: 1000 \n\nstatistic = -0.0019269, observed rank = 694, p-value = 0.612\nalternative hypothesis: two.sided\n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nset.seed(42)\nglobal_moran_perm(th_tour_knn5_all$revenue_foreign,\n                  th_tour_knn5_all$nb,\n                  th_tour_knn5_all$wt,\n                  nsim = 999)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n\n\tMonte-Carlo simulation of Moran I\n\ndata:  x \nweights: listw  \nnumber of simulations + 1: 1000 \n\nstatistic = 0.035698, observed rank = 897, p-value = 0.206\nalternative hypothesis: two.sided\n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nset.seed(42)\nglobal_moran_perm(th_tour_knn5_all$revenue_thai_prop,\n                  th_tour_knn5_all$nb,\n                  th_tour_knn5_all$wt,\n                  nsim = 999)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n\n\tMonte-Carlo simulation of Moran I\n\ndata:  x \nweights: listw  \nnumber of simulations + 1: 1000 \n\nstatistic = 0.36446, observed rank = 1000, p-value < 2.2e-16\nalternative hypothesis: two.sided\n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nset.seed(42)\nglobal_moran_perm(th_tour_knn5_all$revenue_foreign_prop,\n                  th_tour_knn5_all$nb,\n                  th_tour_knn5_all$wt,\n                  nsim = 999)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n\n\tMonte-Carlo simulation of Moran I\n\ndata:  x \nweights: listw  \nnumber of simulations + 1: 1000 \n\nstatistic = 0.36446, observed rank = 1000, p-value < 2.2e-16\nalternative hypothesis: two.sided\n```\n\n\n:::\n:::\n\n\n\n# Tourist\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nset.seed(42)\nglobal_moran_perm(th_tour_knn5_all$no_tourist_all,\n                  th_tour_knn5_all$nb,\n                  th_tour_knn5_all$wt,\n                  nsim = 999)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n\n\tMonte-Carlo simulation of Moran I\n\ndata:  x \nweights: listw  \nnumber of simulations + 1: 1000 \n\nstatistic = 0.025892, observed rank = 848, p-value = 0.304\nalternative hypothesis: two.sided\n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nset.seed(42)\nglobal_moran_perm(th_tour_knn5_all$no_tourist_thai,\n                  th_tour_knn5_all$nb,\n                  th_tour_knn5_all$wt,\n                  nsim = 999)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n\n\tMonte-Carlo simulation of Moran I\n\ndata:  x \nweights: listw  \nnumber of simulations + 1: 1000 \n\nstatistic = 0.029083, observed rank = 829, p-value = 0.342\nalternative hypothesis: two.sided\n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nset.seed(42)\nglobal_moran_perm(th_tour_knn5_all$no_tourist_foreign,\n                  th_tour_knn5_all$nb,\n                  th_tour_knn5_all$wt,\n                  nsim = 999)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n\n\tMonte-Carlo simulation of Moran I\n\ndata:  x \nweights: listw  \nnumber of simulations + 1: 1000 \n\nstatistic = 0.059863, observed rank = 926, p-value = 0.148\nalternative hypothesis: two.sided\n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nset.seed(42)\nglobal_moran_perm(th_tour_knn5_all$tourist_thai_prop,\n                  th_tour_knn5_all$nb,\n                  th_tour_knn5_all$wt,\n                  nsim = 999)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n\n\tMonte-Carlo simulation of Moran I\n\ndata:  x \nweights: listw  \nnumber of simulations + 1: 1000 \n\nstatistic = 0.39259, observed rank = 1000, p-value < 2.2e-16\nalternative hypothesis: two.sided\n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nset.seed(42)\nglobal_moran_perm(th_tour_knn5_all$tourist_foreign_prop,\n                  th_tour_knn5_all$nb,\n                  th_tour_knn5_all$wt,\n                  nsim = 999)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n\n\tMonte-Carlo simulation of Moran I\n\ndata:  x \nweights: listw  \nnumber of simulations + 1: 1000 \n\nstatistic = 0.39259, observed rank = 1000, p-value < 2.2e-16\nalternative hypothesis: two.sided\n```\n\n\n:::\n:::\n\n\n\n# Revenue/Tourist\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nset.seed(42)\nglobal_moran_perm(th_tour_knn5_all$revenue_tourist_all,\n                  th_tour_knn5_all$nb,\n                  th_tour_knn5_all$wt,\n                  nsim = 999)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n\n\tMonte-Carlo simulation of Moran I\n\ndata:  x \nweights: listw  \nnumber of simulations + 1: 1000 \n\nstatistic = 0.35986, observed rank = 1000, p-value < 2.2e-16\nalternative hypothesis: two.sided\n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nset.seed(42)\nglobal_moran_perm(th_tour_knn5_all$revenue_tourist_thai,\n                  th_tour_knn5_all$nb,\n                  th_tour_knn5_all$wt,\n                  nsim = 999)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n\n\tMonte-Carlo simulation of Moran I\n\ndata:  x \nweights: listw  \nnumber of simulations + 1: 1000 \n\nstatistic = 0.38688, observed rank = 1000, p-value < 2.2e-16\nalternative hypothesis: two.sided\n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nset.seed(42)\nglobal_moran_perm(th_tour_knn5_all$revenue_tourist_foreign,\n                  th_tour_knn5_all$nb,\n                  th_tour_knn5_all$wt,\n                  nsim = 999)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n\n\tMonte-Carlo simulation of Moran I\n\ndata:  x \nweights: listw  \nnumber of simulations + 1: 1000 \n\nstatistic = 0.2972, observed rank = 1000, p-value < 2.2e-16\nalternative hypothesis: two.sided\n```\n\n\n:::\n:::\n\n\n\n# Occupancy Rate\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nset.seed(42)\nglobal_moran_perm(th_tour_knn5_all$ratio_tourist_stay,\n                  th_tour_knn5_all$nb,\n                  th_tour_knn5_all$wt,\n                  nsim = 999)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n\n\tMonte-Carlo simulation of Moran I\n\ndata:  x \nweights: listw  \nnumber of simulations + 1: 1000 \n\nstatistic = 0.087707, observed rank = 931, p-value = 0.138\nalternative hypothesis: two.sided\n```\n\n\n:::\n:::\n\n\n\n# Overnight Guest\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nset.seed(42)\nglobal_moran_perm(th_tour_knn5_all$no_tourist_stay,\n                  th_tour_knn5_all$nb,\n                  th_tour_knn5_all$wt,\n                  nsim = 999)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n\n\tMonte-Carlo simulation of Moran I\n\ndata:  x \nweights: listw  \nnumber of simulations + 1: 1000 \n\nstatistic = 0.027289, observed rank = 828, p-value = 0.344\nalternative hypothesis: two.sided\n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nset.seed(42)\nglobal_moran_perm(th_tour_knn5_all$tourist_stay_all,\n                  th_tour_knn5_all$nb,\n                  th_tour_knn5_all$wt,\n                  nsim = 999)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n\n\tMonte-Carlo simulation of Moran I\n\ndata:  x \nweights: listw  \nnumber of simulations + 1: 1000 \n\nstatistic = 0.35405, observed rank = 1000, p-value < 2.2e-16\nalternative hypothesis: two.sided\n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nset.seed(42)\nglobal_moran_perm(th_tour_knn5_all$revenue_tourist_stay,\n                  th_tour_knn5_all$nb,\n                  th_tour_knn5_all$wt,\n                  nsim = 999)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n\n\tMonte-Carlo simulation of Moran I\n\ndata:  x \nweights: listw  \nnumber of simulations + 1: 1000 \n\nstatistic = 0.35298, observed rank = 1000, p-value < 2.2e-16\nalternative hypothesis: two.sided\n```\n\n\n:::\n:::\n\n\n:::\n\nThe p-value of Moran's I test for basic attributes are \\>0.05, therefore I am not able to reject the null hypothesis for those attributes.\n\nHowever, for the engineered features, the p-value is \\<0.05, allowing me to reject the null hypothesis and conclude that there is sufficient evidence for the alternative hypothesis that there is spatial autocorrelation.\n\nTherefore, with those indicators in mind I can conclude that Thailand's tourism economy is spatial dependent.\n\n## 3.3 Global Moran's I across Space and Time\n\nTo determine whether the tourism indicators are independent of space and time, I will do the following:\n\n1.  Filter the respective datasets by specific time (Year/Year and month)\n2.  Append the neighbour list created in 3.1\n3.  Calculate the spatial weight matrix\n4.  Perform Global Moran's I for all KPIs\n5.  Consolidate the results of the Global Moran's I\n\nSince this is very repetitive, I'll use a function to run this iteratively.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Function to run global_moran_perm iteratively\nrun_global_moran <- function(data, date_col, value, kpi_weight, kpi_inv_dist) {\n  # Filter sf dataframe\n  filtered_data <- data %>%\n    filter(!!sym(date_col) == value)\n  \n  # Append neighbour list and calculate spatial weight matrix\n  filtered_data <- filtered_data %>%\n    mutate(nb = nb_knn_5,\n           wt = st_weights(nb, style = \"W\"),\n           wt_inv = st_inverse_distance(include_self(nb), geometry = coords_cent, \n                                        scale = 100, alpha = 1),\n           .before = 1)\n  \n  # Run global_moran_perm for each KPI in kpi_weight list\n  results_wt <- lapply(kpi_weight, function(kpi) {\n    moran_output <- global_moran_perm(filtered_data[[kpi]],\n                                      filtered_data$nb,\n                                      filtered_data$wt,\n                                      nsim = 999)\n    data.frame(\n      kpi = kpi,\n      statistic = mean(moran_output$res),\n      p_value = moran_output$p.value\n      )\n  })\n  \n  # Run global_moran_perm for each KPI in kpi_inv_dist list\n  results_inv_dist <- lapply(kpi_inv_dist, function(kpi) {\n    moran_output <- global_moran_perm(filtered_data[[kpi]],\n                                      filtered_data$nb,\n                                      filtered_data$wt_inv,\n                                      nsim = 999)\n    data.frame(\n      kpi = kpi,\n      statistic = mean(moran_output$res),\n      p_value = moran_output$p.value\n      )\n  })\n  \n  # Combine both results\n  results_df <- bind_rows(results_wt, results_inv_dist)\n  \n  results_df <- results_df %>%\n    mutate(date = value,\n           .before = 1)\n  rownames(results_df) <- NULL\n  return(results_df)\n}\n```\n:::\n\n\n\n### 3.3.1 Across Year\n\nOn top of running the function a few additional steps are required:\n\n1.  Set seed\n2.  Define kpi lists\n3.  Define list of date to iterate\n4.  Consolidate output\n\nThe output is also processed in a way that only replaces statistic values for those that are not significant (p_value \\> 0.05), and pivot to a format for ease of visualization in a table.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Set Seed\nset.seed(42)\n\n\n# List of KPIs using st_weights\nkpi_wt <- c(\n  \"revenue_all\", \"revenue_thai\", \"revenue_foreign\", \"revenue_thai_prop\", \"revenue_foreign_prop\",\n  \"no_tourist_all\", \"no_tourist_thai\", \"no_tourist_foreign\", \"tourist_thai_prop\", \"tourist_foreign_prop\",\n  \"revenue_tourist_all\", \"revenue_tourist_thai\", \"revenue_tourist_foreign\", \n  \"ratio_tourist_stay\" \n)\n\n# List of KPIs using st_inverse_distance\nkpi_dist <- c(\"no_tourist_stay\", \"revenue_tourist_stay\", \"tourist_stay_all\")\n\n# List of years to iterate\nyear_list <- unique(th_bound_tour_year$year)\n\n# Create output list\nall_results <- list()\n\nfor (year_val in year_list) {\n  # Run function for each year\n  result <- run_global_moran(th_bound_tour_year, \"year\", year_val, kpi_wt, kpi_dist)\n  \n  # Append results to list\n  all_results[[as.character(year_val)]] <- result\n}\n\n# Combine all output\nglobal_moran_year <- bind_rows(all_results)\n\n# Process output\nglobal_moran_year <- global_moran_year %>%\n  mutate(statistic = ifelse(p_value <= 0.05, round(statistic,3), \"-\")) %>%\n  select(date, kpi, statistic) %>%\n  pivot_wider(names_from = date, values_from = statistic)\n```\n:::\n\n\n\nNow that the data is properly formatted, we can view the table with `datatable` from `DT` package.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndatatable(global_moran_year, rownames=FALSE, extensions=\"Scroller\", class=\"display\", width=\"100%\",\n            options=list(initComplete = JS(\n    \"function(settings, json) {\",\n    \"$('body').css({'font-family': 'sans-serif'});\",\n    \"}\"\n  ), deferRender=TRUE, scrollY=300, scroller=TRUE))\n```\n\n::: {.cell-output-display}\n\n```{=html}\n<div id=\"htmlwidget-fd6fe5fb5edf7e94aa22\" style=\"width:100%;height:auto;\" class=\"datatables html-widget\"></div>\n<script type=\"application/json\" data-for=\"htmlwidget-fd6fe5fb5edf7e94aa22\">{\"x\":{\"filter\":\"none\",\"vertical\":false,\"extensions\":[\"Scroller\"],\"data\":[[\"revenue_all\",\"revenue_thai\",\"revenue_foreign\",\"revenue_thai_prop\",\"revenue_foreign_prop\",\"no_tourist_all\",\"no_tourist_thai\",\"no_tourist_foreign\",\"tourist_thai_prop\",\"tourist_foreign_prop\",\"revenue_tourist_all\",\"revenue_tourist_thai\",\"revenue_tourist_foreign\",\"ratio_tourist_stay\",\"no_tourist_stay\",\"revenue_tourist_stay\",\"tourist_stay_all\"],[\"-\",\"-\",\"-\",\"-0.017\",\"-0.01\",\"-\",\"-\",\"-\",\"-0.013\",\"-0.014\",\"-0.015\",\"-0.012\",\"-0.014\",\"-0.013\",\"-\",\"-0.011\",\"-0.009\"],[\"-\",\"-\",\"-\",\"-0.014\",\"-0.012\",\"-\",\"-\",\"-\",\"-0.012\",\"-0.012\",\"-0.008\",\"-0.012\",\"-0.013\",\"-0.014\",\"-\",\"-0.012\",\"-0.014\"],[\"-\",\"-\",\"-\",\"-0.013\",\"-0.015\",\"-\",\"-\",\"-\",\"-0.015\",\"-0.01\",\"-0.01\",\"-0.012\",\"-0.012\",\"-0.014\",\"-0.01\",\"-0.011\",\"-0.009\"],[\"-\",\"-\",\"-\",\"-0.012\",\"-0.014\",\"-\",\"-\",\"-\",\"-0.016\",\"-0.01\",\"-0.012\",\"-0.012\",\"-0.013\",\"-0.014\",\"-\",\"-\",\"-0.013\"],[\"-\",\"-\",\"-\",\"-0.011\",\"-0.012\",\"-\",\"-\",\"-\",\"-0.01\",\"-0.016\",\"-0.011\",\"-0.008\",\"-\",\"-0.015\",\"-\",\"-\",\"-0.013\"]],\"container\":\"<table class=\\\"display\\\">\\n  <thead>\\n    <tr>\\n      <th>kpi<\\/th>\\n      <th>2019<\\/th>\\n      <th>2020<\\/th>\\n      <th>2021<\\/th>\\n      <th>2022<\\/th>\\n      <th>2023<\\/th>\\n    <\\/tr>\\n  <\\/thead>\\n<\\/table>\",\"options\":{\"initComplete\":\"function(settings, json) {\\n$('body').css({'font-family': 'sans-serif'});\\n}\",\"deferRender\":true,\"scrollY\":300,\"scroller\":true,\"columnDefs\":[{\"name\":\"kpi\",\"targets\":0},{\"name\":\"2019\",\"targets\":1},{\"name\":\"2020\",\"targets\":2},{\"name\":\"2021\",\"targets\":3},{\"name\":\"2022\",\"targets\":4},{\"name\":\"2023\",\"targets\":5}],\"order\":[],\"autoWidth\":false,\"orderClasses\":false}},\"evals\":[\"options.initComplete\"],\"jsHooks\":[]}</script>\n```\n\n:::\n:::\n\n\n\nAs expected, the basic indicators do not show any statistically significant spatial autocorrelation. Nevertheless, although the engineered indicators are generally statistically significant across the years, they are negative and very close to 0. This suggests that there is an extremely weak dispersal.\n\n### 3.3.2 Across Year and Month\n\nSimliar to the processes in 3.3.1, I will need to:\n\n1.  Set seed\n2.  Define list of dates to iterate\n3.  Consolidate output\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Set seed\nset.seed(42)\n\n# List of year and month to iterate\nyear_month_list <- unique(th_bound_tour_year_month$date.y)\n\n# Create output list\nall_results <- list()\n\nfor (year_month_val in year_month_list) {\n  # Run function for each year\n  result <- run_global_moran(th_bound_tour_year_month, \"date.y\", year_month_val, kpi_wt, kpi_dist)\n  \n  # Append results to list\n  all_results[[as.character(year_month_val)]] <- result\n}\n\n# Combine all output\nglobal_moran_year_month <- bind_rows(all_results)\n```\n:::\n\n\n\nAdditional data processing steps are required to format the data appropriately.\n\n1.  Create separate year and month columns\n2.  Replaces statistic values for those that are not significant (p_value \\> 0.05),\n3.  Pivot to a format for ease of visualization in a table.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Process output\nglobal_moran_year_month <- global_moran_year_month %>%\n  mutate(date = as.Date.numeric(date),\n         year = year(date),\n         month = format(date,\"%b\"),\n         statistic = ifelse(p_value <= 0.05, round(statistic,3), \"-\")) %>%\n  select(year, kpi, statistic, month) %>%\n  pivot_wider(names_from = month, values_from = statistic)\n```\n:::\n\n\n\n`crosstalk` package is then used to provide an interactive way of filtering the table\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nshared <- SharedData$new(global_moran_year_month)\n\nbscols(widths = c(12, 12),\n  filter_select(\n  id = \"year\", label = \"year\", \n  sharedData = shared, ~year\n  ),\n  \n  datatable(shared, rownames=FALSE, extensions=\"Scroller\", class=\"display\", width=\"100%\",\n            options=list(initComplete = JS(\n    \"function(settings, json) {\",\n    \"$('body').css({'font-family': 'sans-serif', 'font-size': '60%'});\",\n    \"}\"\n  ), deferRender=TRUE, scrollY=300, scroller=TRUE))\n)\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nWarning in bscols(widths = c(12, 12), filter_select(id = \"year\", label =\n\"year\", : Sum of bscol width units is greater than 12\n```\n\n\n:::\n\n::: {.cell-output-display}\n\n```{=html}\n<div class=\"container-fluid crosstalk-bscols\">\n<div class=\"row\">\n<div class=\"col-xs-12\">\n<div id=\"year\" class=\"form-group crosstalk-input-select crosstalk-input\">\n<label class=\"control-label\" for=\"year\">year</label>\n<div>\n<select multiple></select>\n<script type=\"application/json\" data-for=\"year\">{\n  \"items\": {\n    \"value\": [\"2019\", \"2020\", \"2021\", \"2022\", \"2023\"],\n    \"label\": [\"2019\", \"2020\", \"2021\", \"2022\", \"2023\"]\n  },\n  \"map\": {\n    \"2019\": [\"1\", \"2\", \"3\", \"4\", \"5\", \"6\", \"7\", \"8\", \"9\", \"10\", \"11\", \"12\", \"13\", \"14\", \"15\", \"16\", \"17\"],\n    \"2020\": [\"18\", \"19\", \"20\", \"21\", \"22\", \"23\", \"24\", \"25\", \"26\", \"27\", \"28\", \"29\", \"30\", \"31\", \"32\", \"33\", \"34\"],\n    \"2021\": [\"35\", \"36\", \"37\", \"38\", \"39\", \"40\", \"41\", \"42\", \"43\", \"44\", \"45\", \"46\", \"47\", \"48\", \"49\", \"50\", \"51\"],\n    \"2022\": [\"52\", \"53\", \"54\", \"55\", \"56\", \"57\", \"58\", \"59\", \"60\", \"61\", \"62\", \"63\", \"64\", \"65\", \"66\", \"67\", \"68\"],\n    \"2023\": [\"69\", \"70\", \"71\", \"72\", \"73\", \"74\", \"75\", \"76\", \"77\", \"78\", \"79\", \"80\", \"81\", \"82\", \"83\", \"84\", \"85\"]\n  },\n  \"group\": [\"SharedData031cee7d\"]\n}</script>\n</div>\n</div>\n</div>\n<div class=\"col-xs-12\">\n<div id=\"htmlwidget-7b16e5c229a647d36070\" style=\"width:100%;height:auto;\" class=\"datatables html-widget\"></div>\n<script type=\"application/json\" data-for=\"htmlwidget-7b16e5c229a647d36070\">{\"x\":{\"crosstalkOptions\":{\"key\":[\"1\",\"2\",\"3\",\"4\",\"5\",\"6\",\"7\",\"8\",\"9\",\"10\",\"11\",\"12\",\"13\",\"14\",\"15\",\"16\",\"17\",\"18\",\"19\",\"20\",\"21\",\"22\",\"23\",\"24\",\"25\",\"26\",\"27\",\"28\",\"29\",\"30\",\"31\",\"32\",\"33\",\"34\",\"35\",\"36\",\"37\",\"38\",\"39\",\"40\",\"41\",\"42\",\"43\",\"44\",\"45\",\"46\",\"47\",\"48\",\"49\",\"50\",\"51\",\"52\",\"53\",\"54\",\"55\",\"56\",\"57\",\"58\",\"59\",\"60\",\"61\",\"62\",\"63\",\"64\",\"65\",\"66\",\"67\",\"68\",\"69\",\"70\",\"71\",\"72\",\"73\",\"74\",\"75\",\"76\",\"77\",\"78\",\"79\",\"80\",\"81\",\"82\",\"83\",\"84\",\"85\"],\"group\":\"SharedData031cee7d\"},\"filter\":\"none\",\"vertical\":false,\"extensions\":[\"Scroller\"],\"data\":[[2019,2019,2019,2019,2019,2019,2019,2019,2019,2019,2019,2019,2019,2019,2019,2019,2019,2020,2020,2020,2020,2020,2020,2020,2020,2020,2020,2020,2020,2020,2020,2020,2020,2020,2021,2021,2021,2021,2021,2021,2021,2021,2021,2021,2021,2021,2021,2021,2021,2021,2021,2022,2022,2022,2022,2022,2022,2022,2022,2022,2022,2022,2022,2022,2022,2022,2022,2022,2023,2023,2023,2023,2023,2023,2023,2023,2023,2023,2023,2023,2023,2023,2023,2023,2023],[\"revenue_all\",\"revenue_thai\",\"revenue_foreign\",\"revenue_thai_prop\",\"revenue_foreign_prop\",\"no_tourist_all\",\"no_tourist_thai\",\"no_tourist_foreign\",\"tourist_thai_prop\",\"tourist_foreign_prop\",\"revenue_tourist_all\",\"revenue_tourist_thai\",\"revenue_tourist_foreign\",\"ratio_tourist_stay\",\"no_tourist_stay\",\"revenue_tourist_stay\",\"tourist_stay_all\",\"revenue_all\",\"revenue_thai\",\"revenue_foreign\",\"revenue_thai_prop\",\"revenue_foreign_prop\",\"no_tourist_all\",\"no_tourist_thai\",\"no_tourist_foreign\",\"tourist_thai_prop\",\"tourist_foreign_prop\",\"revenue_tourist_all\",\"revenue_tourist_thai\",\"revenue_tourist_foreign\",\"ratio_tourist_stay\",\"no_tourist_stay\",\"revenue_tourist_stay\",\"tourist_stay_all\",\"revenue_all\",\"revenue_thai\",\"revenue_foreign\",\"revenue_thai_prop\",\"revenue_foreign_prop\",\"no_tourist_all\",\"no_tourist_thai\",\"no_tourist_foreign\",\"tourist_thai_prop\",\"tourist_foreign_prop\",\"revenue_tourist_all\",\"revenue_tourist_thai\",\"revenue_tourist_foreign\",\"ratio_tourist_stay\",\"no_tourist_stay\",\"revenue_tourist_stay\",\"tourist_stay_all\",\"revenue_all\",\"revenue_thai\",\"revenue_foreign\",\"revenue_thai_prop\",\"revenue_foreign_prop\",\"no_tourist_all\",\"no_tourist_thai\",\"no_tourist_foreign\",\"tourist_thai_prop\",\"tourist_foreign_prop\",\"revenue_tourist_all\",\"revenue_tourist_thai\",\"revenue_tourist_foreign\",\"ratio_tourist_stay\",\"no_tourist_stay\",\"revenue_tourist_stay\",\"tourist_stay_all\",\"revenue_all\",\"revenue_thai\",\"revenue_foreign\",\"revenue_thai_prop\",\"revenue_foreign_prop\",\"no_tourist_all\",\"no_tourist_thai\",\"no_tourist_foreign\",\"tourist_thai_prop\",\"tourist_foreign_prop\",\"revenue_tourist_all\",\"revenue_tourist_thai\",\"revenue_tourist_foreign\",\"ratio_tourist_stay\",\"no_tourist_stay\",\"revenue_tourist_stay\",\"tourist_stay_all\"],[\"-\",\"-\",\"-\",\"-0.017\",\"-0.009\",\"-\",\"-\",\"-\",\"-0.014\",\"-0.014\",\"-0.015\",\"-0.012\",\"-0.014\",\"-\",\"-\",\"-0.011\",\"-0.009\",\"-\",\"-\",\"-\",\"-0.015\",\"-0.017\",\"-\",\"-\",\"-\",\"-0.012\",\"-0.012\",\"-0.016\",\"-0.014\",\"-0.011\",\"-\",\"-\",\"-0.012\",\"-0.013\",\"-\",\"-\",\"-\",\"-\",\"-\",\"-\",\"-\",\"-\",\"-\",\"-\",\"-0.009\",\"-0.01\",\"-0.016\",\"-0.014\",\"-0.011\",\"-\",\"-0.01\",\"-\",\"-\",\"-\",\"-0.015\",\"-0.011\",\"-\",\"-\",\"-0.012\",\"-0.013\",\"-0.012\",\"-0.011\",\"-0.012\",\"-0.012\",\"-0.018\",\"-\",\"-0.015\",\"-0.007\",\"-\",\"-\",\"-\",\"-0.012\",\"-0.011\",\"-\",\"-\",\"-\",\"-0.013\",\"-0.017\",\"-0.013\",\"-0.013\",\"-\",\"-0.011\",\"-\",\"-\",\"-0.011\"],[\"-\",\"-\",\"-\",\"-0.015\",\"-0.012\",\"-\",\"-\",\"-\",\"-0.013\",\"-0.014\",\"-0.009\",\"-0.013\",\"-0.014\",\"-0.011\",\"-\",\"-0.012\",\"-0.014\",\"-\",\"-\",\"-\",\"-0.011\",\"-0.013\",\"-\",\"-\",\"-\",\"-0.014\",\"-0.015\",\"-0.013\",\"-0.012\",\"-0.013\",\"-\",\"-\",\"-0.011\",\"-0.006\",\"-\",\"-\",\"-\",\"-\",\"-\",\"-\",\"-\",\"-\",\"-0.013\",\"-0.012\",\"-0.015\",\"-0.013\",\"-0.011\",\"-0.011\",\"-0.01\",\"-0.012\",\"-0.009\",\"-\",\"-\",\"-\",\"-0.015\",\"-0.01\",\"-\",\"-\",\"-\",\"-0.014\",\"-0.016\",\"-0.015\",\"-0.013\",\"-0.013\",\"-0.017\",\"-\",\"-0.007\",\"-0.01\",\"-\",\"-\",\"-\",\"-0.014\",\"-0.014\",\"-\",\"-\",\"-\",\"-0.016\",\"-0.012\",\"-0.012\",\"-0.011\",\"-\",\"-0.011\",\"-\",\"-\",\"-0.012\"],[\"-\",\"-\",\"-\",\"-0.011\",\"-0.008\",\"-\",\"-\",\"-\",\"-0.014\",\"-0.012\",\"-0.009\",\"-0.011\",\"-0.012\",\"-0.016\",\"-\",\"-0.011\",\"-0.01\",\"-\",\"-\",\"-\",\"-0.013\",\"-0.014\",\"-\",\"-\",\"-\",\"-0.011\",\"-0.016\",\"-0.013\",\"-0.012\",\"-0.014\",\"-0.017\",\"-\",\"-0.013\",\"-0.011\",\"-\",\"-\",\"-\",\"-\",\"-\",\"-\",\"-\",\"-\",\"-0.015\",\"-0.011\",\"-0.013\",\"-0.014\",\"-0.013\",\"-0.013\",\"-0.012\",\"-0.011\",\"-0.004\",\"-\",\"-\",\"-\",\"-0.015\",\"-0.013\",\"-\",\"-\",\"-\",\"-0.013\",\"-0.014\",\"-0.014\",\"-0.015\",\"-0.014\",\"-0.014\",\"-\",\"-0.01\",\"-0.009\",null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],[\"-\",\"-\",\"-\",\"-0.012\",\"-0.013\",\"-\",\"-\",\"-\",\"-0.014\",\"-0.011\",\"-0.011\",\"-0.012\",\"-0.013\",\"-0.012\",\"-\",\"-0.011\",\"-0.014\",\"-\",\"-\",\"-\",\"-\",\"-0.015\",\"-\",\"-\",\"-\",\"-\",\"-0.015\",\"-0.013\",\"-0.011\",\"-0.015\",\"-0.017\",\"-0.011\",\"-\",\"-\",\"-\",\"-\",\"-\",\"-0.013\",\"-0.014\",\"-\",\"-\",\"-\",\"-0.016\",\"-0.013\",\"-0.013\",\"-0.014\",\"-0.012\",\"-0.011\",\"-\",\"-0.01\",\"-0.01\",\"-\",\"-\",\"-\",\"-0.015\",\"-0.013\",\"-\",\"-\",\"-\",\"-0.011\",\"-0.014\",\"-0.013\",\"-0.014\",\"-0.013\",\"-0.015\",\"-\",\"-0.01\",\"-0.01\",null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],[\"-\",\"-\",\"-\",\"-0.014\",\"-0.01\",\"-\",\"-\",\"-\",\"-0.01\",\"-0.015\",\"-0.009\",\"-0.01\",\"-0.015\",\"-0.009\",\"-\",\"-0.01\",\"-0.012\",\"-\",\"-\",\"-\",\"-0.013\",\"-0.014\",\"-\",\"-\",\"-\",\"-0.012\",\"-0.015\",\"-0.013\",\"-0.011\",\"-0.013\",\"-0.012\",\"-0.011\",\"-0.01\",\"-0.012\",\"-\",\"-\",\"-\",\"-\",\"-\",\"-\",\"-\",\"-\",\"-0.008\",\"-0.013\",\"-0.01\",\"-0.011\",\"-0.015\",\"-0.011\",\"-0.012\",\"-0.01\",\"-0.011\",\"-\",\"-\",\"-\",\"-0.011\",\"-0.016\",\"-\",\"-\",\"-\",\"-0.011\",\"-0.015\",\"-0.012\",\"-0.01\",\"-0.014\",\"-\",\"-\",\"-0.011\",\"-0.01\",null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],[\"-\",\"-\",\"-\",\"-0.018\",\"-0.015\",\"-\",\"-\",\"-\",\"-0.014\",\"-0.01\",\"-0.012\",\"-0.012\",\"-0.011\",\"-0.016\",\"-\",\"-0.008\",\"-0.012\",\"-\",\"-\",\"-\",\"-\",\"-\",\"-\",\"-\",\"-\",\"-\",\"-\",\"-0.01\",\"-0.009\",\"-0.013\",\"-0.013\",\"-\",\"-0.01\",\"-0.013\",\"-\",\"-\",\"-\",\"-\",\"-\",\"-\",\"-\",\"-\",\"-\",\"-0.01\",\"-0.013\",\"-0.013\",\"-0.013\",\"-0.012\",\"-0.01\",\"-0.011\",\"-0.01\",\"-\",\"-\",\"-\",\"-0.011\",\"-0.007\",\"-\",\"-\",\"-\",\"-0.012\",\"-0.014\",\"-0.014\",\"-0.015\",\"-0.014\",\"-\",\"-\",\"-\",\"-0.014\",null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],[\"-\",\"-\",\"-\",\"-0.011\",\"-0.01\",\"-\",\"-\",\"-\",\"-0.011\",\"-0.014\",\"-0.015\",\"-0.014\",\"-0.013\",\"-\",\"-\",\"-0.009\",\"-0.01\",\"-\",\"-\",\"-\",\"-\",\"-\",\"-\",\"-\",\"-\",\"-\",\"-\",\"-0.013\",\"-0.015\",\"-0.013\",\"-0.013\",\"-\",\"-\",\"-0.009\",\"-\",\"-\",\"-\",\"-0.012\",\"-0.014\",\"-\",\"-\",\"-\",\"-0.015\",\"-0.013\",\"-0.014\",\"-0.015\",\"-0.014\",\"-0.011\",\"-0.01\",\"-0.01\",\"-0.011\",\"-\",\"-\",\"-\",\"-0.013\",\"-0.013\",\"-\",\"-\",\"-\",\"-0.012\",\"-0.011\",\"-0.012\",\"-0.01\",\"-0.013\",\"-\",\"-\",\"-\",\"-0.012\",null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],[\"-\",\"-\",\"-\",\"-0.013\",\"-0.013\",\"-\",\"-\",\"-\",\"-0.012\",\"-0.012\",\"-0.014\",\"-0.013\",\"-0.012\",\"-0.015\",\"-\",\"-\",\"-0.014\",\"-\",\"-\",\"-\",\"-\",\"-\",\"-\",\"-\",\"-\",\"-\",\"-\",\"-0.013\",\"-0.01\",\"-0.012\",\"-0.013\",\"-\",\"-\",\"-0.011\",\"-\",\"-\",\"-\",\"-0.016\",\"-0.013\",\"-\",\"-\",\"-\",\"-0.013\",\"-0.012\",\"-0.013\",\"-0.014\",\"-0.012\",\"-0.01\",\"-0.008\",\"-0.01\",\"-0.016\",\"-\",\"-\",\"-\",\"-0.015\",\"-0.014\",\"-\",\"-\",\"-\",\"-0.017\",\"-0.015\",\"-0.013\",\"-0.014\",\"-0.013\",\"-\",\"-\",\"-\",\"-0.01\",null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],[\"-\",\"-\",\"-\",\"-0.015\",\"-0.016\",\"-\",\"-\",\"-\",\"-0.007\",\"-0.015\",\"-0.014\",\"-0.013\",\"-0.013\",\"-0.01\",\"-\",\"-\",\"-0.01\",\"-\",\"-\",\"-\",\"-\",\"-\",\"-\",\"-\",\"-\",\"-\",\"-\",\"-0.014\",\"-0.016\",\"-0.013\",\"-0.012\",\"-\",\"-\",\"-0.007\",\"-\",\"-\",\"-\",\"-0.012\",\"-0.011\",\"-\",\"-\",\"-\",\"-0.012\",\"-0.012\",\"-0.013\",\"-0.012\",\"-0.013\",\"-0.013\",\"-\",\"-0.012\",\"-0.014\",\"-\",\"-\",\"-\",\"-0.012\",\"-0.014\",\"-\",\"-\",\"-\",\"-0.012\",\"-0.014\",\"-0.012\",\"-0.014\",\"-0.014\",\"-\",\"-\",\"-\",\"-0.009\",null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],[\"-\",\"-\",\"-\",\"-0.015\",\"-0.011\",\"-\",\"-\",\"-\",\"-0.013\",\"-0.013\",\"-0.011\",\"-0.012\",\"-0.015\",\"-\",\"-\",\"-0.012\",\"-0.01\",\"-\",\"-\",\"-\",\"-\",\"-\",\"-\",\"-\",\"-\",\"-0.011\",\"-0.013\",\"-0.011\",\"-0.014\",\"-0.013\",\"-0.013\",\"-\",\"-0.011\",\"-0.01\",\"-\",\"-\",\"-\",\"-0.013\",\"-0.013\",\"-\",\"-\",\"-\",\"-0.01\",\"-0.01\",\"-0.012\",\"-0.011\",\"-0.013\",\"-0.013\",\"-\",\"-\",\"-0.011\",\"-\",\"-\",\"-\",\"-0.013\",\"-0.013\",\"-\",\"-\",\"-\",\"-0.012\",\"-0.015\",\"-0.013\",\"-0.015\",\"-\",\"-\",\"-\",\"-\",\"-0.012\",null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],[\"-\",\"-\",\"-\",\"-0.012\",\"-0.012\",\"-\",\"-\",\"-\",\"-0.015\",\"-0.014\",\"-0.016\",\"-0.015\",\"-0.014\",\"-\",\"-\",\"-0.011\",\"-0.012\",\"-\",\"-\",\"-\",\"-0.012\",\"-0.015\",\"-\",\"-\",\"-\",\"-0.014\",\"-0.011\",\"-0.013\",\"-0.015\",\"-0.015\",\"-0.015\",\"-\",\"-0.01\",\"-0.007\",\"-\",\"-\",\"-\",\"-0.013\",\"-0.009\",\"-\",\"-\",\"-\",\"-0.016\",\"-0.012\",\"-0.013\",\"-0.012\",\"-0.014\",\"-0.012\",\"-\",\"-\",\"-0.009\",\"-\",\"-\",\"-\",\"-0.016\",\"-0.014\",\"-\",\"-\",\"-\",\"-0.014\",\"-0.013\",\"-0.013\",\"-0.015\",\"-\",\"-0.013\",\"-\",\"-\",\"-0.014\",null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],[\"-\",\"-\",\"-\",\"-0.013\",\"-0.013\",\"-\",\"-\",\"-\",\"-0.01\",\"-0.014\",\"-0.016\",\"-0.012\",\"-0.011\",\"-0.015\",\"-\",\"-0.014\",\"-0.011\",\"-\",\"-\",\"-\",\"-0.015\",\"-0.013\",\"-\",\"-\",\"-\",\"-0.014\",\"-0.015\",\"-0.015\",\"-0.015\",\"-0.011\",\"-0.017\",\"-\",\"-\",\"-0.012\",\"-\",\"-\",\"-\",\"-0.014\",\"-0.012\",\"-\",\"-\",\"-\",\"-0.013\",\"-0.014\",\"-0.012\",\"-0.015\",\"-0.012\",\"-0.016\",\"-\",\"-0.014\",\"-0.012\",\"-\",\"-\",\"-\",\"-0.011\",\"-0.016\",\"-\",\"-\",\"-\",\"-0.012\",\"-0.012\",\"-0.011\",\"-0.014\",\"-\",\"-0.016\",\"-\",\"-\",\"-0.013\",null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null]],\"container\":\"<table class=\\\"display\\\">\\n  <thead>\\n    <tr>\\n      <th>year<\\/th>\\n      <th>kpi<\\/th>\\n      <th>Jan<\\/th>\\n      <th>Feb<\\/th>\\n      <th>Mar<\\/th>\\n      <th>Apr<\\/th>\\n      <th>May<\\/th>\\n      <th>Jun<\\/th>\\n      <th>Jul<\\/th>\\n      <th>Aug<\\/th>\\n      <th>Sep<\\/th>\\n      <th>Oct<\\/th>\\n      <th>Nov<\\/th>\\n      <th>Dec<\\/th>\\n    <\\/tr>\\n  <\\/thead>\\n<\\/table>\",\"options\":{\"initComplete\":\"function(settings, json) {\\n$('body').css({'font-family': 'sans-serif', 'font-size': '60%'});\\n}\",\"deferRender\":true,\"scrollY\":300,\"scroller\":true,\"columnDefs\":[{\"className\":\"dt-right\",\"targets\":0},{\"name\":\"year\",\"targets\":0},{\"name\":\"kpi\",\"targets\":1},{\"name\":\"Jan\",\"targets\":2},{\"name\":\"Feb\",\"targets\":3},{\"name\":\"Mar\",\"targets\":4},{\"name\":\"Apr\",\"targets\":5},{\"name\":\"May\",\"targets\":6},{\"name\":\"Jun\",\"targets\":7},{\"name\":\"Jul\",\"targets\":8},{\"name\":\"Aug\",\"targets\":9},{\"name\":\"Sep\",\"targets\":10},{\"name\":\"Oct\",\"targets\":11},{\"name\":\"Nov\",\"targets\":12},{\"name\":\"Dec\",\"targets\":13}],\"order\":[],\"autoWidth\":false,\"orderClasses\":false},\"selection\":{\"mode\":\"multiple\",\"selected\":null,\"target\":\"row\",\"selectable\":null}},\"evals\":[\"options.initComplete\"],\"jsHooks\":[]}</script>\n</div>\n</div>\n</div>\n```\n\n:::\n:::\n\n\n\nComparing the output of asd;asd\n\nTherefore, I can conclude that some key indicators of Thailand tourism economy are spatial and spatio-temporal dependent.\n\n# 4 Local Spatial Autocorrelation Analysis of Thailand Tourism Key Indicators\n\nTo identify where are clusters and outliers, `local_moran` of the `sfdep` package will be used. The indicators that will be analysed are those that have been proven to be spatially dependent. To ensure that analysis are mindfully conducted, the local spatial autocorrelation analysis will be done across space first. \n\nFollowing which, carefully selected indicators will then be used with Local Moran's I across year and year and month.\n\nFurthermore, While I can continue to do emerging hotspot analysis (EHSA) with `local_gstar_perm` from `sfdep` package for each individual time period, this will be explored in greater depth with the time dimension in a continuous fashion (as compared to the discrete way that it has been done for Global Moran's I). The rationale for this is that for EHSA aims to see how hot/cold spots change *over time*.\n\n## 4.1 Local Moran's I across Space\n\nThe main tourism key indicators are revenue proportion (Thai vs Foreign), tourist proportion (Thai vs Foreign), Revenue/Tourist (all tourist, Thai, Foreign), and Overnight Guest (revenue/overnight guest, proportion of tourists who stayed overnight)\n\nA similar process will be conducted iteratively for each key indicator\n1. Set seed\n2. Run Local Moran's I\n3. Visualize Local Moran's I statistics and p-value from Step 2\n4. Filter results by p-value <= 0.05\n5. Visualize LISA chart from Step 4\n\n::: panel-tabset\n\n# Revenue\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Thai Revenue Proportion\nlisa_th <- th_tour_knn5_all %>%\n  mutate(local_moran = local_moran(\n    revenue_thai_prop, nb, wt, nsim = 999),\n    .before = 1) %>%\n  unnest(local_moran)\n\n# Foreign Revenue Proportion\nlisa_fr <- th_tour_knn5_all %>%\n  mutate(local_moran = local_moran(\n    revenue_foreign_prop, nb, wt, nsim = 999),\n    .before = 1) %>%\n  unnest(local_moran)\n\ntmap_mode(\"plot\")\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\ntmap mode set to plotting\n```\n\n\n:::\n\n```{.r .cell-code}\nmap1 <- tm_shape(lisa_th) +\n  tm_fill(\"ii\") + \n  tm_borders(alpha = 0.5) +\n  tm_view(set.zoom.limits = c(6,8)) +\n  tm_layout(main.title = \"local Moran's I of Thai Revenue Proportion\",\n            main.title.size = 0.8)\n\nmap2 <- tm_shape(lisa_th) +\n  tm_fill(\"p_ii_sim\",\n          breaks = c(0, 0.001, 0.01, 0.05, 1),\n              labels = c(\"0.001\", \"0.01\", \"0.05\", \"Not sig\")) + \n  tm_borders(alpha = 0.5) +\n  tm_layout(main.title = \"p-value of local Moran's I (Foreign Revenue Proportion)\",\n            main.title.size = 0.8)\n\nmap3 <- tm_shape(lisa_fr) +\n  tm_fill(\"ii\") + \n  tm_borders(alpha = 0.5) +\n  tm_view(set.zoom.limits = c(6,8)) +\n  tm_layout(main.title = \"local Moran's I of Foreign Revenue Proportion\",\n            main.title.size = 0.8)\n\nmap4 <- tm_shape(lisa_fr) +\n  tm_fill(\"p_ii_sim\",\n          breaks = c(0, 0.001, 0.01, 0.05, 1),\n              labels = c(\"0.001\", \"0.01\", \"0.05\", \"Not sig\")) + \n  tm_borders(alpha = 0.5) +\n  tm_layout(main.title = \"p-value of local Moran's I (Foreign Revenue Proportion)\",\n            main.title.size = 0.8)\n\n\ntmap_arrange(map1, map2, map3, map4, ncol = 2, nrow = 2)\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nVariable(s) \"ii\" contains positive and negative values, so midpoint is set to 0. Set midpoint = NA to show the full spectrum of the color palette.\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nVariable(s) \"ii\" contains positive and negative values, so midpoint is set to 0. Set midpoint = NA to show the full spectrum of the color palette.\n```\n\n\n:::\n\n::: {.cell-output-display}\n![](Take-Home_Ex02_files/figure-html/unnamed-chunk-52-1.png){width=768}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nlisa_th_sig <- lisa_th  %>%\n  filter(p_ii_sim < 0.05)\nlisa_fr_sig <- lisa_fr  %>%\n  filter(p_ii_sim < 0.05)\n\n\ntmap_mode(\"plot\")\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\ntmap mode set to plotting\n```\n\n\n:::\n\n```{.r .cell-code}\nmap1 <- tm_shape(lisa_th) +\n  tm_polygons() +\n  tm_borders(alpha = 0.5) +\n  tm_shape(lisa_th_sig) +\n  tm_fill(\"mean\") + \n  tm_borders(alpha = 0.4) + \n  tm_layout(main.title = \"LISA Map of Thai Revenue Proportion across Province\",\n          main.title.size = 0.8)\n\nmap2 <- tm_shape(lisa_fr) +\n  tm_polygons() +\n  tm_borders(alpha = 0.5) +\n  tm_shape(lisa_fr_sig) +\n  tm_fill(\"mean\") + \n  tm_borders(alpha = 0.4) + \n  tm_layout(main.title = \"LISA Map of Foreign Revenue Proportion across Province\",\n          main.title.size = 0.8)\n\ntmap_arrange(map1, map2, ncol = 2)\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nWarning: One tm layer group has duplicated layer types, which are omitted. To\ndraw multiple layers of the same type, use multiple layer groups (i.e. specify\ntm_shape prior to each of them).\nWarning: One tm layer group has duplicated layer types, which are omitted. To\ndraw multiple layers of the same type, use multiple layer groups (i.e. specify\ntm_shape prior to each of them).\n```\n\n\n:::\n\n::: {.cell-output-display}\n![](Take-Home_Ex02_files/figure-html/unnamed-chunk-53-1.png){width=768}\n:::\n:::\n\n\n# Tourist\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Thai Tourist Proportion\nlisa_th <- th_tour_knn5_all %>%\n  mutate(local_moran = local_moran(\n    tourist_thai_prop, nb, wt, nsim = 999),\n    .before = 1) %>%\n  unnest(local_moran)\n\n# Foreign Tourist Proportion\nlisa_fr <- th_tour_knn5_all %>%\n  mutate(local_moran = local_moran(\n    tourist_foreign_prop, nb, wt, nsim = 999),\n    .before = 1) %>%\n  unnest(local_moran)\n\ntmap_mode(\"plot\")\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\ntmap mode set to plotting\n```\n\n\n:::\n\n```{.r .cell-code}\nmap1 <- tm_shape(lisa_th) +\n  tm_fill(\"ii\") + \n  tm_borders(alpha = 0.5) +\n  tm_view(set.zoom.limits = c(6,8)) +\n  tm_layout(main.title = \"local Moran's I of Thai Tourist Proportion\",\n            main.title.size = 0.8)\n\nmap2 <- tm_shape(lisa_th) +\n  tm_fill(\"p_ii_sim\",\n          breaks = c(0, 0.001, 0.01, 0.05, 1),\n              labels = c(\"0.001\", \"0.01\", \"0.05\", \"Not sig\")) + \n  tm_borders(alpha = 0.5) +\n  tm_layout(main.title = \"p-value of local Moran's I (Foreign Tourist Proportion)\",\n            main.title.size = 0.8)\n\nmap3 <- tm_shape(lisa_fr) +\n  tm_fill(\"ii\") + \n  tm_borders(alpha = 0.5) +\n  tm_view(set.zoom.limits = c(6,8)) +\n  tm_layout(main.title = \"local Moran's I of Foreign Tourist Proportion\",\n            main.title.size = 0.8)\n\nmap4 <- tm_shape(lisa_fr) +\n  tm_fill(\"p_ii_sim\",\n          breaks = c(0, 0.001, 0.01, 0.05, 1),\n              labels = c(\"0.001\", \"0.01\", \"0.05\", \"Not sig\")) + \n  tm_borders(alpha = 0.5) +\n  tm_layout(main.title = \"p-value of local Moran's I (Foreign Tourist Proportion)\",\n            main.title.size = 0.8)\n\n\ntmap_arrange(map1, map2, map3, map4, ncol = 2, nrow = 2)\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nVariable(s) \"ii\" contains positive and negative values, so midpoint is set to 0. Set midpoint = NA to show the full spectrum of the color palette.\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nVariable(s) \"ii\" contains positive and negative values, so midpoint is set to 0. Set midpoint = NA to show the full spectrum of the color palette.\n```\n\n\n:::\n\n::: {.cell-output-display}\n![](Take-Home_Ex02_files/figure-html/unnamed-chunk-54-1.png){width=768}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nlisa_th_sig <- lisa_th  %>%\n  filter(p_ii_sim < 0.05)\nlisa_fr_sig <- lisa_fr  %>%\n  filter(p_ii_sim < 0.05)\n\n\ntmap_mode(\"plot\")\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\ntmap mode set to plotting\n```\n\n\n:::\n\n```{.r .cell-code}\nmap1 <- tm_shape(lisa_th) +\n  tm_polygons() +\n  tm_borders(alpha = 0.5) +\n  tm_shape(lisa_th_sig) +\n  tm_fill(\"mean\") + \n  tm_borders(alpha = 0.4) + \n  tm_layout(main.title = \"LISA Map of Thai Tourist Proportion across Province\",\n          main.title.size = 0.8)\n\nmap2 <- tm_shape(lisa_fr) +\n  tm_polygons() +\n  tm_borders(alpha = 0.5) +\n  tm_shape(lisa_fr_sig) +\n  tm_fill(\"mean\") + \n  tm_borders(alpha = 0.4) + \n  tm_layout(main.title = \"LISA Map of Foreign Tourist Proportion across Province\",\n          main.title.size = 0.8)\n\ntmap_arrange(map1, map2, ncol = 2)\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nWarning: One tm layer group has duplicated layer types, which are omitted. To\ndraw multiple layers of the same type, use multiple layer groups (i.e. specify\ntm_shape prior to each of them).\nWarning: One tm layer group has duplicated layer types, which are omitted. To\ndraw multiple layers of the same type, use multiple layer groups (i.e. specify\ntm_shape prior to each of them).\n```\n\n\n:::\n\n::: {.cell-output-display}\n![](Take-Home_Ex02_files/figure-html/unnamed-chunk-55-1.png){width=768}\n:::\n:::\n\n\n\n# Revenue/Tourist\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Revenue/Tourist\nlisa_all <- th_tour_knn5_all %>%\n  mutate(local_moran = local_moran(\n    revenue_tourist_all, nb, wt, nsim = 999),\n    .before = 1) %>%\n  unnest(local_moran)\n\n# Thai Revenue/Thai Tourist\nlisa_th <- th_tour_knn5_all %>%\n  mutate(local_moran = local_moran(\n    revenue_tourist_thai, nb, wt, nsim = 999),\n    .before = 1) %>%\n  unnest(local_moran)\n\n# Foreign Revenue/Foreign Tourist\nlisa_fr <- th_tour_knn5_all %>%\n  mutate(local_moran = local_moran(\n    revenue_tourist_foreign, nb, wt, nsim = 999),\n    .before = 1) %>%\n  unnest(local_moran)\n\ntmap_mode(\"plot\")\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\ntmap mode set to plotting\n```\n\n\n:::\n\n```{.r .cell-code}\nmap1 <- tm_shape(lisa_all) +\n  tm_fill(\"ii\") + \n  tm_borders(alpha = 0.5) +\n  tm_view(set.zoom.limits = c(6,8)) +\n  tm_layout(main.title = \"local Moran's I of Revenue/Tourist\",\n            main.title.size = 0.8)\n\nmap2 <- tm_shape(lisa_all) +\n  tm_fill(\"p_ii_sim\",\n          breaks = c(0, 0.001, 0.01, 0.05, 1),\n              labels = c(\"0.001\", \"0.01\", \"0.05\", \"Not sig\")) + \n  tm_borders(alpha = 0.5) +\n  tm_layout(main.title = \"p-value of local Moran's I (Revenue/Tourist)\",\n            main.title.size = 0.8)\n\nmap3 <- tm_shape(lisa_th) +\n  tm_fill(\"ii\") + \n  tm_borders(alpha = 0.5) +\n  tm_view(set.zoom.limits = c(6,8)) +\n  tm_layout(main.title = \"local Moran's I of Revenue/Tourist (Thai)\",\n            main.title.size = 0.8)\n\nmap4 <- tm_shape(lisa_th) +\n  tm_fill(\"p_ii_sim\",\n          breaks = c(0, 0.001, 0.01, 0.05, 1),\n              labels = c(\"0.001\", \"0.01\", \"0.05\", \"Not sig\")) + \n  tm_borders(alpha = 0.5) +\n  tm_layout(main.title = \"p-value of local Moran's I (Revenue/Tourist (Thai))\",\n            main.title.size = 0.8)\n\nmap5 <- tm_shape(lisa_fr) +\n  tm_fill(\"ii\") + \n  tm_borders(alpha = 0.5) +\n  tm_view(set.zoom.limits = c(6,8)) +\n  tm_layout(main.title = \"local Moran's I of Revenue/Tourist (Foreign)\",\n            main.title.size = 0.8)\n\nmap6 <- tm_shape(lisa_fr) +\n  tm_fill(\"p_ii_sim\",\n          breaks = c(0, 0.001, 0.01, 0.05, 1),\n              labels = c(\"0.001\", \"0.01\", \"0.05\", \"Not sig\")) + \n  tm_borders(alpha = 0.5) +\n  tm_layout(main.title = \"p-value of local Moran's I (Revenue/Tourist (Foreign))\",\n            main.title.size = 0.8)\n\n\ntmap_arrange(map1, map2, map3, map4, map5, map6, ncol = 2, nrow = 3)\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nVariable(s) \"ii\" contains positive and negative values, so midpoint is set to 0. Set midpoint = NA to show the full spectrum of the color palette.\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nVariable(s) \"ii\" contains positive and negative values, so midpoint is set to 0. Set midpoint = NA to show the full spectrum of the color palette.\nVariable(s) \"ii\" contains positive and negative values, so midpoint is set to 0. Set midpoint = NA to show the full spectrum of the color palette.\n```\n\n\n:::\n\n::: {.cell-output-display}\n![](Take-Home_Ex02_files/figure-html/unnamed-chunk-56-1.png){width=768}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nlisa_all_sig <- lisa_all  %>%\n  filter(p_ii_sim < 0.05)\nlisa_th_sig <- lisa_th  %>%\n  filter(p_ii_sim < 0.05)\nlisa_fr_sig <- lisa_fr  %>%\n  filter(p_ii_sim < 0.05)\n\n\ntmap_mode(\"plot\")\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\ntmap mode set to plotting\n```\n\n\n:::\n\n```{.r .cell-code}\nmap1 <- tm_shape(lisa_all) +\n  tm_polygons() +\n  tm_borders(alpha = 0.5) +\n  tm_shape(lisa_all_sig) +\n  tm_fill(\"mean\") + \n  tm_borders(alpha = 0.4) + \n  tm_layout(main.title = \"LISA Map of Revenue/Tourist across Province\",\n          main.title.size = 0.8)\n\nmap2 <- tm_shape(lisa_th) +\n  tm_polygons() +\n  tm_borders(alpha = 0.5) +\n  tm_shape(lisa_th_sig) +\n  tm_fill(\"mean\") + \n  tm_borders(alpha = 0.4) + \n  tm_layout(main.title = \"LISA Map of Revenue/Tourist (Thai) across Province\",\n          main.title.size = 0.8)\n\nmap3 <- tm_shape(lisa_fr) +\n  tm_polygons() +\n  tm_borders(alpha = 0.5) +\n  tm_shape(lisa_fr_sig) +\n  tm_fill(\"mean\") + \n  tm_borders(alpha = 0.4) + \n  tm_layout(main.title = \"LISA Map of Revenue/Tourist (Foreign) across Province\",\n          main.title.size = 0.8)\n\ntmap_arrange(map1, map2, map3, ncol = 3)\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nWarning: One tm layer group has duplicated layer types, which are omitted. To\ndraw multiple layers of the same type, use multiple layer groups (i.e. specify\ntm_shape prior to each of them).\nWarning: One tm layer group has duplicated layer types, which are omitted. To\ndraw multiple layers of the same type, use multiple layer groups (i.e. specify\ntm_shape prior to each of them).\nWarning: One tm layer group has duplicated layer types, which are omitted. To\ndraw multiple layers of the same type, use multiple layer groups (i.e. specify\ntm_shape prior to each of them).\n```\n\n\n:::\n\n::: {.cell-output-display}\n![](Take-Home_Ex02_files/figure-html/unnamed-chunk-57-1.png){width=768}\n:::\n:::\n\n\n\n\n# Overnight Guest\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Revenue/Overnight Guest\nlisa_og <- th_tour_knn5_all %>%\n  mutate(local_moran = local_moran(\n    revenue_tourist_stay, nb, wt, nsim = 999),\n    .before = 1) %>%\n  unnest(local_moran)\n\n# Proportion of Tourist who stay overnight\nlisa_ogp <- th_tour_knn5_all %>%\n  mutate(local_moran = local_moran(\n    tourist_stay_all, nb, wt, nsim = 999),\n    .before = 1) %>%\n  unnest(local_moran)\n\ntmap_mode(\"plot\")\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\ntmap mode set to plotting\n```\n\n\n:::\n\n```{.r .cell-code}\nmap1 <- tm_shape(lisa_og) +\n  tm_fill(\"ii\") + \n  tm_borders(alpha = 0.5) +\n  tm_view(set.zoom.limits = c(6,8)) +\n  tm_layout(main.title = \"local Moran's I of Revenue/Overnight Guest\",\n            main.title.size = 0.8)\n\nmap2 <- tm_shape(lisa_og) +\n  tm_fill(\"p_ii_sim\",\n          breaks = c(0, 0.001, 0.01, 0.05, 1),\n              labels = c(\"0.001\", \"0.01\", \"0.05\", \"Not sig\")) + \n  tm_borders(alpha = 0.5) +\n  tm_layout(main.title = \"p-value of local Moran's I (Revenue/Overnight Guest)\",\n            main.title.size = 0.8)\n\nmap3 <- tm_shape(lisa_ogp) +\n  tm_fill(\"ii\") + \n  tm_borders(alpha = 0.5) +\n  tm_view(set.zoom.limits = c(6,8)) +\n  tm_layout(main.title = \"local Moran's I of Overnight Tourist Proportion \",\n            main.title.size = 0.8)\n\nmap4 <- tm_shape(lisa_ogp) +\n  tm_fill(\"p_ii_sim\",\n          breaks = c(0, 0.001, 0.01, 0.05, 1),\n              labels = c(\"0.001\", \"0.01\", \"0.05\", \"Not sig\")) + \n  tm_borders(alpha = 0.5) +\n  tm_layout(main.title = \"p-value of local Moran's I (Overnight Tourist Proportion)\",\n            main.title.size = 0.8)\n\n\ntmap_arrange(map1, map2, map3, map4, ncol = 2, nrow = 2)\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nVariable(s) \"ii\" contains positive and negative values, so midpoint is set to 0. Set midpoint = NA to show the full spectrum of the color palette.\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nVariable(s) \"ii\" contains positive and negative values, so midpoint is set to 0. Set midpoint = NA to show the full spectrum of the color palette.\n```\n\n\n:::\n\n::: {.cell-output-display}\n![](Take-Home_Ex02_files/figure-html/unnamed-chunk-58-1.png){width=768}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nlisa_og_sig <- lisa_og  %>%\n  filter(p_ii_sim < 0.05)\nlisa_ogp_sig <- lisa_ogp  %>%\n  filter(p_ii_sim < 0.05)\n\n\ntmap_mode(\"plot\")\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\ntmap mode set to plotting\n```\n\n\n:::\n\n```{.r .cell-code}\nmap1 <- tm_shape(lisa_og) +\n  tm_polygons() +\n  tm_borders(alpha = 0.5) +\n  tm_shape(lisa_og_sig) +\n  tm_fill(\"mean\") + \n  tm_borders(alpha = 0.4) + \n  tm_layout(main.title = \"LISA Map of Revenue/Overnight Guest across Province\",\n          main.title.size = 0.8)\n\nmap2 <- tm_shape(lisa_ogp) +\n  tm_polygons() +\n  tm_borders(alpha = 0.5) +\n  tm_shape(lisa_ogp_sig) +\n  tm_fill(\"mean\") + \n  tm_borders(alpha = 0.4) + \n  tm_layout(main.title = \"LISA Map of Overnight Tourist Proportion across Province\",\n          main.title.size = 0.8)\n\ntmap_arrange(map1, map2, ncol = 2)\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nWarning: One tm layer group has duplicated layer types, which are omitted. To\ndraw multiple layers of the same type, use multiple layer groups (i.e. specify\ntm_shape prior to each of them).\nWarning: One tm layer group has duplicated layer types, which are omitted. To\ndraw multiple layers of the same type, use multiple layer groups (i.e. specify\ntm_shape prior to each of them).\n```\n\n\n:::\n\n::: {.cell-output-display}\n![](Take-Home_Ex02_files/figure-html/unnamed-chunk-59-1.png){width=768}\n:::\n:::\n\n\n:::\n\nWhile not unexpected, aklds;akdsl;fakdl;sfk;a\n\n\n## 4.2 Local Moran's I across Space and Time (Year)\n\nGiven the iterative process and charts, I created a function to generate the LISA chart. Using another function that iterates across different years, I can then visualize the changes with `tmap_animation`. While the Local Moran's I and p-value charts are not shown, it is believed that the main takeaway of the Local Moran's I is in the LISA chart (in order to identify clusters and outliers).\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Function to \nlocal_moran_space <- function(data, col, value, kpi) {\n  # Set Seed\n  set.seed(42)\n  \n  # Filter sf dataframe\n  filtered_data <- data %>%\n    filter(!!sym(col) == value)\n  \n  lisa_ogp <- th_tour_knn5_all %>%\n  mutate(local_moran = local_moran(\n    tourist_stay_all, nb, wt, nsim = 999),\n    .before = 1) %>%\n  unnest(local_moran)\n  \n  \n  # Append neighbour list and calculate spatial weight matrix\n  filtered_data <- filtered_data %>%\n    mutate(nb = nb_knn_5,\n           wt = st_weights(nb, style = \"W\"),\n           wt_inv = st_inverse_distance(include_self(nb), geometry = coords_cent, \n                                        scale = 100, alpha = 1),\n           local_moran = local_moran(!!sym(kpi), nb, wt, nsim = 999),\n           .before = 1) %>%\n    unnest(local_moran)\n  \n  # map1 <- tm_shape(filtered_data) +\n  #   tm_fill(\"ii\") + \n  #   tm_borders(alpha = 0.5) +\n  #   tm_view(set.zoom.limits = c(6,8)) +\n  #   tm_layout(main.title = paste0(\"local Moran's I \",kpi,\" (\",value, \")\"),\n  #             main.title.size = 0.8)\n  # \n  # map2 <- tm_shape(filtered_data) +\n  #   tm_fill(\"p_ii\",\n  #         breaks = c(0, 0.001, 0.01, 0.05, 1),\n  #             labels = c(\"0.001\", \"0.01\", \"0.05\", \"Not sig\")) + \n  #   tm_borders(alpha = 0.5) +\n  #   tm_layout(main.title = paste0(\"p-value of local Moran's I \",kpi,\" (\",value, \")\"),\n  #             main.title.size = 0.8)\n  \n  filter_sig <- filtered_data  %>%\n    filter(p_ii_sim < 0.05)\n  \n  map3 <- tm_shape(filtered_data) +\n    tm_polygons() +\n    tm_borders(alpha = 0.5) +\n    tm_shape(filter_sig) +\n    tm_fill(\"mean\") + \n    tm_borders(alpha = 0.4) + \n    tm_layout(main.title = paste0(\"LISA Map of \",kpi,\" (\",value, \")\"),\n              main.title.size = 0.4,\n              legend.text.size = 0.3,\n              legend.title.size = 0.4)\n    # tm_layout(main.title = paste0(\"LISA Map of \",kpi,\" (\",value, \")\"),\n    #       main.title.size = 0.8)\n  \n  # all_map <- tmap_arrange(map1, map2, map3, ncol = 3)\n  # return(all_map)\n  # return(list(map1 = map1, map2 = map2, map3 = map3))\n  return(map3)\n}\n```\n:::\n\n\n\n\n\n:::panel-tabset\n\n# Revenue\n\nFirst, the animated chart for \"revenue_thai_prop\" has to be created.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nall_local_moran_maps <- lapply(year_list, function(value) {\n  # Call the local_moran_space function for each value in the list\n  map_result <- local_moran_space(data = th_bound_tour_year, \n                                  col = \"year\", \n                                  value = value, \n                                  kpi = \"revenue_thai_prop\")\n  \n  return(map_result)  # Store the resulting map\n})\n\ntmap_animation(all_local_moran_maps, filename = \"images/animated_revenue_thai_prop_year.gif\",\n               width = 1000, height = 1000, dpi = 300, delay = 50)\n```\n:::\n\n\n\nNow I can view the LISA chart across each year.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Visualize gif\nknitr::include_graphics(\"images/animated_revenue_thai_prop_year.gif\")\n```\n\n::: {.cell-output-display}\n![](images/animated_revenue_thai_prop_year.gif)\n:::\n:::\n\n\n\nNow i do the same for \"revenue_foreign_prop\".\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nall_local_moran_maps <- lapply(year_list, function(value) {\n  # Call the local_moran_space function for each value in the list\n  map_result <- local_moran_space(data = th_bound_tour_year, \n                                  col = \"year\", \n                                  value = value, \n                                  kpi = \"revenue_foreign_prop\")\n  \n  return(map_result)  # Store the resulting map\n})\n\ntmap_animation(all_local_moran_maps, filename = \"images/animated_revenue_foreign_prop_year.gif\",\n               width = 1000, height = 1000, dpi = 300, delay = 50)\n```\n:::\n\n\n\nAnd now I can visualize the gif.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Visualize gif\nknitr::include_graphics(\"images/animated_revenue_foreign_prop_year.gif\")\n```\n\n::: {.cell-output-display}\n![](images/animated_revenue_foreign_prop_year.gif)\n:::\n:::\n\n\n\n\n# Revenue/Tourist\n\nIn Revenue/Tourist, I am interested in \"revenue_tourist_all\", \"revenue_tourist_thai\" and \"revenue_tourist_foreign\". Lets create and view the gif for each of them.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nall_local_moran_maps <- lapply(year_list, function(value) {\n  # Call the local_moran_space function for each value in the list\n  map_result <- local_moran_space(data = th_bound_tour_year, \n                                  col = \"year\", \n                                  value = value, \n                                  kpi = \"revenue_tourist_all\")\n  \n  return(map_result)  # Store the resulting map\n})\n\ntmap_animation(all_local_moran_maps, filename = \"images/animated_revenue_tourist_all_year.gif\",\n               width = 1000, height = 1000, dpi = 300, delay = 50)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n# Visualize gif\nknitr::include_graphics(\"images/animated_revenue_tourist_all_year.gif\")\n```\n\n::: {.cell-output-display}\n![](images/animated_revenue_tourist_all_year.gif)\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nall_local_moran_maps <- lapply(year_list, function(value) {\n  # Call the local_moran_space function for each value in the list\n  map_result <- local_moran_space(data = th_bound_tour_year, \n                                  col = \"year\", \n                                  value = value, \n                                  kpi = \"revenue_tourist_thai\")\n  \n  return(map_result)  # Store the resulting map\n})\n\ntmap_animation(all_local_moran_maps, filename = \"images/animated_revenue_tourist_thai_year.gif\",\n               width = 1000, height = 1000, dpi = 300, delay = 50)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n# Visualize gif\nknitr::include_graphics(\"images/animated_revenue_tourist_thai_year.gif\")\n```\n\n::: {.cell-output-display}\n![](images/animated_revenue_tourist_thai_year.gif)\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nall_local_moran_maps <- lapply(year_list, function(value) {\n  # Call the local_moran_space function for each value in the list\n  map_result <- local_moran_space(data = th_bound_tour_year, \n                                  col = \"year\", \n                                  value = value, \n                                  kpi = \"revenue_tourist_foreign\")\n  \n  return(map_result)  # Store the resulting map\n})\n\ntmap_animation(all_local_moran_maps, filename = \"images/animated_revenue_tourist_foreign_year.gif\",\n               width = 1000, height = 1000, dpi = 300, delay = 50)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n# Visualize gif\nknitr::include_graphics(\"images/animated_revenue_tourist_foreign_year.gif\")\n```\n\n::: {.cell-output-display}\n![](images/animated_revenue_tourist_foreign_year.gif)\n:::\n:::\n\n\n\n\n# Overnight Guest\n\nFinally, for overnight guest key indicators, I'm interested in how the LISA chart will act for \"revenue_tourist_stay\" and \"tourist_stay_all\".\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nall_local_moran_maps <- lapply(year_list, function(value) {\n  # Call the local_moran_space function for each value in the list\n  map_result <- local_moran_space(data = th_bound_tour_year, \n                                  col = \"year\", \n                                  value = value, \n                                  kpi = \"revenue_tourist_stay\")\n  \n  return(map_result)  # Store the resulting map\n})\n\ntmap_animation(all_local_moran_maps, filename = \"images/animated_revenue_tourist_stay_year.gif\",\n               width = 1000, height = 1000, dpi = 300, delay = 50)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n# Visualize gif\nknitr::include_graphics(\"images/animated_revenue_tourist_stay_year.gif\")\n```\n\n::: {.cell-output-display}\n![](images/animated_revenue_tourist_stay_year.gif)\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nall_local_moran_maps <- lapply(year_list, function(value) {\n  # Call the local_moran_space function for each value in the list\n  map_result <- local_moran_space(data = th_bound_tour_year, \n                                  col = \"year\", \n                                  value = value, \n                                  kpi = \"tourist_stay_all\")\n  \n  return(map_result)  # Store the resulting map\n})\n\ntmap_animation(all_local_moran_maps, filename = \"images/animated_tourist_stay_all_year.gif\",\n               width = 1000, height = 1000, dpi = 300, delay = 50)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n# Visualize gif\nknitr::include_graphics(\"images/animated_tourist_stay_all_year.gif\")\n```\n\n::: {.cell-output-display}\n![](images/animated_tourist_stay_all_year.gif)\n:::\n:::\n\n\n\n:::\n\nWhen looking at the revenue proportion for Foreign tourists, I can see a group of provinces surrounding Phuket (exhibiting \"high-high\" behaviour across the years. They in turn are then surrounded by provinces exhibiting \"low-high\" for 2019-2020. In 2022, Krabi changed from \"high-high\" to \"low-low\", suggesting the impact of Covid on how foreign tourists not travelling less further from Phuket. Provinces intersperse around the middle of Thailand are \"low-low\" throughout the years, highlighting how tourism is driven by domestic travel in those provinces.\n\nLooking at revenue per tourists, Bangkok is highlighted as \"High-low\" from 2019-2022. Zooming into foreign revenue per foreign tourist, Kachanaburi (border province) shows up as \"High-low\" during 2020. This could be because of Covid, more revenue generated from foreign tourists travelling across the border. A sizable number of provinces around the middle of Thailand are \"low-low\" throughout the years, for both foreign and Thai tourists, suggesting that either tourists do not spend much in those areas or goods and services are much cheaper in those areas.\n\n\n\n\n## 4.3 Local Moran's I across Space and Time (Year and Month)\n\nasdaadsads\n\n:::panel-tabset\n\n# Revenue\n\nasadsad\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nall_local_moran_maps <- lapply(year_month_list, function(value) {\n  # Call the local_moran_space function for each value in the list\n  map_result <- local_moran_space(data = th_bound_tour_year_month, \n                                  col = \"date.y\", \n                                  value = value, \n                                  kpi = \"revenue_thai_prop\")\n  \n  return(map_result)  # Store the resulting map\n})\n\ntmap_animation(all_local_moran_maps, filename = \"images/animated_revenue_thai_prop_year_month.gif\",\n               width = 1000, height = 1000, dpi = 300, delay = 50)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n# Visualize gif\nknitr::include_graphics(\"images/animated_revenue_thai_prop_year_month.gif\")\n```\n\n::: {.cell-output-display}\n![](images/animated_revenue_thai_prop_year_month.gif)\n:::\n:::\n\n\n\nadsdads\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nall_local_moran_maps <- lapply(year_month_list, function(value) {\n  # Call the local_moran_space function for each value in the list\n  map_result <- local_moran_space(data = th_bound_tour_year_month, \n                                  col = \"date.y\", \n                                  value = value, \n                                  kpi = \"revenue_foreign_prop\")\n  \n  return(map_result)  # Store the resulting map\n})\n\ntmap_animation(all_local_moran_maps, filename = \"images/animated_revenue_foreign_prop_year_month.gif\",\n               width = 1000, height = 1000, dpi = 300, delay = 50)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n# Visualize gif\nknitr::include_graphics(\"images/animated_revenue_foreign_prop_year_month.gif\")\n```\n\n::: {.cell-output-display}\n![](images/animated_revenue_foreign_prop_year_month.gif)\n:::\n:::\n\n\n\n\n# Revenue/Tourist\n\nadsaads\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nall_local_moran_maps <- lapply(year_month_list, function(value) {\n  # Call the local_moran_space function for each value in the list\n  map_result <- local_moran_space(data = th_bound_tour_year_month, \n                                  col = \"date.y\", \n                                  value = value, \n                                  kpi = \"revenue_tourist_all\")\n  \n  return(map_result)  # Store the resulting map\n})\n\ntmap_animation(all_local_moran_maps, filename = \"images/animated_revenue_tourist_all_year_month.gif\",\n               width = 1000, height = 1000, dpi = 300, delay = 50)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n# Visualize gif\nknitr::include_graphics(\"images/animated_revenue_tourist_all_year_month.gif\")\n```\n\n::: {.cell-output-display}\n![](images/animated_revenue_tourist_all_year_month.gif)\n:::\n:::\n\n\n\nasasd\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nall_local_moran_maps <- lapply(year_month_list, function(value) {\n  # Call the local_moran_space function for each value in the list\n  map_result <- local_moran_space(data = th_bound_tour_year_month, \n                                  col = \"date.y\", \n                                  value = value, \n                                  kpi = \"revenue_tourist_thai\")\n  \n  return(map_result)  # Store the resulting map\n})\n\ntmap_animation(all_local_moran_maps, filename = \"images/animated_revenue_tourist_thai_year_month.gif\",\n               width = 1000, height = 1000, dpi = 300, delay = 50)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n# Visualize gif\nknitr::include_graphics(\"images/animated_revenue_tourist_thai_year_month.gif\")\n```\n\n::: {.cell-output-display}\n![](images/animated_revenue_tourist_thai_year_month.gif)\n:::\n:::\n\n\n\nadsadsdsa\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nall_local_moran_maps <- lapply(year_month_list, function(value) {\n  # Call the local_moran_space function for each value in the list\n  map_result <- local_moran_space(data = th_bound_tour_year_month, \n                                  col = \"date.y\", \n                                  value = value, \n                                  kpi = \"revenue_tourist_foreign\")\n  \n  return(map_result)  # Store the resulting map\n})\n\ntmap_animation(all_local_moran_maps, filename = \"images/animated_revenue_tourist_foreign_year_month.gif\",\n               width = 1000, height = 1000, dpi = 300, delay = 50)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n# Visualize gif\nknitr::include_graphics(\"images/animated_revenue_tourist_foreign_year_month.gif\")\n```\n\n::: {.cell-output-display}\n![](images/animated_revenue_tourist_foreign_year_month.gif)\n:::\n:::\n\n\n\n\n# Overnight Guest\n\nadsa\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nall_local_moran_maps <- lapply(year_month_list, function(value) {\n  # Call the local_moran_space function for each value in the list\n  map_result <- local_moran_space(data = th_bound_tour_year_month, \n                                  col = \"date.y\", \n                                  value = value, \n                                  kpi = \"revenue_tourist_stay\")\n  \n  return(map_result)  # Store the resulting map\n})\n\ntmap_animation(all_local_moran_maps, filename = \"images/animated_revenue_tourist_stay_year_month.gif\",\n               width = 1000, height = 1000, dpi = 300, delay = 50)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n# Visualize gif\nknitr::include_graphics(\"images/animated_revenue_tourist_stay_year_month.gif\")\n```\n\n::: {.cell-output-display}\n![](images/animated_revenue_tourist_stay_year_month.gif)\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nall_local_moran_maps <- lapply(year_month_list, function(value) {\n  # Call the local_moran_space function for each value in the list\n  map_result <- local_moran_space(data = th_bound_tour_year_month, \n                                  col = \"date.y\", \n                                  value = value, \n                                  kpi = \"tourist_stay_all\")\n  \n  return(map_result)  # Store the resulting map\n})\n\ntmap_animation(all_local_moran_maps, filename = \"images/animated_tourist_stay_all_year_month.gif\",\n               width = 1000, height = 1000, dpi = 300, delay = 50)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n# Visualize gif\nknitr::include_graphics(\"images/animated_tourist_stay_all_year_month.gif\")\n```\n\n::: {.cell-output-display}\n![](images/animated_tourist_stay_all_year_month.gif)\n:::\n:::\n\n\n\n:::\n\n\n\n# 5 Spatio-Temporal Analysis of Thailand Tourism Key Indicators\n\nAs follows:\n\n## 5.1 Preprocessing\n\n## 5.2 Mann-Kendall\n\n## 5.3 Emerging Hotspot Analysis\n\n# 6 Conclusion\n\n\n",
    "supporting": [
      "Take-Home_Ex02_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {
      "include-in-header": [
        "<script src=\"../../site_libs/htmlwidgets-1.6.4/htmlwidgets.js\"></script>\n<link href=\"../../site_libs/datatables-css-0.0.0/datatables-crosstalk.css\" rel=\"stylesheet\" />\n<script src=\"../../site_libs/datatables-binding-0.33/datatables.js\"></script>\n<script src=\"../../site_libs/jquery-3.6.0/jquery-3.6.0.min.js\"></script>\n<link href=\"../../site_libs/dt-core-1.13.6/css/jquery.dataTables.min.css\" rel=\"stylesheet\" />\n<link href=\"../../site_libs/dt-core-1.13.6/css/jquery.dataTables.extra.css\" rel=\"stylesheet\" />\n<script src=\"../../site_libs/dt-core-1.13.6/js/jquery.dataTables.min.js\"></script>\n<link href=\"../../site_libs/dt-ext-scroller-1.13.6/css/scroller.dataTables.min.css\" rel=\"stylesheet\" />\n<script src=\"../../site_libs/dt-ext-scroller-1.13.6/js/dataTables.scroller.min.js\"></script>\n<link href=\"../../site_libs/crosstalk-1.2.1/css/crosstalk.min.css\" rel=\"stylesheet\" />\n<script src=\"../../site_libs/crosstalk-1.2.1/js/crosstalk.min.js\"></script>\n<link href=\"../../site_libs/selectize-0.12.4/css/selectize.bootstrap3.css\" rel=\"stylesheet\" />\n<script src=\"../../site_libs/selectize-0.12.4/js/selectize.min.js\"></script>\n<meta name=\"viewport\" content=\"width=device-width, initial-scale=1\" />\n<link href=\"../../site_libs/bootstrap-grid-3.4.1/bootstrap-grid.min.css\" rel=\"stylesheet\" />\n"
      ]
    },
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}