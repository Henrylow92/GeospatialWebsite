{
  "hash": "a824c2debaa5fa35c3b3eabe2184b09a",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Take Home Exercise 02\"\nauthor: \"Henry Low\"\ndate: \"Sep 25 2024\"\ndate-modified: \"last-modified\"\nexecute:\n  evalu: true\n  echo: true\n  message: false\n  freeze: true\nformat: html\neditor: visual\ndate-format: \"DD MM YYYY\"\n---\n\n\n\n# Background\n\nTourism has been a key driver of Thailand's gross domestic product (GDP), accounting for up to 20% of it. The COVID-19 pandemic caused the tourism revenue (from domestic and international tourism) to crash to US\\$24 billion in 2020, from US\\$90 billion in 2019.\n\n# Objectives\n\nUsing appropriate global and local spatial autocorrelation analysis and emerging hotspot analysis, I would like to find out:\\\n- If the key indicators of tourism economy of Thailand are independent from space and space and time.\\\n- If the tourism economy is indeed spatial and spatio-temporal dependent.\\\n- If so, detect where the clusters and outliers are, and the emerging hotpot and cold spot areas.\n\n# Study Area\n\nThe study area will be Thailand (sf_polygon features) at [province](https://en.wikipedia.org/wiki/Provinces_of_Thailand) level.\n\n# Data Sources\n\n*(saved under 'data' folder)*\\\n[Thailand Domestic Tourism Statistics 2019-2023](https://www.kaggle.com/datasets/thaweewatboy/thailand-domestic-tourism-statistics) from Kaggle\\\n[Thailand - Subnational Administrative Boundaries from HDX](https://data.humdata.org/dataset/cod-ab-tha?)...[Click here to download here](https://data.humdata.org/dataset/d24bdc45-eb4c-4e3d-8b16-44db02667c27/resource/d0c722ff-6939-4423-ac0d-6501830b1759/download/tha_adm_rtsd_itos_20210121_shp.zip)\n\n# 1 Setting Up\n\n## 1.1 Loading R Packages\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\npacman::p_load(tidyverse, sfdep, sf, tmap)\n```\n:::\n\n\n\n## 1.2 Loading Datasets\n\n### 1.2.1 Thailand Subnational Adminstrative Boundaries\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Load Thailand Province from HDX\nth_bound_l1 <- st_read(dsn = \"data/tha_adm_rtsd_itos_20210121_shp/\", layer = \"tha_admbnda_adm1_rtsd_20220121\")\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nReading layer `tha_admbnda_adm1_rtsd_20220121' from data source \n  `C:\\Users\\Henry\\Desktop\\SMU Masters\\2024-2025 T1\\Geospatial Analytics & Applications\\Project\\GeospatialWebsite\\Take-Home_Ex\\Take-Home_Ex_02\\data\\tha_adm_rtsd_itos_20210121_shp' \n  using driver `ESRI Shapefile'\nSimple feature collection with 77 features and 16 fields\nGeometry type: MULTIPOLYGON\nDimension:     XY\nBounding box:  xmin: 97.34336 ymin: 5.613038 xmax: 105.637 ymax: 20.46507\nGeodetic CRS:  WGS 84\n```\n\n\n:::\n\n```{.r .cell-code}\nglimpse(th_bound_l1)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nRows: 77\nColumns: 17\n$ Shape_Leng <dbl> 2.417227, 1.695100, 1.251111, 1.884945, 3.041716, 1.739908,…\n$ Shape_Area <dbl> 0.13133873, 0.07926199, 0.05323766, 0.12698345, 0.21393797,…\n$ ADM1_EN    <chr> \"Bangkok\", \"Samut Prakan\", \"Nonthaburi\", \"Pathum Thani\", \"P…\n$ ADM1_TH    <chr> \"กรุงเทพมหานคร\", \"สมุทรปราการ\", \"นนทบุรี\", \"ปทุมธานี\", \"พระนครศรีอ…\n$ ADM1_PCODE <chr> \"TH10\", \"TH11\", \"TH12\", \"TH13\", \"TH14\", \"TH15\", \"TH16\", \"TH…\n$ ADM1_REF   <chr> NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA,…\n$ ADM1ALT1EN <chr> NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA,…\n$ ADM1ALT2EN <chr> NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA,…\n$ ADM1ALT1TH <chr> NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA,…\n$ ADM1ALT2TH <chr> NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA,…\n$ ADM0_EN    <chr> \"Thailand\", \"Thailand\", \"Thailand\", \"Thailand\", \"Thailand\",…\n$ ADM0_TH    <chr> \"ประเทศไทย\", \"ประเทศไทย\", \"ประเทศไทย\", \"ประเทศไทย\", \"ประเทศ…\n$ ADM0_PCODE <chr> \"TH\", \"TH\", \"TH\", \"TH\", \"TH\", \"TH\", \"TH\", \"TH\", \"TH\", \"TH\",…\n$ date       <date> 2019-02-18, 2019-02-18, 2019-02-18, 2019-02-18, 2019-02-18…\n$ validOn    <date> 2022-01-22, 2022-01-22, 2022-01-22, 2022-01-22, 2022-01-22…\n$ validTo    <date> -001-11-30, -001-11-30, -001-11-30, -001-11-30, -001-11-30…\n$ geometry   <MULTIPOLYGON [°]> MULTIPOLYGON (((100.6139 13..., MULTIPOLYGON (…\n```\n\n\n:::\n\n```{.r .cell-code}\n# Visualize the boundaries\nplot(st_geometry(th_bound_l1))\n```\n\n::: {.cell-output-display}\n![](Take-Home_Ex02_files/figure-html/unnamed-chunk-2-1.png){width=672}\n:::\n:::\n\n\n\n### 1.2.2 Thailand Tourism Data\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ntbl_tourism <- read_csv('data/archive/thailand_domestic_tourism_2019_2023_ver2.csv')\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nRows: 30800 Columns: 7\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr  (5): province_thai, province_eng, region_thai, region_eng, variable\ndbl  (1): value\ndate (1): date\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n```\n\n\n:::\n\n```{.r .cell-code}\nglimpse(tbl_tourism)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nRows: 30,800\nColumns: 7\n$ date          <date> 2019-01-01, 2019-01-01, 2019-01-01, 2019-01-01, 2019-01…\n$ province_thai <chr> \"กรุงเทพมหานคร\", \"ลพบุรี\", \"พระนครศรีอยุธยา\", \"สระบุรี\", \"ชัยนาท…\n$ province_eng  <chr> \"Bangkok\", \"Lopburi\", \"Phra Nakhon Si Ayutthaya\", \"Sarab…\n$ region_thai   <chr> \"ภาคกลาง\", \"ภาคกลาง\", \"ภาคกลาง\", \"ภาคกลาง\", \"ภาคกลาง\", \"…\n$ region_eng    <chr> \"central\", \"central\", \"central\", \"central\", \"central\", \"…\n$ variable      <chr> \"ratio_tourist_stay\", \"ratio_tourist_stay\", \"ratio_touri…\n$ value         <dbl> 93.37, 61.32, 73.37, 67.33, 79.31, 71.70, 64.65, 71.21, …\n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n# Find values in Th bound that are not in Tourism Data\nonly_in_th_bound_l1 <- anti_join(th_bound_l1, tbl_tourism, by = c(\"ADM1_EN\" = \"province_eng\")) %>% pull(ADM1_EN)\n\n# Find values in Tourism Data that are not in Th Bound\nonly_in_tbl_tourism <- anti_join(tbl_tourism, th_bound_l1, by = c(\"province_eng\" = \"ADM1_EN\")) %>% pull(province_eng)\n\n# See all values\nunmatched_values <- union(only_in_th_bound_l1, only_in_tbl_tourism)\nprint(unmatched_values)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n [1] \"Lop Buri\"         \"Chai Nat\"         \"Chon Buri\"        \"Prachin Buri\"    \n [5] \"Buri Ram\"         \"Si Sa Ket\"        \"Nong Bua Lam Phu\" \"Phangnga\"        \n [9] \"Lopburi\"          \"Chainat\"          \"Chonburi\"         \"Prachinburi\"     \n[13] \"Phang Nga\"        \"Buriram\"          \"Sisaket\"          \"Nong Bua Lamphu\" \n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n# Data processing\ntbl_tourism_wide <- tbl_tourism %>%\n  mutate(province_eng = recode(province_eng,\n                       \"Lopburi\" = \"Lop Buri\",\n                       \"Chainat\" = \"Chai Nat\",\n                       \"Chonburi\" = \"Chon Buri\",\n                       \"Prachinburi\" = \"Prachin Buri\",\n                       \"Phang Nga\" = \"Phangnga\",\n                       \"Buriram\" = \"Buri Ram\",\n                       \"Sisaket\" = \"Si Sa Ket\",\n                       \"Nong Bua Lamphu\" = \"Nong Bua Lam Phu\"\n                       ),\n         province_eng = trimws(province_eng)\n         ) %>%\n  pivot_wider(., names_from = \"variable\", values_from = \"value\") %>%\n  mutate(total_avail_room = round(no_tourist_stay/ratio_tourist_stay*100,0))\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n# Summarize across all years\ntbl_tourism_sum_all <- tbl_tourism_wide %>%\n  group_by(province_eng, province_thai, region_thai, region_eng) %>%\n  summarize(\n    ratio_tourist_stay = mean(ratio_tourist_stay, na.rm = TRUE),\n    no_tourist_stay = sum(no_tourist_stay, na.rm = TRUE),\n    no_tourist_all = sum(no_tourist_all, na.rm = TRUE),\n    no_tourist_thai = sum(no_tourist_thai, na.rm = TRUE),\n    no_tourist_foreign = sum(no_tourist_foreign, na.rm = TRUE),\n    revenue_all = sum(revenue_all, na.rm = TRUE),\n    revenue_thai = sum(revenue_thai, na.rm = TRUE),\n    revenue_foreign = sum(revenue_foreign, na.rm = TRUE),\n    total_avail_room = sum(total_avail_room, na.rm = TRUE)\n  ) %>%\n  ungroup()\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\n`summarise()` has grouped output by 'province_eng', 'province_thai',\n'region_thai'. You can override using the `.groups` argument.\n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n# Summarize across all years\ntbl_tourism_sum_year <- tbl_tourism_wide %>%\n  mutate(year = year(date)) %>%\n  group_by(year, province_eng, province_thai, region_thai, region_eng) %>%\n  summarize(\n    ratio_tourist_stay = mean(ratio_tourist_stay, na.rm = TRUE),\n    no_tourist_stay = sum(no_tourist_stay, na.rm = TRUE),\n    no_tourist_all = sum(no_tourist_all, na.rm = TRUE),\n    no_tourist_thai = sum(no_tourist_thai, na.rm = TRUE),\n    no_tourist_foreign = sum(no_tourist_foreign, na.rm = TRUE),\n    revenue_all = sum(revenue_all, na.rm = TRUE),\n    revenue_thai = sum(revenue_thai, na.rm = TRUE),\n    revenue_foreign = sum(revenue_foreign, na.rm = TRUE),\n    total_avail_room = sum(total_avail_room, na.rm = TRUE)\n  ) %>%\n  ungroup()\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\n`summarise()` has grouped output by 'year', 'province_eng', 'province_thai',\n'region_thai'. You can override using the `.groups` argument.\n```\n\n\n:::\n:::\n\n\n### 1.2.3 Merge Tourism data\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Join with tourism data all\nth_bound_tour_all <- left_join(th_bound_l1, tbl_tourism_sum_all, by = c(\"ADM1_EN\" = \"province_eng\")) \n\n# Join with tourism data by year\nth_bound_tour_year <- left_join(th_bound_l1, tbl_tourism_sum_year, by = c(\"ADM1_EN\" = \"province_eng\")) \n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ntmap_mode(\"plot\")\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\ntmap mode set to plotting\n```\n\n\n:::\n\n```{.r .cell-code}\ntm_shape(th_bound_tour_all) +\n  tm_fill(\"revenue_all\", \n          style = \"quantile\", \n          palette = \"Blues\",\n          title = \"revenue_all\") +\n  tm_layout(main.title = \"Distribution of Tourism Revenue by Province\",\n            main.title.position = \"center\",\n            main.title.size = 1.2,\n            legend.height = 0.45, \n            legend.width = 0.35,\n            frame = TRUE) +\n  tm_borders(alpha = 0.5) +\n  tm_compass(type=\"8star\", size = 2) +\n  tm_scale_bar() +\n  tm_grid(alpha =0.2)\n```\n\n::: {.cell-output-display}\n![](Take-Home_Ex02_files/figure-html/unnamed-chunk-9-1.png){width=1152}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n# Export to processed sub-folder as RDS\nwrite_rds(th_bound_tour_all, 'data/processed/th_bound_tour_all.rds')\n\nwrite_rds(th_bound_tour_year, 'data/processed/th_bound_tour_year.rds')\n```\n:::\n\n\n\n# 2 Exploratory Data Analysis\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nth_bound_tour_all <- th_bound_tour_all %>%\n  mutate(revenue_tourist_all = revenue_all/no_tourist_all,\n         revenue_tourist_thai = revenue_thai/no_tourist_thai,\n         revenue_tourist_foreign = revenue_foreign/no_tourist_foreign,\n         revenue_occ = revenue_all/no_tourist_stay,\n         tourist_occ = no_tourist_all/no_tourist_stay,\n         revenue_room = revenue_all/total_avail_room)\n```\n:::\n\n\n\n\n# 3 Spatial Analysis of Thailand Tourism Key Indicators\n\n\n::: {.cell}\n\n```{.r .cell-code}\nset.seed(42)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nnb <- st_contiguity(th_bound_tour_all$geometry)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n# Step 1: Find the centroid of Phuket (or use the entire geometry)\nphuket_geom <- th_bound_tour_all %>%\n  filter(ADM1_EN == \"Phuket\") %>%\n  st_geometry()\n\n# Step 2: Find the centroids of all other regions\nother_geoms <- th_bound_tour_all %>%\n  filter(ADM1_EN != \"Phuket\") %>%\n  st_geometry()\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n# Step 3: Calculate the nearest neighbor using distance\nnearest_region_index <- st_nearest_feature(phuket_geom, other_geoms)\n\nphuket_index <- which(th_bound_tour_all$ADM1_EN == \"Phuket\")\nnb[[phuket_index]] <- c(nearest_region_index)\nnb[[nearest_region_index]] <- c(nb[[nearest_region_index]], phuket_index)\n```\n:::\n\n\n\n\n\n## 3.1 Global Spatial Autocorrelation\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nwm_q <- th_bound_tour_all %>%\n  mutate(nb = nb,\n         wt = st_weights(nb, style = \"W\", allow_zero = TRUE),\n         .before = 1)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nlongitude_cent <- map_dbl(th_bound_tour_all$geometry, ~st_centroid(.x)[[1]])\nlatitude_cent <- map_dbl(th_bound_tour_all$geometry, ~st_centroid(.x)[[2]])\n\nlongitude <- map_dbl(th_bound_tour_all$geometry, ~st_point_on_surface(.x)[[1]])\nlatitude <- map_dbl(th_bound_tour_all$geometry, ~st_point_on_surface(.x)[[2]])\ncoords <- cbind(longitude, latitude)\n\ncoords_cent <- cbind(longitude_cent, latitude_cent)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nplot(th_bound_tour_all$geometry, border=\"lightgrey\")\npoints(coords, pch = 19, cex = 0.6, col = \"red\")\n\npoints(coords_cent, pch = 19, cex = 0.6, col = \"blue\")\n```\n\n::: {.cell-output-display}\n![](Take-Home_Ex02_files/figure-html/unnamed-chunk-18-1.png){width=1920}\n:::\n:::\n\n\n\n:::panel-tabset\n\n# Revenue\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmoranI_rev <- global_moran(wm_q$revenue_tourist_all,\n                       wm_q$nb,\n                       wm_q$wt)\nglimpse(moranI_rev)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nList of 2\n $ I: num 0.279\n $ K: num 24.8\n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nglobal_moran_test(wm_q$revenue_tourist_foreign,\n                       wm_q$nb,\n                       wm_q$wt)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n\n\tMoran I test under randomisation\n\ndata:  x  \nweights: listw    \n\nMoran I statistic standard deviate = 3.4908, p-value = 0.0002408\nalternative hypothesis: greater\nsample estimates:\nMoran I statistic       Expectation          Variance \n      0.227887991      -0.013157895       0.004768127 \n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nglobal_moran_perm(wm_q$tourist_occ,\n                       wm_q$nb,\n                       wm_q$wt,\n                  nsim = 999)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n\n\tMonte-Carlo simulation of Moran I\n\ndata:  x \nweights: listw  \nnumber of simulations + 1: 1000 \n\nstatistic = 0.25122, observed rank = 999, p-value = 0.002\nalternative hypothesis: two.sided\n```\n\n\n:::\n:::\n\n\n\n\n:::\n\n## 3.2 Local Spatial Autocorrelation\n\n\n\n\n# 4 Spatial-Temporal Analysis of Thailand Tourism Key Indicators\n\n\n## 3.1 Global Spatial\n\n\n\n",
    "supporting": [
      "Take-Home_Ex02_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}