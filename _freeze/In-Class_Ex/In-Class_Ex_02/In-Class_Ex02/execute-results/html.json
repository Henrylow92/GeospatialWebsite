{
  "hash": "d6322675657d4f52973a1b9c0d3752f6",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"In Class Exercise 02\"\nauthor: \"Henry Low\"\ndate: \"Sep 2 2024\"\ndate-modified: \"last-modified\"\nexecute:\n  evalu: true\n  echo: true\n  message: false\n  freeze: true\nformat: html\neditor: visual\n---\n\n\n\n## Piazza Issues\n\n### 1. Unable to run as.SpatialGridDataFrame.im \n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Solution - install maptolls from posit\n#| eval: false # eval: false\ninstall.packages(\"maptools\", repos = \"https://packagemanager.posit.co/cran/2023-10-13\")\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\npackage 'maptools' successfully unpacked and MD5 sums checked\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nWarning: cannot remove prior installation of package 'maptools'\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nWarning in file.copy(savedcopy, lib, recursive = TRUE): problem copying\nC:\\R-4.4.1\\library\\00LOCK\\maptools\\libs\\x64\\maptools.dll to\nC:\\R-4.4.1\\library\\maptools\\libs\\x64\\maptools.dll: Permission denied\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nWarning: restored 'maptools'\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stdout}\n\n```\n\nThe downloaded binary packages are in\n\tC:\\Users\\Henry\\AppData\\Local\\Temp\\RtmpK8h2Yl\\downloaded_packages\n```\n\n\n:::\n:::\n\n\n\n### 2. Create coastal outline\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Load Packages\npacman::p_load(tidyverse, sf, tmap, ggstatsplot, spatstat, raster)\n\n# Load mpsz_sf dataset\nmpsz_sf <- st_read(dsn = \"data/MasterPlan2014SubzoneBoundaryWebSHP\", layer = \"MP14_SUBZONE_WEB_PL\") %>%\n  st_set_crs(., 3414) # Change CRS attribute to 3414\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nReading layer `MP14_SUBZONE_WEB_PL' from data source \n  `C:\\Users\\Henry\\Desktop\\SMU Masters\\2024-2025 T1\\Geospatial Analytics & Applications\\Project\\GeospatialWebsite\\In-Class_Ex\\In-Class_Ex_02\\data\\MasterPlan2014SubzoneBoundaryWebSHP' \n  using driver `ESRI Shapefile'\nSimple feature collection with 323 features and 15 fields\nGeometry type: MULTIPOLYGON\nDimension:     XY\nBounding box:  xmin: 2667.538 ymin: 15748.72 xmax: 56396.44 ymax: 50256.33\nProjected CRS: SVY21\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nWarning: st_crs<- : replacing crs does not reproject data; use st_transform for\nthat\n```\n\n\n:::\n\n```{.r .cell-code}\n# Create costaloutline dataset\nsg_sf <- mpsz_sf %>%\n  st_union() # Can just use st_union instead of requiring costaloutline dataset\n# Check sg_sf\nplot(sg_sf)\n```\n\n::: {.cell-output-display}\n![](In-Class_Ex02_files/figure-html/unnamed-chunk-2-1.png){width=672}\n:::\n:::\n\n\n## Other Spatstat package geospatial processing\n\n### 1. Create ppp objects from sf data frame\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Load childcare sf\nchildcare_sf <- st_read(\"data/child-care-services-geojson.geojson\") %>%\n  st_transform(crs = 3414)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nReading layer `child-care-services-geojson' from data source \n  `C:\\Users\\Henry\\Desktop\\SMU Masters\\2024-2025 T1\\Geospatial Analytics & Applications\\Project\\GeospatialWebsite\\In-Class_Ex\\In-Class_Ex_02\\data\\child-care-services-geojson.geojson' \n  using driver `GeoJSON'\nSimple feature collection with 1545 features and 2 fields\nGeometry type: POINT\nDimension:     XYZ\nBounding box:  xmin: 103.6824 ymin: 1.248403 xmax: 103.9897 ymax: 1.462134\nz_range:       zmin: 0 zmax: 0\nGeodetic CRS:  WGS 84\n```\n\n\n:::\n\n```{.r .cell-code}\n# Create ppp object with as.ppp() from spatstat.geom\nchildcare_ppp <- as.ppp(childcare_sf)\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nWarning in as.ppp.sf(childcare_sf): only first attribute column is used for\nmarks\n```\n\n\n:::\n\n```{.r .cell-code}\n# Visualize ppp object\nplot(childcare_ppp)\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nWarning in default.charmap(ntypes, chars): Too many types to display every type\nas a different character\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nWarning: Only 10 out of 1545 symbols are shown in the symbol map\n```\n\n\n:::\n\n::: {.cell-output-display}\n![](In-Class_Ex02_files/figure-html/unnamed-chunk-3-1.png){width=672}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n# Check property of ppp object\nsummary(childcare_ppp)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nMarked planar point pattern:  1545 points\nAverage intensity 1.91145e-06 points per square unit\n\nCoordinates are given to 11 decimal places\n\nmarks are of type 'character'\nSummary:\n   Length     Class      Mode \n     1545 character character \n\nWindow: rectangle = [11203.01, 45404.24] x [25667.6, 49300.88] units\n                    (34200 x 23630 units)\nWindow area = 808287000 square units\n```\n\n\n:::\n:::\n\n\n### 2. Create owin object from sf data frame\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Create owin object with as.owin() from spatstat.geom\nsg_owin <- as.owin(sg_sf)\n\n# Visualize owin object\nplot(sg_owin)\n```\n\n::: {.cell-output-display}\n![](In-Class_Ex02_files/figure-html/unnamed-chunk-5-1.png){width=672}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n# Check property of owin object\nsummary(sg_owin)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nWindow: polygonal boundary\n80 separate polygons (35 holes)\n                  vertices         area relative.area\npolygon 1            14650  6.97996e+08      8.93e-01\npolygon 2 (hole)         3 -2.21090e+00     -2.83e-09\npolygon 3              285  1.61128e+06      2.06e-03\npolygon 4 (hole)         3 -2.05920e-03     -2.63e-12\npolygon 5 (hole)         3 -8.83647e-03     -1.13e-11\npolygon 6              668  5.40368e+07      6.91e-02\npolygon 7               44  2.26577e+03      2.90e-06\npolygon 8               27  1.50315e+04      1.92e-05\npolygon 9              711  1.28815e+07      1.65e-02\npolygon 10 (hole)       36 -4.01660e+04     -5.14e-05\npolygon 11 (hole)      317 -5.11280e+04     -6.54e-05\npolygon 12 (hole)        3 -3.41405e-01     -4.37e-10\npolygon 13 (hole)        3 -2.89050e-05     -3.70e-14\npolygon 14              77  3.29939e+05      4.22e-04\npolygon 15              30  2.80002e+04      3.58e-05\npolygon 16 (hole)        3 -2.83151e-01     -3.62e-10\npolygon 17              71  8.18750e+03      1.05e-05\npolygon 18 (hole)        3 -1.68316e-04     -2.15e-13\npolygon 19 (hole)       36 -7.79904e+03     -9.97e-06\npolygon 20 (hole)        4 -2.05611e-02     -2.63e-11\npolygon 21 (hole)        3 -2.18000e-06     -2.79e-15\npolygon 22 (hole)        3 -3.65501e-03     -4.67e-12\npolygon 23 (hole)        3 -4.95057e-02     -6.33e-11\npolygon 24 (hole)        3 -3.99521e-02     -5.11e-11\npolygon 25 (hole)        3 -6.62377e-01     -8.47e-10\npolygon 26 (hole)        3 -2.09065e-03     -2.67e-12\npolygon 27              91  1.49663e+04      1.91e-05\npolygon 28 (hole)       26 -1.25665e+03     -1.61e-06\npolygon 29 (hole)      349 -1.21433e+03     -1.55e-06\npolygon 30 (hole)       20 -4.39069e+00     -5.62e-09\npolygon 31 (hole)       48 -1.38338e+02     -1.77e-07\npolygon 32 (hole)       28 -1.99862e+01     -2.56e-08\npolygon 33              40  1.38607e+04      1.77e-05\npolygon 34 (hole)       40 -6.00381e+03     -7.68e-06\npolygon 35 (hole)        7 -1.40545e-01     -1.80e-10\npolygon 36 (hole)       12 -8.36709e+01     -1.07e-07\npolygon 37              45  2.51218e+03      3.21e-06\npolygon 38             142  3.22293e+03      4.12e-06\npolygon 39             148  3.10395e+03      3.97e-06\npolygon 40              75  1.73526e+04      2.22e-05\npolygon 41              83  5.28920e+03      6.76e-06\npolygon 42             211  4.70521e+05      6.02e-04\npolygon 43             106  3.04104e+03      3.89e-06\npolygon 44             266  1.50631e+06      1.93e-03\npolygon 45              71  5.63061e+03      7.20e-06\npolygon 46              10  1.99717e+02      2.55e-07\npolygon 47             478  2.06120e+06      2.64e-03\npolygon 48             155  2.67502e+05      3.42e-04\npolygon 49            1027  1.27782e+06      1.63e-03\npolygon 50 (hole)        3 -1.16959e-03     -1.50e-12\npolygon 51              65  8.42861e+04      1.08e-04\npolygon 52              47  3.82087e+04      4.89e-05\npolygon 53               6  4.50259e+02      5.76e-07\npolygon 54             132  9.53357e+04      1.22e-04\npolygon 55 (hole)        3 -3.23310e-04     -4.13e-13\npolygon 56               4  2.69313e+02      3.44e-07\npolygon 57 (hole)        3 -1.46474e-03     -1.87e-12\npolygon 58            1045  4.44510e+06      5.68e-03\npolygon 59              22  6.74651e+03      8.63e-06\npolygon 60              64  3.43149e+04      4.39e-05\npolygon 61 (hole)        3 -1.98390e-03     -2.54e-12\npolygon 62 (hole)        4 -1.13774e-02     -1.46e-11\npolygon 63              14  5.86546e+03      7.50e-06\npolygon 64              95  5.96187e+04      7.62e-05\npolygon 65 (hole)        4 -1.86410e-02     -2.38e-11\npolygon 66 (hole)        3 -5.12482e-03     -6.55e-12\npolygon 67 (hole)        3 -1.96410e-03     -2.51e-12\npolygon 68 (hole)        3 -5.55856e-03     -7.11e-12\npolygon 69             234  2.08755e+06      2.67e-03\npolygon 70              10  4.90942e+02      6.28e-07\npolygon 71             234  4.72886e+05      6.05e-04\npolygon 72 (hole)       13 -3.91907e+02     -5.01e-07\npolygon 73              15  4.03300e+04      5.16e-05\npolygon 74             227  1.10308e+06      1.41e-03\npolygon 75              10  6.60195e+03      8.44e-06\npolygon 76              19  3.09221e+04      3.95e-05\npolygon 77             145  9.61782e+05      1.23e-03\npolygon 78              30  4.28933e+03      5.49e-06\npolygon 79              37  1.29481e+04      1.66e-05\npolygon 80               4  9.47108e+01      1.21e-07\nenclosing rectangle: [2667.54, 56396.44] x [15748.72, 50256.33] units\n                     (53730 x 34510 units)\nWindow area = 781945000 square units\nFraction of frame area: 0.422\n```\n\n\n:::\n:::\n\n\n\n### 3. Combine point events object and owin object\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Combine point events object and owin object\nchildcareSG_ppp <-  childcare_ppp[sg_owin]\n\n# Visualize combined object\nplot(childcareSG_ppp)\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nWarning in default.charmap(ntypes, chars): Too many types to display every type\nas a different character\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nWarning: Only 10 out of 1545 symbols are shown in the symbol map\n```\n\n\n:::\n\n::: {.cell-output-display}\n![](In-Class_Ex02_files/figure-html/unnamed-chunk-7-1.png){width=672}\n:::\n:::\n\n\n## Spatial Points Pattern Analysis\n\n### 1. Kernel Density Estimation of Spatial Point Event\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Change scale from metre to km\nchildcareSG_ppp.km <- rescale.ppp(childcareSG_ppp, 1000, \"km\")\n\n# Adaptive density estimation\nkde_childcareSG_adaptive <- adaptive.density(childcareSG_ppp.km, method=\"kernel\")\n\n# Visualize results\nplot(kde_childcareSG_adaptive)\n```\n\n::: {.cell-output-display}\n![](In-Class_Ex02_files/figure-html/unnamed-chunk-8-1.png){width=672}\n:::\n:::\n\n\n\n### 2. Convert Kernel Density Estimation Output into grid object\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Convert KDE into grid with spatstat.geom\ngridded_kde_childcareSG_ad <- as(kde_childcareSG_adaptive, \"SpatialGridDataFrame\")\n\n# # Convert KDE into grid with maptools method\n# gridded_kde_childcareSG_ad <- maptools::as.SpatialGridDataFrame.im(kde_childcareSG_adaptive)\n\n# Visualize results\nspplot(gridded_kde_childcareSG_ad)\n```\n\n::: {.cell-output-display}\n![](In-Class_Ex02_files/figure-html/unnamed-chunk-9-1.png){width=672}\n:::\n:::\n\n\n### 3. Visualize Kernel Density Estimation raster with tmap function\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Visualize output\nkde_childcareSG_ad_raster <- raster(kde_childcareSG_adaptive)\ntm_shape(kde_childcareSG_ad_raster) + \n  tm_raster(palette = \"viridis\") +\n  tm_layout(legend.position = c(\"right\", \"bottom\"), \n            frame = FALSE,\n            bg.color = \"#E4D5C9\")\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nWarning: Currect projection of shape kde_childcareSG_ad_raster unknown. Long\nlat (epsg 4326) coordinates assumed.\n```\n\n\n:::\n\n::: {.cell-output-display}\n![](In-Class_Ex02_files/figure-html/unnamed-chunk-10-1.png){width=672}\n:::\n:::\n\n\n\n### 4. Extract Study Area\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Filter specific planning area\npg_owin <- mpsz_sf %>%\n  filter(PLN_AREA_N == \"PUNGGOL\") %>%\n  as.owin()\n\n# Create point events object and filtered owin object\nchildcare_pg <-  childcare_ppp[pg_owin]\n\n# Visualize result\nplot(childcare_pg)  \n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nWarning in default.charmap(ntypes, chars): Too many types to display every type\nas a different character\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nWarning: Only 10 out of 61 symbols are shown in the symbol map\n```\n\n\n:::\n\n::: {.cell-output-display}\n![](In-Class_Ex02_files/figure-html/unnamed-chunk-11-1.png){width=672}\n:::\n:::\n\n\n\n### 5. Monte Carlo Simulation\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Ensure reproducibility\nset.seed(42)\n```\n:::\n\n\n\n### 6. Edge Correction Methods\nGenerally dont have worry about edge correction for Singapopre. \"Ripley\" is a popular method that should work for most cases.\nBut for specific area, users may need to be careful when specific points are too close to edge.\n\n## Geospatial ANalytics: Thailand Road Accident Case Study\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Load road accidents and Convert to sf dataframe\naccidents_sf <- read_csv(\"data/thai_road_accident_2019_2022.csv\") %>% \n  filter(!is.na(longitude) & longitude != \"\", !is.na(latitude) & latitude != \"\") %>%\n  filter(province_en %in% c(\"Bangkok\", \"Nonthaburi\", \"Pathum Thani\", \n                              \"Samut Prakan\", \"Samut Sakhon\", \"Nakhon Pathom\")) %>%\n  st_as_sf(coords = c(\"longitude\", \"latitude\"), crs = 4326) %>%\n  st_transform(crs = 32647)\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nRows: 81735 Columns: 18\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr  (10): province_th, province_en, agency, route, vehicle_type, presumed_c...\ndbl   (6): acc_code, number_of_vehicles_involved, number_of_fatalities, numb...\ndttm  (2): incident_datetime, report_datetime\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n```\n\n\n:::\n\n```{.r .cell-code}\nglimpse(accidents_sf) \n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nRows: 12,986\nColumns: 17\n$ acc_code                    <dbl> 571882, 600001, 605043, 629691, 571887, 59…\n$ incident_datetime           <dttm> 2019-01-01 02:25:00, 2019-01-01 03:00:00,…\n$ report_datetime             <dttm> 2019-01-02 17:32:00, 2019-01-05 10:33:00,…\n$ province_th                 <chr> \"นครปฐม\", \"นนทบุรี\", \"สมุทรปราการ\", \"กรุงเทพมห…\n$ province_en                 <chr> \"Nakhon Pathom\", \"Nonthaburi\", \"Samut Prak…\n$ agency                      <chr> \"department of rural roads\", \"department o…\n$ route                       <chr> \"แยกทางหลวงหมายเลข 4 (กม.ที่ 51+920) - บ้านวัด…\n$ vehicle_type                <chr> \"motorcycle\", \"private/passenger car\", \"pr…\n$ presumed_cause              <chr> \"speeding\", \"speeding\", \"running red light…\n$ accident_type               <chr> \"rollover/fallen on straight road\", \"rollo…\n$ number_of_vehicles_involved <dbl> 1, 1, 2, 1, 1, 1, 1, 1, 1, 1, 2, 2, 3, 2, …\n$ number_of_fatalities        <dbl> 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, …\n$ number_of_injuries          <dbl> 2, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, …\n$ weather_condition           <chr> \"clear\", \"clear\", \"clear\", \"clear\", \"clear…\n$ road_description            <chr> \"straight road\", \"straight road\", \"other\",…\n$ slope_description           <chr> \"no slope\", \"no slope\", \"other\", \"other\", …\n$ geometry                    <POINT [m]> POINT (627012.3 1533381), POINT (655…\n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n# Load thai road for only Bangkok Metropolitan Region\nthai_bound <- st_read(dsn = \"data/tha_adm_rtsd_itos_20210121_shp/\", layer = \"tha_admbnda_adm1_rtsd_20220121\") %>%\n  st_transform(crs = 32647) %>%\n  filter(ADM1_EN %in% c(\"Bangkok\", \"Nonthaburi\", \"Pathum Thani\", \n                              \"Samut Prakan\", \"Samut Sakhon\", \"Nakhon Pathom\"))\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nReading layer `tha_admbnda_adm1_rtsd_20220121' from data source \n  `C:\\Users\\Henry\\Desktop\\SMU Masters\\2024-2025 T1\\Geospatial Analytics & Applications\\Project\\GeospatialWebsite\\In-Class_Ex\\In-Class_Ex_02\\data\\tha_adm_rtsd_itos_20210121_shp' \n  using driver `ESRI Shapefile'\nSimple feature collection with 77 features and 16 fields\nGeometry type: MULTIPOLYGON\nDimension:     XY\nBounding box:  xmin: 97.34336 ymin: 5.613038 xmax: 105.637 ymax: 20.46507\nGeodetic CRS:  WGS 84\n```\n\n\n:::\n\n```{.r .cell-code}\nglimpse(thai_bound)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nRows: 6\nColumns: 17\n$ Shape_Leng <dbl> 2.417227, 1.695100, 1.251111, 1.884945, 2.463030, 1.566369\n$ Shape_Area <dbl> 0.13133873, 0.07926199, 0.05323766, 0.12698345, 0.17891420,…\n$ ADM1_EN    <chr> \"Bangkok\", \"Samut Prakan\", \"Nonthaburi\", \"Pathum Thani\", \"N…\n$ ADM1_TH    <chr> \"กรุงเทพมหานคร\", \"สมุทรปราการ\", \"นนทบุรี\", \"ปทุมธานี\", \"นครปฐม\", …\n$ ADM1_PCODE <chr> \"TH10\", \"TH11\", \"TH12\", \"TH13\", \"TH73\", \"TH74\"\n$ ADM1_REF   <chr> NA, NA, NA, NA, NA, NA\n$ ADM1ALT1EN <chr> NA, NA, NA, NA, NA, NA\n$ ADM1ALT2EN <chr> NA, NA, NA, NA, NA, NA\n$ ADM1ALT1TH <chr> NA, NA, NA, NA, NA, NA\n$ ADM1ALT2TH <chr> NA, NA, NA, NA, NA, NA\n$ ADM0_EN    <chr> \"Thailand\", \"Thailand\", \"Thailand\", \"Thailand\", \"Thailand\",…\n$ ADM0_TH    <chr> \"ประเทศไทย\", \"ประเทศไทย\", \"ประเทศไทย\", \"ประเทศไทย\", \"ประเทศ…\n$ ADM0_PCODE <chr> \"TH\", \"TH\", \"TH\", \"TH\", \"TH\", \"TH\"\n$ date       <date> 2019-02-18, 2019-02-18, 2019-02-18, 2019-02-18, 2019-02-18,…\n$ validOn    <date> 2022-01-22, 2022-01-22, 2022-01-22, 2022-01-22, 2022-01-22,…\n$ validTo    <date> -001-11-30, -001-11-30, -001-11-30, -001-11-30, -001-11-30,…\n$ geometry   <MULTIPOLYGON [m]> MULTIPOLYGON (((674339.8 15..., MULTIPOLYGON (((687139.8 15…\n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n# Visualize accident data\ntmap_mode(\"plot\")\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\ntmap mode set to plotting\n```\n\n\n:::\n\n```{.r .cell-code}\ntm_shape(thai_bound) +\n  tm_polygons() +\n  tm_shape(accidents_sf) +\n  tm_dots(size = 0.01, col = \"black\", alpha = 0.5)\n```\n\n::: {.cell-output-display}\n![](In-Class_Ex02_files/figure-html/unnamed-chunk-15-1.png){width=672}\n:::\n:::\n",
    "supporting": [
      "In-Class_Ex02_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}