{
  "hash": "81bbc9bd167ff547b3e563fb115bc116",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"In Class Exercise 02\"\nauthor: \"Henry Low\"\ndate: \"Sep 2 2024\"\ndate-modified: \"last-modified\"\nexecute:\n  evalu: true\n  echo: true\n  message: false\n  freeze: true\nformat: html\neditor: visual\ndate-format: \"DD MM YYYY\"\n---\n\n\n\n## Loading the R packages\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ninstall.packages(\"maptools\", repos = \"https://packagemanager.posit.co/cran/2023-10-13\")\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\npacman::p_load(tidyverse, sf, tmap, ggstatsplot)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n# # Load costaloutline dataset\n# sg_sf <- mpsz_sf %>%\n#   st_union() # Can just use st_union instead of requiring costaloutline dataset\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n# # Convert KDE output into grid object\n# Using maptools\n# gridded_kde_childcareSG_bw <- maptools::as.SpatialGridDataFrame.im(kde_childcareSG.bw) \n# spplot(gridded_kde_childcareSG_bw)\n\n# Using sf geometry\n# gridded_kde_childcareSG_ad <-  as(kde_childcareSG_adaptive, \"SpatialGridDataFrame\")\n# spplot(gridded_kde_childcareSG_ad)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n# Ensure reproducibility\nset.seed(42)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n# Generally dont have worry about edge correction for Singapopre\n# But for specific area, need to be careful when specific points are too close to edge. \n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n# Load road accidents\naccidents <- read_csv(\"data/thai_road_accident_2019_2022.csv\")\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nRows: 81735 Columns: 18\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr  (10): province_th, province_en, agency, route, vehicle_type, presumed_c...\ndbl   (6): acc_code, number_of_vehicles_involved, number_of_fatalities, numb...\ndttm  (2): incident_datetime, report_datetime\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n```\n\n\n:::\n\n```{.r .cell-code}\naccidents_sf <- accidents %>%\n  filter(!is.na(longitude) & longitude != \"\", !is.na(latitude) & latitude != \"\") %>%\n  st_as_sf(coords = c(\"longitude\", \"latitude\"), crs = 4326) %>%\n  st_transform(crs = 32647)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n# Check\nst_geometry(accidents_sf)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nGeometry set for 81376 features \nGeometry type: POINT\nDimension:     XY\nBounding box:  xmin: -16183190 ymin: -936.228 xmax: 1200243 ymax: 4918525\nProjected CRS: WGS 84 / UTM zone 47N\nFirst 5 geometries:\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nPOINT (701480.8 1654653)\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nPOINT (1130617 1690121)\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nPOINT (598703.8 1368107)\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nPOINT (479343.9 2056771)\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nPOINT (670249 1754802)\n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n# Check\nst_crs(accidents_sf)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nCoordinate Reference System:\n  User input: EPSG:32647 \n  wkt:\nPROJCRS[\"WGS 84 / UTM zone 47N\",\n    BASEGEOGCRS[\"WGS 84\",\n        ENSEMBLE[\"World Geodetic System 1984 ensemble\",\n            MEMBER[\"World Geodetic System 1984 (Transit)\"],\n            MEMBER[\"World Geodetic System 1984 (G730)\"],\n            MEMBER[\"World Geodetic System 1984 (G873)\"],\n            MEMBER[\"World Geodetic System 1984 (G1150)\"],\n            MEMBER[\"World Geodetic System 1984 (G1674)\"],\n            MEMBER[\"World Geodetic System 1984 (G1762)\"],\n            MEMBER[\"World Geodetic System 1984 (G2139)\"],\n            ELLIPSOID[\"WGS 84\",6378137,298.257223563,\n                LENGTHUNIT[\"metre\",1]],\n            ENSEMBLEACCURACY[2.0]],\n        PRIMEM[\"Greenwich\",0,\n            ANGLEUNIT[\"degree\",0.0174532925199433]],\n        ID[\"EPSG\",4326]],\n    CONVERSION[\"UTM zone 47N\",\n        METHOD[\"Transverse Mercator\",\n            ID[\"EPSG\",9807]],\n        PARAMETER[\"Latitude of natural origin\",0,\n            ANGLEUNIT[\"degree\",0.0174532925199433],\n            ID[\"EPSG\",8801]],\n        PARAMETER[\"Longitude of natural origin\",99,\n            ANGLEUNIT[\"degree\",0.0174532925199433],\n            ID[\"EPSG\",8802]],\n        PARAMETER[\"Scale factor at natural origin\",0.9996,\n            SCALEUNIT[\"unity\",1],\n            ID[\"EPSG\",8805]],\n        PARAMETER[\"False easting\",500000,\n            LENGTHUNIT[\"metre\",1],\n            ID[\"EPSG\",8806]],\n        PARAMETER[\"False northing\",0,\n            LENGTHUNIT[\"metre\",1],\n            ID[\"EPSG\",8807]]],\n    CS[Cartesian,2],\n        AXIS[\"(E)\",east,\n            ORDER[1],\n            LENGTHUNIT[\"metre\",1]],\n        AXIS[\"(N)\",north,\n            ORDER[2],\n            LENGTHUNIT[\"metre\",1]],\n    USAGE[\n        SCOPE[\"Navigation and medium accuracy spatial referencing.\"],\n        AREA[\"Between 96°E and 102°E, northern hemisphere between equator and 84°N, onshore and offshore. China. Indonesia. Laos. Malaysia - West Malaysia. Mongolia. Myanmar (Burma). Russian Federation. Thailand.\"],\n        BBOX[0,96,84,102]],\n    ID[\"EPSG\",32647]]\n```\n\n\n:::\n:::\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}