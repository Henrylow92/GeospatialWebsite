---
title: "In Class Exercise 02"
author: "Henry Low"
date: "Sep 2 2024"
date-modified: "last-modified"
execute:
  evalu: true
  echo: true
  message: false
  freeze: true
format: html
editor: visual
date-format: "DD MM YYYY"
---

## Loading the R packages

```{r}
#| eval: false
install.packages("maptools", repos = "https://packagemanager.posit.co/cran/2023-10-13")
```

```{r}
pacman::p_load(tidyverse, sf, tmap, ggstatsplot)
```



```{r}
# # Load costaloutline dataset
# sg_sf <- mpsz_sf %>%
#   st_union() # Can just use st_union instead of requiring costaloutline dataset
```



```{r}
# # Convert KDE output into grid object
# Using maptools
# gridded_kde_childcareSG_bw <- maptools::as.SpatialGridDataFrame.im(kde_childcareSG.bw) 
# spplot(gridded_kde_childcareSG_bw)

# Using sf geometry
# gridded_kde_childcareSG_ad <-  as(kde_childcareSG_adaptive, "SpatialGridDataFrame")
# spplot(gridded_kde_childcareSG_ad)
```


```{r}
# Ensure reproducibility
set.seed(42)
```

```{r}
# Generally dont have worry about edge correction for Singapopre
# But for specific area, need to be careful when specific points are too close to edge. 
```



```{r}
# Load road accidents
accidents <- read_csv("data/thai_road_accident_2019_2022.csv")

accidents_sf <- accidents %>%
  filter(!is.na(longitude) & longitude != "", !is.na(latitude) & latitude != "") %>%
  st_as_sf(coords = c("longitude", "latitude"), crs = 4326) %>%
  st_transform(crs = 32647)
```
```{r}
# Check
st_geometry(accidents_sf)
```

```{r}
# Check
st_crs(accidents_sf)
```
